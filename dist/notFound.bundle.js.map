{"version":3,"file":"notFound.bundle.js","mappings":"4DAwBA,SAASA,EAASC,GACjB,OAAOC,KAAKC,MAAcC,aAAaC,QAAQJ,GAChD,CAGA,SAASK,IACR,MAAMC,EAAcP,EAAS,SAC7B,MAAoB,SAAhBO,GAA0C,UAAhBA,EAAgCA,EAEvDC,OAAOC,WAAW,gCAAgCC,QAAU,OAAS,OAC7E,CAGA,SAASC,EAAiBC,EAAe,QACxC,MAAMC,EAAwB,SAAVD,EAAmB,QAAU,OAE3CE,EAAsBC,SAASC,uBAAuB,eAC5D,IAAK,MAAMC,KAAWH,EACrBG,EAAQC,UAAUC,QAAQ,UAAUP,IAAS,UAAUC,KAGxD,MAAMO,EAAuBL,SAASC,uBAAuB,gBAC7D,IAAK,MAAMC,KAAWG,EACrBH,EAAQC,UAAUC,QAAQ,UAAUP,IAAS,UAAUC,KACvDI,EAAQC,UAAUC,QAAQ,MAAMP,IAAS,MAAMC,IAEjD,CAGA,SAASQ,EAAST,GACH,SAAVA,GAAoBJ,OAAOC,WAAW,gCAAgCC,SACzEK,SAASO,gBAAgBC,aAAa,gBAAiB,QACvDZ,EAAiB,UAEjBI,SAASO,gBAAgBC,aAAa,gBAAiBX,GACvDD,EAAiBC,GAEnB,C,yFAGA,6BACC,MAAML,EAAcP,EAAS,SAC7B,GAAoB,UAAhBO,GAA2C,SAAhBA,EAAwB,CACtD,MAAMK,EAAQN,IAEd,OADAe,EAAST,GACFA,CACR,CACA,OAAOL,CACR,EAGA,0BACC,MAAMK,EAAQN,IAkBd,OAhBAe,EAAST,GAgBFA,CACR,C,GC9FIY,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CCrBAJ,EAAoBO,EAAKH,IACH,oBAAXI,QAA0BA,OAAOC,aAC1CC,OAAOC,eAAeP,EAASI,OAAOC,YAAa,CAAEG,MAAO,WAE7DF,OAAOC,eAAeP,EAAS,aAAc,CAAEQ,OAAO,GAAO,E,MCM9D,QAEA,cAE8B,iBAAkBC,OAI/C9B,OAAO+B,iBAAiB,mBAAoB,EAAAC,cAC5ChC,OAAOC,WAAW,gCAAgC8B,iBAAiB,SAAU,EAAAE,iB","sources":["webpack:///./source/global-theming.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/make namespace object","webpack:///./source/404.ts"],"sourcesContent":["/*\r\n\r\n  Theming functions for Gamma MCA.\r\n\r\n  Parts are taken from the color mode toggler for Bootstrap's docs (https://getbootstrap.com/) and remixed.\r\n  Copyright 2011-2023 The Bootstrap Authors\r\n  Licensed under the Creative Commons Attribution 3.0 Unported License.\r\n\r\n  Gamma MCA: free, open-source web-MCA for gamma spectroscopy\r\n  2023, NuclearPhoenix.- Phoenix1747\r\n  https://nuclearphoenix.xyz\r\n\r\n*/\r\n\r\nexport type Theme = 'dark' | 'light' | 'auto';\r\n\r\n/*\r\nfunction saveJSON(name: string, value: string | boolean | number): boolean {\r\n\tlocalStorage.setItem(name, JSON.stringify(value));\r\n\treturn true;\r\n}\r\n*/\r\n\r\n\r\nfunction loadJSON(name: string): unknown {\r\n\treturn JSON.parse(<string>localStorage.getItem(name));\r\n}\r\n\r\n\r\nfunction getPreferredTheme(): Theme {\r\n\tconst storedTheme = loadJSON('theme');\r\n\tif (storedTheme === 'dark' || storedTheme === 'light') return storedTheme;\r\n\r\n\treturn window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\r\n}\r\n\r\n\r\nfunction changeTabBorders(theme: Theme = 'dark'): void {\r\n\tconst borderColor = theme === 'dark' ? 'light' : 'dark';\r\n\r\n\tconst boarderModeElements = document.getElementsByClassName('border-mode');\r\n\tfor (const element of boarderModeElements) {\r\n\t\telement.classList.replace(`border-${theme}`, `border-${borderColor}`);\r\n\t}\r\n\r\n\tconst boarderThemeElements = document.getElementsByClassName('border-theme');\r\n\tfor (const element of boarderThemeElements) {\r\n\t\telement.classList.replace(`border-${theme}`, `border-${borderColor}`);\r\n\t\telement.classList.replace(`bg-${theme}`, `bg-${borderColor}`);\r\n\t}\r\n}\r\n\r\n\r\nfunction setTheme(theme: Theme): void {\r\n\tif (theme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n\t\tdocument.documentElement.setAttribute('data-bs-theme', 'dark');\r\n\t\tchangeTabBorders('dark');\r\n\t} else {\r\n\t\tdocument.documentElement.setAttribute('data-bs-theme', theme);\r\n\t\tchangeTabBorders(theme);\r\n\t}\r\n}\r\n\r\n\r\nexport function autoThemeChange(): Theme {\r\n\tconst storedTheme = loadJSON('theme');\r\n\tif (storedTheme !== 'light' && storedTheme !== 'dark') { // Only change if theme is not set or auto\r\n\t\tconst theme = getPreferredTheme();\r\n\t\tsetTheme(theme);\r\n\t\treturn theme;\r\n\t}\r\n\treturn storedTheme;\r\n}\r\n\r\n\r\nexport function applyTheming(): Theme {\r\n\tconst theme = getPreferredTheme();\r\n\r\n\tsetTheme(theme); // Apply theme\r\n\r\n\t/*\r\n\t// Add event listener to theming toggle buttons\r\n\tdocument.querySelectorAll('[data-bs-theme-value]').forEach(toggle => {\r\n\t\ttoggle.addEventListener('click', () => {\r\n\t\t\tconst theme = <Theme | null>toggle.getAttribute('data-bs-theme-value');\r\n\r\n\t\t\tif (theme) {\r\n\t\t\t\tsaveJSON('theme', theme);\r\n\t\t\t\tsetTheme(theme);\r\n\t\t\t}\r\n\t\t})\r\n\t});\r\n\t*/\r\n\r\n\treturn theme;\r\n}\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/*\r\n\r\n  Typescript for the 404 page used for applying all the right theming.\r\n\r\n  Gamma MCA: free, open-source web-MCA for gamma spectroscopy\r\n  2023, NuclearPhoenix.- Phoenix1747\r\n  https://nuclearphoenix.xyz\r\n\r\n*/\r\n\r\n// Import the main CSS file\r\nimport './main.scss';\r\n\r\nimport { applyTheming, autoThemeChange } from './global-theming';\r\n\r\nconst localStorageAvailable = 'localStorage' in self; // Test for localStorage, for old browsers\r\n\r\n// Apply theming and auto-detection\r\nif (localStorageAvailable) {\r\n\twindow.addEventListener('DOMContentLoaded', applyTheming);\r\n\twindow.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', autoThemeChange);\r\n}\r\n"],"names":["loadJSON","name","JSON","parse","localStorage","getItem","getPreferredTheme","storedTheme","window","matchMedia","matches","changeTabBorders","theme","borderColor","boarderModeElements","document","getElementsByClassName","element","classList","replace","boarderThemeElements","setTheme","documentElement","setAttribute","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","r","Symbol","toStringTag","Object","defineProperty","value","self","addEventListener","applyTheming","autoThemeChange"],"sourceRoot":""}