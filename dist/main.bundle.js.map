{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack:///./source/global-theming.ts","webpack:///./source/notifications.ts","webpack:///./source/plot.ts","webpack:///./source/raw-data.ts","webpack:///./source/serial.ts","webpack:///./source/lib/regression/Matrix.min.js","webpack:///./source/lib/regression/DataPoint.min.js","webpack:///./source/lib/regression/PolynomialRegression.min.js","webpack:///./source/lib/webusbserial-min.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./source/main.ts"],"sourcesContent":["/*\r\n\r\n  Theming functions for Gamma MCA.\r\n\r\n  Parts are taken from the color mode toggler for Bootstrap's docs (https://getbootstrap.com/) and remixed.\r\n  Copyright 2011-2023 The Bootstrap Authors\r\n  Licensed under the Creative Commons Attribution 3.0 Unported License.\r\n\r\n  Gamma MCA: free, open-source web-MCA for gamma spectroscopy\r\n  2023, NuclearPhoenix.- Phoenix1747\r\n  https://nuclearphoenix.xyz\r\n\r\n*/\r\n\r\nexport type Theme = 'dark' | 'light' | 'auto';\r\n\r\n/*\r\nfunction saveJSON(name: string, value: string | boolean | number): boolean {\r\n\tlocalStorage.setItem(name, JSON.stringify(value));\r\n\treturn true;\r\n}\r\n*/\r\n\r\n\r\nfunction loadJSON(name: string): any {\r\n\treturn JSON.parse(<string>localStorage.getItem(name));\r\n}\r\n\r\n\r\nfunction getPreferredTheme(): Theme {\r\n\tconst storedTheme = loadJSON('theme');\r\n\tif (storedTheme !== 'auto') return storedTheme;\r\n\r\n\treturn window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\r\n}\r\n\r\n\r\nfunction changeTabBorders(theme: Theme = 'dark'): void {\r\n\tconst borderColor = theme === 'dark' ? 'light' : 'dark';\r\n\r\n\tconst boarderModeElements = document.getElementsByClassName('border-mode');\r\n\tfor (const element of boarderModeElements) {\r\n\t\telement.classList.replace(`border-${theme}`, `border-${borderColor}`);\r\n\t}\r\n\r\n\tconst boarderThemeElements = document.getElementsByClassName('border-theme');\r\n\tfor (const element of boarderThemeElements) {\r\n\t\telement.classList.replace(`border-${theme}`, `border-${borderColor}`);\r\n\t\telement.classList.replace(`bg-${theme}`, `bg-${borderColor}`);\r\n\t}\r\n}\r\n\r\n\r\nfunction setTheme(theme: Theme): void {\r\n\tif (theme === 'auto' && window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n\t\tdocument.documentElement.setAttribute('data-bs-theme', 'dark');\r\n\t\tchangeTabBorders('dark');\r\n\t} else {\r\n\t\tdocument.documentElement.setAttribute('data-bs-theme', theme);\r\n\t\tchangeTabBorders(theme);\r\n\t}\r\n}\r\n\r\n\r\nexport function autoThemeChange(): Theme {\r\n\tconst storedTheme = loadJSON('theme');\r\n\tif (storedTheme !== 'light' && storedTheme !== 'dark') { // Only change if theme is not set or auto\r\n\t\tconst theme = getPreferredTheme();\r\n\t\tsetTheme(theme);\r\n\t\treturn theme;\r\n\t}\r\n\treturn storedTheme;\r\n}\r\n\r\n\r\nexport function applyTheming(): Theme {\r\n\tconst theme = getPreferredTheme();\r\n\r\n\tsetTheme(theme); // Apply theme\r\n\r\n\t/*\r\n\t// Add event listener to theming toggle buttons\r\n\tdocument.querySelectorAll('[data-bs-theme-value]').forEach(toggle => {\r\n\t\ttoggle.addEventListener('click', () => {\r\n\t\t\tconst theme = <Theme | null>toggle.getAttribute('data-bs-theme-value');\r\n\r\n\t\t\tif (theme) {\r\n\t\t\t\tsaveJSON('theme', theme);\r\n\t\t\t\tsetTheme(theme);\r\n\t\t\t}\r\n\t\t})\r\n\t});\r\n\t*/\r\n\r\n\treturn theme;\r\n}\r\n\r\n","/*\r\n\r\n  Create and auto-delete notifications via Bootstrap Toasts.\r\n\r\n  Gamma MCA: free, open-source web-MCA for gamma spectroscopy\r\n  2023, NuclearPhoenix.- Phoenix1747\r\n  https://nuclearphoenix.xyz\r\n\r\n*/\r\n\r\ninterface NotificationData {\r\n\ttype: string;\r\n\tdelay?: number;\r\n\ticon: string;\r\n\theader: string;\r\n\tbody: string;\r\n}\r\n\r\ninterface NotificationStorage {\r\n\t[key: string]: NotificationData | undefined;\r\n}\r\n\r\n\r\nconst notificationContents: NotificationStorage = {\r\n\t'updateInstalled': {\r\n\t\ttype: 'info',\r\n\t\ticon: 'fa-solid fa-cloud-arrow-down fa-beat animation-slow',\r\n\t\theader: 'Installed Update',\r\n\t\tbody: 'An update has been found and installed. You must reload Gamma MCA for the changes to take effect. <br><br>' +\r\n\t\t\t\t'<em>You can also continue on this page without reloading for now.</em>'\r\n\t},\r\n\t'fileError': {\r\n\t\ttype: 'danger',\r\n\t\tdelay: 6000,\r\n\t\ticon: 'fas fa-exclamation-triangle fa-shake',\r\n\t\theader: 'File Error',\r\n\t\tbody: 'Something went wrong, please reload and try again or report this issue.'\r\n\t},\r\n\t'settingError': {\r\n\t\ttype: 'danger',\r\n\t\tdelay: 4000,\r\n\t\ticon: 'fas fa-exclamation-triangle fa-shake',\r\n\t\theader: 'Settings Error',\r\n\t\tbody: 'Something went wrong when trying to change a settings value, please reload and try again or report this issue.'\r\n\t},\r\n\t'settingType': {\r\n\t\ttype: 'danger',\r\n\t\tdelay: 4000,\r\n\t\ticon: 'fas fa-exclamation-triangle fa-shake',\r\n\t\theader: 'Wrong Datatype',\r\n\t\tbody: 'A settings value cannot be changed because the input value datatype is not correct.'\r\n\t},\r\n\t'settingSuccess': {\r\n\t\ttype: 'success',\r\n\t\tdelay: 2000,\r\n\t\ticon: 'fas fa-check-circle fa-beat animation-slow',\r\n\t\theader: 'Changed Setting',\r\n\t\tbody: 'A settings value has been changed successfully.'\r\n\t},\r\n\t'serialConnectError': {\r\n\t\ttype: 'danger',\r\n\t\tdelay: 8000,\r\n\t\ticon: 'fas fa-exclamation-triangle fa-shake',\r\n\t\theader: 'Serial Connection Error',\r\n\t\tbody: 'Could not connect to the serial device. Maybe the port is already in use?'\r\n\t},\r\n\t'miscSerialError': {\r\n\t\ttype: 'danger',\r\n\t\tdelay: 8000,\r\n\t\ticon: 'fas fa-exclamation-triangle fa-shake',\r\n\t\theader: 'Serial Error',\r\n\t\tbody: 'Something went terribly wrong when trying to read from the serial port! Did you disconnect the device? Please try again.'\r\n\t},\r\n\t'serialDisconnect': {\r\n\t\ttype: 'info',\r\n\t\tdelay: 5000,\r\n\t\ticon: 'fas fa-info-circle fa-beat animation-slow',\r\n\t\theader: 'Serial Disconnect',\r\n\t\tbody: 'A serial device was removed.'\r\n\t},\r\n\t'autoStop': {\r\n\t\ttype: 'info',\r\n\t\ticon: 'fas fa-info-circle fa-beat animation-slow',\r\n\t\theader: 'Recording Stopped',\r\n\t\tbody: 'Your set time-limit has run out. The recording has been automatically stopped. Changing this limit can be done in the settings.'\r\n\t},\r\n\t/*\r\n\t'npesError': {\r\n\t\ttype: 'danger',\r\n\t\tdelay: 6000,\r\n\t\ticon: 'fas fa-exclamation-triangle fa-shake',\r\n\t\theader: 'JSON Import Error',\r\n\t\tbody: 'The file you uploaded is not formatted correctly. It does not validate the NPES JSON Schema!' +\r\n\t\t\t\t'For more information, please head to <a title=\"GitHub/NPES-JSON\" class=\"link-light link-underline-opacity-50 link-underline-opacity-100-hover\" href=\"https://github.com/OpenGammaProject/NPES-JSON\" target=\"_blank\">NPES-JSON</a>.' +\r\n\t\t\t\t'<br> <br>' +\r\n\t\t\t\t'<em>Tip: You can open the browser console to look at the exact errors.</em>'\r\n\t},\r\n\t*/\r\n\t'dataError': {\r\n\t\ttype: 'danger',\r\n\t\tdelay: 6000,\r\n\t\ticon: 'fas fa-exclamation-triangle fa-shake',\r\n\t\theader: 'File Error',\r\n\t\tbody: 'Background and spectrum have a different number of channels. They must be same for this to work.'\r\n\t},\r\n\t'fileEmptyError': {\r\n\t\ttype: 'warning',\r\n\t\tdelay: 6000,\r\n\t\ticon: 'fas fa-exclamation-triangle fa-shake',\r\n\t\theader: 'No Data',\r\n\t\tbody: 'You are trying to export a file, but there is not data to export. Please try again when there is data to export.'\r\n\t},\r\n\t'smaError': {\r\n\t\ttype: 'danger',\r\n\t\tdelay: 6000,\r\n\t\ticon: 'fas fa-exclamation-triangle fa-shake',\r\n\t\theader: 'SMA Error',\r\n\t\tbody: 'SMA input is invalid. Input must be an <em>integer</em>!'\r\n\t},\r\n\t'calibrationApplyError': {\r\n\t\ttype: 'danger',\r\n\t\tdelay: 6000,\r\n\t\ticon: 'fas fa-exclamation-triangle fa-shake',\r\n\t\theader: 'Calibration Error',\r\n\t\tbody: 'Cannot calibrate. Need at least two calibration points with valid numbers!'\r\n\t},\r\n\t'calibrationImportError': {\r\n\t\ttype: 'danger',\r\n\t\tdelay: 6000,\r\n\t\ticon: 'fas fa-exclamation-triangle fa-shake',\r\n\t\theader: 'Calibration Import Error',\r\n\t\tbody: 'Something went wrong when importing the calibration. Please reload and try again or report this issue.'\r\n\t},\r\n\t'serialConnect': {\r\n\t\ttype: 'info',\r\n\t\tdelay: 5000,\r\n\t\ticon: 'fas fa-info-circle fa-beat animation-slow',\r\n\t\theader: 'Serial Connect',\r\n\t\tbody: 'Detected a new serial device.'\r\n\t},\r\n\t'welcomeMessage': {\r\n\t\ttype: 'primary',\r\n\t\ticon: 'fas fa-radiation fa-beat animation-slow',\r\n\t\theader: 'Welcome!',\r\n\t\tbody: '<p>Thank you for using Gamma MCA, please report any bugs or issues on <a title=\"GitHub/Issues\" class=\"link-light link-underline-opacity-50 link-underline-opacity-100-hover\" href=\"https://github.com/OpenGammaProject/Gamma-MCA/issues\" target=\"_blank\"><small><i class=\"fa-solid fa-link\"></i></small> GitHub/Issues</a>.</p>' +\r\n\t\t\t\t'<p>If you\\'re new to this, you can have a look at the trailer on <a title=\"Youtube Trailer\" class=\"link-light link-underline-opacity-50 link-underline-opacity-100-hover\" href=\"https://www.youtube.com/watch?v=dkMhoUwDla0\" target=\"_blank\"><small><i class=\"fa-brands fa-youtube\"></i></small> Youtube</a>.</p>'\r\n\t},\r\n\t'saveMultipleAtOnce': {\r\n\t\ttype: 'warning',\r\n\t\tdelay: 8000,\r\n\t\ticon: 'fas fa-exclamation-triangle fa-shake',\r\n\t\theader: 'File Save Error',\r\n\t\tbody: '<p>You tried to save (overwrite) multiple files at once. This is not supported due to the risk of data loss.</p>' +\r\n\t\t\t\t'<p>If you want to combine and save data from different files, please use the <code>Save As</code> function.</p>'\r\n\t},\r\n\t'saveFile': {\r\n\t\ttype: 'success',\r\n\t\tdelay: 3000,\r\n\t\ticon: 'fas fa-check-circle fa-beat animation-slow',\r\n\t\theader: 'Saved File',\r\n\t\tbody: 'Successfully saved data to the file system.'\r\n\t},\r\n\t'reportError': {\r\n\t\ttype: 'warning',\r\n\t\tdelay: 5000,\r\n\t\ticon: 'fas fa-exclamation-triangle fa-shake',\r\n\t\theader: 'Missing Data',\r\n\t\tbody: 'Cannot generate a report since there is no data. Please try again when there is data to analyze.'\r\n\t},\r\n};\r\n\r\nexport class ToastNotification {\r\n\tprivate toastElement: HTMLElement | undefined;\r\n\tprivate toast: any | undefined;\r\n\tprivate toastContainer: HTMLElement | null;\r\n\r\n\tconstructor(type: string) {\r\n\t\tthis.toastContainer = document.getElementById('toast-container');\r\n\t\tif (!this.toastContainer) {\r\n\t\t\tconsole.error('Toast container does not exist:', this.toastContainer);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst content = notificationContents[type];\r\n\t\tif (!content) {\r\n\t\t\tconsole.error('Not a valid notification:', type, content);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst root = document.createElement('div');\r\n\t\troot.className = `toast text-bg-${content.type}`;\r\n\t\troot.setAttribute('role', 'alert');\r\n\t\troot.setAttribute('aria-live', 'assertive');\r\n\t\troot.setAttribute('aria-atomic', 'true');\r\n\t\tif (content.delay) {\r\n\t\t\troot.setAttribute('data-bs-autohide', 'true');\r\n\t\t\troot.setAttribute('data-bs-delay', content.delay.toString());\r\n\t\t} else {\r\n\t\t\troot.setAttribute('data-bs-autohide', 'false');\r\n\t\t}\r\n\r\n\t\tconst toastHeader = document.createElement('div');\r\n\t\troot.appendChild(toastHeader);\r\n\t\ttoastHeader.className = 'toast-header';\r\n\t\ttoastHeader.innerHTML = `<i class=\"${content.icon} me-2\"></i> <strong class=\"me-auto\">${content.header}</strong>` +\r\n\t\t\t\t\t\t\t\t`<small>${new Date().toLocaleString()}</small>` +\r\n\t\t\t\t\t\t\t\t'<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>';\r\n\r\n\t\tconst toastBody = document.createElement('div');\r\n\t\troot.appendChild(toastBody);\r\n\t\ttoastBody.className = 'toast-body';\r\n\t\ttoastBody.innerHTML = content.body;\r\n\r\n\t\tthis.toastContainer.appendChild(root);\r\n\t\tthis.toastElement = root;\r\n\r\n\t\t/*\r\n\t\tthis.toastElement.addEventListener('shown.bs.toast', () => {\r\n\t\t\tconsole.log('Hello there!');\r\n\t\t});\r\n\t\t*/\r\n\r\n\t\tthis.toastElement.addEventListener('hidden.bs.toast', () => {\r\n\t\t\tif (this.toastElement) this.toastContainer?.removeChild(this.toastElement);\r\n\t\t\t\r\n\t\t\tthis.toastElement = undefined;\r\n\t\t\tthis.toast = undefined;\r\n\t\t});\r\n\r\n\t\tthis.toast = new (<any>window).bootstrap.Toast(root);\r\n\t\tthis.toast.show();\r\n\t}\r\n\r\n\t/*\r\n\tshow(): void {\r\n\r\n\t}\r\n\r\n\thide(): void {\r\n\r\n\t}\r\n\r\n\tdelete(): void {\r\n\r\n\t}\r\n\t*/\r\n}\r\n\r\n\r\nexport function launchSysNotification(title: string, body: string, forceShow: boolean = false): void {\r\n\t// Launch a system notification using the Notifications API\r\n\tif (document.visibilityState === 'hidden' || forceShow) {\r\n\t\tnew Notification(title, {\r\n\t\t\tlang: 'en-US', // Notification language code\r\n\t\t\tbadge: '/assets/notifications/badge.png', // Notification image that shows if there isn't enough space for the notification text\r\n\t\t\tbody: body, // Notification body text\r\n\t\t\t//image: '/assets/files/json.png', // Large image for notification, not avail in firefox\r\n\t\t\ticon: '/assets/notifications/icon.png' // Small image for notification\r\n\t\t});\r\n\t}\r\n}\r\n","/*\r\n\r\n  Plot spectra using Plotly JS and do some filtering + statistics.\r\n\r\n  Gamma MCA: free, open-source web-MCA for gamma spectroscopy\r\n  2022, NuclearPhoenix.- Phoenix1747\r\n  https://nuclearphoenix.xyz\r\n\r\n*/\r\n\r\nimport PolynomialRegression from './lib/regression/PolynomialRegression.min';\r\nimport { SpectrumData, IsotopeList } from './main';\r\n\r\nexport interface CoeffObj {\r\n  c1: number;\r\n  c2: number;\r\n  c3: number;\r\n  [index: string]: number;\r\n}\r\n\r\nexport type PeakModes = 'gaussian' | 'energy' | 'isotopes' | undefined;\r\nexport type DownloadFormat = 'svg' | 'png' | 'jpeg' | 'webp';\r\n\r\ntype ChartType = 'default' | 'evolution' | 'calibration';\r\n\r\ninterface LegacyIsotopeList {\r\n  [key: number]: string | undefined;\r\n}\r\n\r\ninterface GaussData {\r\n  dataArray: number[][];\r\n  sigma: number;\r\n}\r\n\r\ninterface Shape {\r\n  type: string;\r\n  xref: string;\r\n  yref: string;\r\n  x0: number;\r\n  y0: number;\r\n  x1: number;\r\n  y1: number;\r\n  editable?: boolean;\r\n  line: {\r\n      color: string;\r\n      width: number;\r\n      dash: string;\r\n  };\r\n  opacity?: number;\r\n}\r\n\r\ninterface Anno {\r\n  x: number;\r\n  y: number;\r\n  xref: string;\r\n  yref: string;\r\n  text: string;\r\n  showarrow: boolean;\r\n  arrowhead: number;\r\n  arrowcolor?: string;\r\n  ax: number;\r\n  ay: number;\r\n  editable?: boolean;\r\n  arrowsize?: number;\r\n  hovertext: string;\r\n  font: {\r\n    size: number;\r\n  };\r\n  bgcolor?: string;\r\n}\r\n\r\ninterface CoeffPoints {\r\n  aFrom: number;\r\n  aTo: number;\r\n  bFrom: number;\r\n  bTo: number;\r\n  cFrom: number | undefined;\r\n  cTo: number | undefined;\r\n  [index: string]: number | undefined;\r\n}\r\n\r\ninterface Trace {\r\n  name: string;\r\n  stackgroup?: string;\r\n  x: number[];\r\n  y: number[];\r\n  type: 'scatter';\r\n  yaxis?: string;\r\n  mode: 'lines' | 'markers' | 'lines+markers' | 'text+markers';\r\n  fill?: string;\r\n  opacity?: number;\r\n  line?: {\r\n    color?: string;\r\n    width?: number;\r\n    shape?: 'linear' | 'hvh' | 'spline'\r\n  };\r\n  marker?: {\r\n    color?: string;\r\n    size?: number;\r\n    symbol?: string\r\n  },\r\n  width?: number;\r\n  text?: string[];\r\n  textposition?: string;\r\n}\r\n\r\n/*\r\n  Seek the closest matching isotope by energy from an isotope list\r\n*/\r\nexport class SeekClosest {\r\n  static seekWidth = 2;\r\n  isoList: LegacyIsotopeList;\r\n\r\n  constructor(list: IsotopeList) {\r\n    const conversionList: LegacyIsotopeList = {}; // Convert new isotope list to a legacy list that is easier to iterate\r\n\r\n    const isotopeEntry = Object.keys(list);\r\n    for (const key of isotopeEntry) {\r\n      const gammaLines = list[key];\r\n      for (const line of gammaLines) {\r\n        conversionList[line] = key;\r\n      }\r\n    }\r\n\r\n    this.isoList = conversionList;\r\n  }\r\n  \r\n  seek(value: number, maxDist = SeekClosest.seekWidth): {energy: number, name: string} | {energy: undefined, name: undefined} {\r\n    // Only allow closest values and disregard undefined\r\n    const closeVals = Object.keys(this.isoList).filter(energy => energy ? (Math.abs(parseFloat(energy) - value) <= maxDist) : false);\r\n    const closeValsNum = closeVals.map(energy => parseFloat(energy)) // After this step there are 100% only numbers left\r\n  \r\n    if (closeValsNum.length) {\r\n      const closest = closeValsNum.reduce((prev, curr) => Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev);\r\n      const endResult = this.isoList[closest];\r\n\r\n      if (endResult) return {energy: closest, name: endResult};\r\n    }\r\n    return {energy: undefined, name: undefined};\r\n  }\r\n}\r\n\r\n/*\r\n  Compute the FWHM and energy resolution of peaks. Takes a list of peaks and the calibrated axis \r\n*/\r\nexport class CalculateFWHM {\r\n  static resolutionLimit = 0.5; // Worst energy res a peak can have before computation just stops for performance reasons; in %\r\n  static fastMode = false; // Better performance by assuming peaks are perfectly symmetrical\r\n\r\n  private readonly peakList: number[];\r\n  private readonly calibratedBins: number[];\r\n  private readonly yAxis: number[]\r\n  \r\n  constructor(peakList: number[], calibratedBins: number[], yAxis: number[]) {\r\n    this.peakList = peakList.sort((a, b) => a - b); // Sort numerically\r\n    this.calibratedBins = calibratedBins;\r\n    this.yAxis = yAxis;\r\n  }\r\n\r\n  private energyToBin(): number[] {\r\n    const numberOfPeaks = this.peakList.length;\r\n    const axisLength = this.calibratedBins.length;\r\n    const binPeaks: number[] = [];\r\n    let compareIndex = 0;\r\n\r\n    for (let i = 0; i < axisLength; i++) {\r\n      const value = this.calibratedBins[i];\r\n      const compareValue = this.peakList[compareIndex];\r\n\r\n      if (value > compareValue) {\r\n        binPeaks.push(i); // Can be off by +1, doesn't really matter though.\r\n        compareIndex++;\r\n\r\n        if (compareIndex >= numberOfPeaks) break; // All peaks have been found, break the loop\r\n      }\r\n    }\r\n\r\n    return binPeaks;\r\n  }\r\n\r\n  compute(): {[key: number]: number} {\r\n    const peakBins = this.energyToBin();\r\n    const peakFWHMs: {[key: number]: number} = {};\r\n\r\n    for (const index in peakBins) {\r\n      const peakBin = peakBins[index];\r\n      const peakEnergy = this.peakList[index];\r\n      //const peakEnergy = this.calibratedBins[peakBin];\r\n      const limitFWHM = peakEnergy * CalculateFWHM.resolutionLimit;\r\n      const limitMin = peakEnergy - limitFWHM / 2;\r\n      const halfHeight = this.yAxis[peakBin] / 2;\r\n\r\n      // Compute FWHM in left direction\r\n      let binLeft = peakBin;\r\n      let energyLeft = this.calibratedBins[binLeft];\r\n      let heightLeft = this.yAxis[binLeft];\r\n\r\n      while (energyLeft > limitMin && heightLeft > halfHeight) { // Break if too far away or if under half the height\r\n        binLeft--;\r\n        energyLeft = this.calibratedBins[binLeft];\r\n        heightLeft = this.yAxis[binLeft];\r\n      }\r\n\r\n      const avgLeft = (energyLeft + this.calibratedBins[binLeft + 1]) / 2;\r\n      const fwhmPartLeft = peakEnergy - avgLeft;\r\n\r\n      if (CalculateFWHM.fastMode) {\r\n        peakFWHMs[peakEnergy] = fwhmPartLeft * 2; // Assume perfectly symmetrical peak and FWHM\r\n        //peakFWHMs.push(fwhmPartLeft * 2); // Assume perfectly symmetrical peak and FWHM\r\n        continue;\r\n      }\r\n\r\n      // Compute FWHM in right direction\r\n      const limitMax = peakEnergy + limitFWHM / 2;\r\n\r\n      let binRight = peakBin;\r\n      let energyRight = this.calibratedBins[binRight];\r\n      let heightRight = this.yAxis[binRight];\r\n\r\n      while (energyRight < limitMax && heightRight > halfHeight) {\r\n        binRight++;\r\n        energyRight = this.calibratedBins[binRight];\r\n        heightRight = this.yAxis[binRight];\r\n      }\r\n\r\n      const avgRight = (energyRight + this.calibratedBins[binRight - 1]) / 2;\r\n      const fwhmPartRight = avgRight - peakEnergy;\r\n      peakFWHMs[peakEnergy] = fwhmPartLeft + fwhmPartRight;\r\n      //peakFWHMs.push(fwhmPartLeft + fwhmPartRight);\r\n    }\r\n\r\n    return peakFWHMs;\r\n  }\r\n\r\n  getResolution(): {[key: number]: number} {\r\n    const peakFWHMs = this.compute();\r\n    const peakResolutions: {[key: number]: number} = {};\r\n\r\n    for (const [stringPeakEnergy, fwhm] of Object.entries(peakFWHMs)) {\r\n      const peakEnergy = parseFloat(stringPeakEnergy);\r\n      \r\n      peakResolutions[peakEnergy] = fwhm / peakEnergy;\r\n      //peakResolutions.push(fwhm / peakEnergy);\r\n    }\r\n\r\n    return peakResolutions;\r\n  }\r\n}\r\n\r\n/*\r\n  Plotly.js plot control everything\r\n*/\r\nexport class SpectrumPlot {\r\n  readonly plotDiv: HTMLElement | null;\r\n  private type: ChartType = 'default';\r\n  xAxis: 'linear' | 'log' = 'linear';\r\n  yAxis: 'linear' | 'log' = 'linear';\r\n  linePlot = false; // 'linear', 'hvh' for 'lines' or 'bar\r\n  downloadFormat: DownloadFormat = 'png';\r\n  darkMode = false;\r\n  private plotBgDark = '#3f4448';\r\n  private plotBgLight = '#ffffff';\r\n  private paperBgDark = '#212529';\r\n  private paperBgLight = '#ffffff';\r\n  private fontColorLight = '#444444';\r\n  private fontColorDark = '#dee2e6';\r\n  private gridColorLight = '#eeeeee';\r\n  private gridColorDark = '#515151';\r\n  private annoBgLight = 'rgba(255,255,255,0.4)';\r\n  private annoBgDark = 'rgba(0,0,0,0.4)';\r\n  cpsSwitchLimit = 1; // Limit of cps below which plot will switch to cpm\r\n  evolutionPointLimit = 10_000; // Limits the number of points for the evolution chart to help performance\r\n  sma = false; // Simple Moving Average\r\n  smaLength = 8;\r\n  calibration = {\r\n    enabled: false,\r\n    imported: false,\r\n    points: <CoeffPoints>{\r\n      aFrom: 0,\r\n      aTo: 0,\r\n      bFrom: 0,\r\n      bTo: 0,\r\n      cFrom: 0,\r\n      cTo: 0,\r\n    },\r\n    coeff: <CoeffObj>{\r\n      c1: 0,\r\n      c2: 0,\r\n      c3: 0,\r\n    },\r\n  };\r\n  cps = false;\r\n  private shapes: Shape[] = [];\r\n  private annotations: Anno[] = [];\r\n  editableMode = false;\r\n  isotopeSeeker: SeekClosest | undefined;\r\n  peakConfig = {\r\n    enabled: false,\r\n    mode: <PeakModes>undefined, // Gaussian Correlation: 0, Energy: 1 and Isotope: 2 modes\r\n    thres: 0.008,\r\n    lag: 50,\r\n    showFWHM: true,\r\n    newPeakStyle: true,\r\n    lines: <number[]>[]\r\n  };\r\n  gaussSigma = 2;\r\n  private customDownloadButton = {\r\n    name: 'downloadPlot',\r\n    title: 'Download plot as HTML',\r\n    icon: (<any>window).Plotly.Icons['disk'],\r\n    direction: 'up',\r\n    click: (plotElement: any) => {\r\n      const newLayout = JSON.parse(JSON.stringify(plotElement.layout));\r\n      newLayout.images[0].source = new URL('/assets/logo.svg', window.location.origin).href;\r\n\r\n      const newAnno = {\r\n        x: 1,\r\n        y: 0,\r\n        opacity: 0.9,\r\n        xref: 'paper',\r\n        yref: 'paper',\r\n        xanchor: 'right',\r\n        yanchor: 'bottom',\r\n        text: window.location.origin,\r\n        showarrow: false,\r\n        font: {\r\n          size: 10,\r\n        },\r\n      };\r\n      newLayout.annotations.push(newAnno);\r\n\r\n      //let newConfig = JSON.parse(JSON.stringify(plotElement.config));\r\n      //delete newConfig.modeBarButtonsToAdd; // remove this section, otherwise there will be problems!\r\n\r\n      const scriptUrl = new URL('https://cdnjs.cloudflare.com/ajax/libs/plotly.js/2.29.0/plotly-basic.min.js', window.location.origin);\r\n      const config = {\r\n        responsive: true,\r\n        displaylogo: false,\r\n        toImageButtonOptions: {\r\n          filename: 'gamma_mca_export',\r\n        }\r\n      };\r\n\r\n      const text = `\\\r\n      <!DOCTYPE html>\r\n      <!-- Gamma MCA Interactive Export Version 1.2 by NuclearPhoenix. https://spectrum.nuclearphoenix.xyz. -->\r\n      <html>\r\n        <head>\r\n          <meta charset=\"utf-8\">\r\n        </head>\r\n        <body style=\"margin:0;padding:0\">\r\n          <div id=\"plotly-output\" style=\"width:99vw;height:99vh\"></div>\r\n          <script src=\"${scriptUrl}\"></script>\r\n          <script type=\"text/javascript\">Plotly.newPlot('plotly-output',${JSON.stringify(plotElement.data)},${JSON.stringify(newLayout)},${JSON.stringify(config)})</script>\r\n        </body>\r\n      </html>\\\r\n      `;\r\n\r\n      const element = document.createElement('a');\r\n      element.setAttribute('href', `data:text/plain;charset=utf-8,${encodeURIComponent(text)}`);\r\n      element.setAttribute('download', 'gamma_mca_export.html');\r\n      element.style.display = 'none';\r\n      element.click();\r\n  }};\r\n  private customFullscreenButton = {\r\n    name: 'fullscreen',\r\n    title: 'Toggle Fullscreen',\r\n    icon: (<any>window).Plotly.Icons['drawrect'],\r\n    direction: 'up',\r\n    click: (plotElement: any) => {\r\n      plotElement.classList.toggle('fullscreen');\r\n      (<any>window).Plotly.update(plotElement);\r\n  }};\r\n  gaussValues: GaussData = {\r\n    dataArray: [],\r\n    sigma: 0\r\n  };\r\n\r\n  /*\r\n    Constructor\r\n  */\r\n  constructor(divId: string) {\r\n    this.plotDiv = document.getElementById(divId);\r\n  }\r\n  /*\r\n    Get An Array with Length == Data.length containing ascending numbers\r\n  */\r\n  private getXAxis(len: number, step: number = 1): number[] {\r\n    const xArray: number[] = [];\r\n    for (let i = 0; i < len; i += step) {\r\n      xArray.push(i);\r\n    }\r\n    return xArray;\r\n  }\r\n  /*\r\n    Delete calibration points and calibration coefficients\r\n  */\r\n  clearCalibration(): void {\r\n    this.calibration.points = <CoeffPoints>{\r\n      aFrom: 0,\r\n      aTo: 0,\r\n      bFrom: 0,\r\n      bTo: 0,\r\n      cFrom: 0,\r\n      cTo: 0,\r\n    };\r\n    this.calibration.coeff = <CoeffObj>{\r\n      c1: 0,\r\n      c2: 0,\r\n      c3: 0,\r\n    };\r\n    this.calibration.imported = false;\r\n  }\r\n  /*\r\n    Compute the coefficients used for calibration\r\n  */\r\n  async computeCoefficients(): Promise<void> {\r\n    const data = [\r\n      {\r\n        x: this.calibration.points.aFrom,\r\n        y: this.calibration.points.aTo\r\n      },\r\n      {\r\n        x: this.calibration.points.bFrom,\r\n        y: this.calibration.points.bTo\r\n      }\r\n    ];\r\n\r\n    if (this.calibration.points.cFrom && this.calibration.points.cTo) {\r\n      data.push({\r\n        x: this.calibration.points.cFrom,\r\n        y: this.calibration.points.cTo\r\n      })\r\n    }\r\n\r\n    const model = PolynomialRegression.read(data, data.length - 1); // Linear if only 2 points, else quadratic\r\n    const terms = model.getTerms();\r\n    \r\n    this.calibration.coeff.c1 = terms[2] ?? 0; // Reverse order, fallback 0 if only linear\r\n    this.calibration.coeff.c2 = terms[1];\r\n    this.calibration.coeff.c3 = terms[0];\r\n  }\r\n  /*\r\n    Get the calibrated x-axis using the values in this.calibration\r\n  */\r\n  getCalAxis(len: number): number[] {\r\n    const calArray: number[] = [];\r\n\r\n    const a = this.calibration.coeff.c1;\r\n    const k = this.calibration.coeff.c2;\r\n    const d = this.calibration.coeff.c3;\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      calArray.push(a * i**2 + k * i + d); // x1000 to convert keV to eV for the plot\r\n    }\r\n\r\n    return calArray;\r\n  }\r\n  /*\r\n    Get The Moving Average\r\n  */\r\n  private computeMovingAverage(target: number[], length = this.smaLength): number[] {\r\n    const newData: number[] = Array(target.length);\r\n    const half = Math.round(length/2);\r\n\r\n    for (let i = 0; i < newData.length; i++) { // Compute the central moving average\r\n      if (i >= half && i <= target.length - half - 1) { // Shortcut\r\n        const remainderIndexFactor = length % 2;\r\n\r\n        const addVal = target[i+half-remainderIndexFactor];\r\n        const removeVal = target[i-half];\r\n\r\n        newData[i] = newData[i - 1] + (addVal - removeVal) / length;\r\n        continue; // Skip other computation.\r\n      }\r\n\r\n      let val = 0;\r\n      let divider = 0;\r\n\r\n      for (let j = 0; j < length; j++) { // Slightly asymetrical to the right with even numbers of smaLength\r\n        if (j < half) {\r\n          if ((i - j) >= 0) {\r\n            val += target[i - j];\r\n            divider++;\r\n          }\r\n        } else {\r\n          if ((i - half+1 + j) < newData.length) {\r\n            val += target[i - half+1 + j];\r\n            divider++;\r\n          }\r\n        }\r\n      }\r\n      newData[i] = val / divider;\r\n    }\r\n    return newData;\r\n  }\r\n  /*\r\n    Clear all lines placed by the peak finder\r\n  */\r\n  clearPeakFinder(): void {\r\n    if (this.peakConfig.lines.length) {\r\n      const lines = this.peakConfig.lines\r\n      for (const line of lines) {\r\n        this.toggleLine(line, '', false);\r\n      }\r\n      this.peakConfig.lines = [];\r\n    }\r\n  }\r\n  /*\r\n    Show any peaks that have been found by marking in the plot\r\n  */\r\n  private drawPeakFinder(xAxis: number[], peakArray: number[], heightAxis: number[]): void {\r\n    for (let result of peakArray) {\r\n      const resultBin = Math.round(result);\r\n      const height = heightAxis[resultBin];\r\n      if (this.calibration.enabled) result = xAxis[resultBin];\r\n\r\n      if (height >= 0) {\r\n        if (this.peakConfig.mode === 'energy') {\r\n          this.toggleLine(result, Math.round(result).toString(), true, height);\r\n          this.peakConfig.lines.push(result);\r\n        } else if (this.peakConfig.mode === 'isotopes') { // Isotope Mode\r\n          if (!this.isotopeSeeker) throw 'No isotope seeker found!';\r\n\r\n          const { energy, name } = this.isotopeSeeker.seek(result/*, size*/);\r\n          if (energy && name) {\r\n            this.toggleLine(energy, name, true, height);\r\n            this.peakConfig.lines.push(energy);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /*\r\n    Find peaks in the height data by using two different moving averages\r\n  */\r\n  peakFinder(heightData: number[]): number[] {\r\n    this.clearPeakFinder();\r\n\r\n    const blankXAxis = this.getXAxis(heightData.length);\r\n\r\n    const longData = this.computeMovingAverage(heightData, this.peakConfig.lag);\r\n\r\n    const maxVal = Math.max(...heightData);\r\n    const peakLines: number[] = [];\r\n\r\n    const shortLen = heightData.length;\r\n\r\n    for (let i = 0; i < shortLen; i++) {\r\n      if (heightData[i] - longData[i] > this.peakConfig.thres * maxVal) peakLines.push(blankXAxis[i]);\r\n    }\r\n\r\n    let values: number[] = [];\r\n    peakLines.push(0);\r\n\r\n    const peakLen = peakLines.length;\r\n\r\n    const peakArray: number[] = [];\r\n\r\n    for (let i = 0; i < peakLen; i++) {\r\n      values.push(peakLines[i]);\r\n\r\n      if (Math.abs(peakLines[i + 1] - peakLines[i]) > 2) { // Check if adjacent bins, i.e. one connected peak\r\n        let result = 0;\r\n\r\n        if (values.length === 1) {\r\n          result = peakLines[i];\r\n        } else {\r\n          for (const val of values) {\r\n            result += val;\r\n          }\r\n          result /= values.length;\r\n        }\r\n\r\n        peakArray.push(result);\r\n\r\n        values = [];\r\n      }\r\n    }\r\n\r\n    return peakArray;\r\n  }\r\n  /*\r\n    Convenient Wrapper, could do more in the future\r\n  */\r\n  resetPlot(spectrumData: SpectrumData, cpsValues: number[] = []): void {\r\n    if (this.type === 'calibration') this.plotCalibration(spectrumData, false); // Plot calibration chart\r\n    if (this.type === 'evolution') this.plotEvolution(cpsValues, false); // Plot radiation evolution chart\r\n\r\n    this.plotData(spectrumData, false); // Update the default spectrum plot\r\n  }\r\n  /*\r\n    Convenient Wrapper, could do more in the future\r\n  */\r\n  updatePlot(spectrumData: SpectrumData, cpsValues: number[] = []): void {\r\n    if (this.type === 'calibration') this.plotCalibration(spectrumData, true); // Plot calibration chart\r\n    if (this.type === 'evolution') this.plotEvolution(cpsValues, true); // Plot radiation evolution chart\r\n\r\n    this.plotData(spectrumData, true); // Update the default spectrum plot\r\n  }\r\n  /*\r\n    Add a line\r\n  */\r\n  toggleLine(energy: number, name: string, enabled = true, height = -1): void {\r\n    //name = name.replaceAll('-',''); // Remove - to save space\r\n    const hovertext = energy.toFixed(2);\r\n\r\n    if (enabled) {\r\n      const newLine: Shape = {\r\n        type: 'line',\r\n        xref: 'x',\r\n        yref: 'paper',\r\n        x0: energy,\r\n        y0: 0,\r\n        x1: energy,\r\n        y1: 1,\r\n        //fillcolor: 'black',\r\n        editable: false,\r\n        line: {\r\n          color: 'blue',\r\n          width: 0.8,\r\n          dash: 'dot'\r\n        },\r\n        opacity: 0.66\r\n      };\r\n      const newAnno: Anno = {\r\n        x: this.xAxis === 'log' ? Math.log10(energy) : energy,\r\n        y: 1,\r\n        xref: 'x',\r\n        yref: 'paper',\r\n        text: name,\r\n        showarrow: true,\r\n        arrowcolor: this.darkMode ? this.fontColorDark : this.fontColorLight,\r\n        arrowhead: 7,\r\n        ax: 0,\r\n        ay: -20,\r\n        editable: false,\r\n        hovertext: hovertext,\r\n        font: {\r\n          size: 11,\r\n        },\r\n      };\r\n\r\n      if (height >= 0 && this.peakConfig.newPeakStyle) {\r\n        //newLine.yref = 'y';\r\n        newLine.y0 = 0;\r\n        //newLine.y1 = height;\r\n        newLine.y1 = 0;\r\n        newLine.line.width = 0;\r\n        //newLine.line.width = 2;\r\n\r\n        newAnno.y = (this.yAxis === 'log' ? Math.log10(height) : height) * 1.03;\r\n        newAnno.yref = 'y';\r\n        newAnno.arrowhead = 1;\r\n        newAnno.arrowsize = 0.8;\r\n        newAnno.ay = -40;\r\n        newAnno.bgcolor = this.darkMode ? this.annoBgDark : this.annoBgLight;\r\n      }\r\n\r\n      for (const shape of this.shapes) {\r\n        if (shape.x0 === newLine.x0) return;\r\n      }\r\n\r\n      for (const anno of this.annotations) {\r\n        if (anno.hovertext === newAnno.hovertext) return;\r\n      }\r\n\r\n      // Not a duplicate\r\n      this.shapes.push(newLine);\r\n      this.annotations.push(newAnno);\r\n    } else {\r\n      for (const i in this.shapes) {\r\n        if (this.shapes[i].x0 === energy) this.shapes.splice(parseInt(i),1);\r\n      }\r\n      for (const i in this.annotations) {\r\n        if (this.annotations[i].hovertext === hovertext) this.annotations.splice(parseInt(i),1);\r\n      }\r\n    }\r\n  }\r\n  /*\r\n    Clear annotations and shapes\r\n  */\r\n  clearAnnos(): void {\r\n    this.shapes = [];\r\n    this.annotations = [];\r\n  }\r\n  /*\r\n    Switch between different chart types\r\n  */\r\n  setChartType(type: ChartType, dataObj: SpectrumData, cpsValues: number[] = []): void {\r\n    this.type = type;\r\n\r\n    switch (type) {\r\n      case 'evolution': {\r\n        this.plotEvolution(cpsValues, false)\r\n        break;\r\n      }\r\n      case 'calibration': {\r\n        this.plotCalibration(dataObj, false)\r\n        break;\r\n      }\r\n      default: {\r\n        this.plotData(dataObj, false);\r\n      }\r\n    }\r\n  }\r\n  /*\r\n    Compute gaussValues for the Gaussian correlation filter\r\n  */\r\n  computeGaussValues(index: number, xMin: number, xMax: number): number[] {\r\n    const gaussValues: number[] = [];\r\n    for (let k = xMin; k < xMax; k++) {\r\n      gaussValues.push(Math.exp(- k * k / (2 * index)));\r\n    }\r\n\r\n    let avg = 0;\r\n    for (const value of gaussValues) {\r\n      avg += value;\r\n    }\r\n    avg /= (xMax - xMin);\r\n\r\n    let squaredSum = 0;\r\n    for (const value of gaussValues) {\r\n      squaredSum += (value - avg) * (value - avg);\r\n    }\r\n\r\n    for (const index in gaussValues) {\r\n      gaussValues[index] = (gaussValues[index] - avg) / squaredSum;\r\n    }\r\n\r\n    return gaussValues;\r\n  }\r\n  /*\r\n    Gaussian correlation filter using the PRA algorithm\r\n  */\r\n  private gaussianCorrel(data: number[], sigma = 2): number[] {\r\n    const correlValues = Array(data.length);\r\n    let computeNew = false;\r\n\r\n    // Only compute values once, until other factors change\r\n    if (data.length !== this.gaussValues.dataArray.length || sigma !== this.gaussValues.sigma) {\r\n      this.gaussValues.dataArray = Array(data.length);\r\n      this.gaussValues.sigma = sigma;\r\n      computeNew = true;\r\n    }\r\n\r\n    for (let index = 0; index < data.length; index++) {\r\n      const std = Math.sqrt(index);\r\n      const xMin = - Math.round(sigma * std);\r\n      const xMax = Math.round(sigma * std);\r\n\r\n      if (computeNew) this.gaussValues.dataArray[index] = this.computeGaussValues(index, xMin, xMax);\r\n\r\n      const gaussValues = this.gaussValues.dataArray[index];\r\n\r\n      let resultVal = 0;\r\n\r\n      for (let k = xMin; k < xMax; k++) {\r\n        resultVal += data[index + k] * gaussValues[k - xMin];\r\n      }\r\n\r\n      const value = (resultVal && resultVal > 0 ) ? resultVal : 0;\r\n      correlValues[index] = value;\r\n    }\r\n\r\n    const scalingFactor = .8 * Math.max(...data) / Math.max(...correlValues); // Scale GCF values depending on the spectrum data\r\n    correlValues.forEach((value, index, array) => array[index] = value * scalingFactor);\r\n\r\n    return correlValues;\r\n  }\r\n  /*\r\n    Limit array size by decreasing resolution/number of points to boost performance of plot refreshs\r\n  */\r\n  private limitArraySize(originalArray: number[], targetSize: number): number[] {\r\n    if (targetSize <= 1) {\r\n      return originalArray; // The original array is small enough to be printed without reducing resolution\r\n    }\r\n  \r\n    const resultArray: number[] = [];\r\n    const originalSize = originalArray.length;\r\n  \r\n    for (let i = 0; i < originalSize; i += targetSize) {\r\n      const chunk = originalArray.slice(i, i + targetSize);\r\n      const average = chunk.reduce((sum, value) => sum + value, 0) / chunk.length;\r\n      resultArray.push(average);\r\n    }\r\n  \r\n    return resultArray;\r\n  }\r\n  /*\r\n    Plot Radiation Evolution Chart\r\n  */\r\n  private plotEvolution(cpsValues: number[], update: boolean): void {\r\n    const targetSize = Math.ceil(cpsValues.length / this.evolutionPointLimit);\r\n    const xAxis = this.getXAxis(cpsValues.length, targetSize);\r\n    const yAxis = this.limitArraySize(cpsValues, targetSize);\r\n\r\n    const trace: Trace = {\r\n      name: 'Radiation Evolution',\r\n      x: xAxis,\r\n      y: yAxis,\r\n      mode: 'lines',\r\n      type: 'scatter',\r\n      //fill: 'tozeroy',\r\n      //opacity: 0.8,\r\n      line: {\r\n        color: 'orangered',\r\n        width: 1.5,\r\n        shape: 'spline'\r\n      }\r\n    };\r\n\r\n    const averageTrace: Trace = {\r\n      name: 'Moving Average',\r\n      x: xAxis,\r\n      y: this.computeMovingAverage(yAxis),\r\n      mode: 'lines',\r\n      type: 'scatter',\r\n      //fill: 'tozeroy',\r\n      //opacity: 0.8,\r\n      line: {\r\n        color: 'darkblue',\r\n        width: 2,\r\n        shape: 'spline'\r\n      }\r\n    };\r\n\r\n    const layout = {\r\n      uirevision: 1,\r\n      autosize: true, // Needed for resizing on update\r\n      title: 'Radiation Evolution',\r\n      hovermode: 'x',\r\n      legend: {\r\n        orientation: 'h',\r\n        y: -0.35,\r\n      },\r\n      xaxis: {\r\n        title: 'Measurement Point [1]',\r\n        mirror: true,\r\n        linewidth: 2,\r\n        autorange: true,\r\n        autorangeoptions: {\r\n          minallowed: 0\r\n        },\r\n        rangeslider: {\r\n          borderwidth: 1\r\n        },\r\n        showspikes: true, //Show spike line for X-axis\r\n        spikethickness: 1,\r\n        spikedash: 'solid',\r\n        spikecolor: 'blue',\r\n        spikemode: 'across',\r\n        ticksuffix: '',\r\n        hoverformat: ',.2~f',\r\n        exponentformat: 'none',\r\n        automargin: true,\r\n        gridcolor: this.darkMode ? this.gridColorDark : this.gridColorLight\r\n      },\r\n      yaxis: {\r\n        title: 'Counts Per Second [s<sup>-1</sup>]',\r\n        mirror: true,\r\n        linewidth: 2,\r\n        autorange: true,\r\n        showspikes: true, //Show spike line for Y-axis\r\n        spikethickness: 1,\r\n        spikedash: 'solid',\r\n        spikecolor: 'blue',\r\n        spikemode: 'across',\r\n        showticksuffix: 'last',\r\n        ticksuffix: 'cps',\r\n        //tickformat: '.02s',\r\n        hoverformat: '.4~s',\r\n        //showexponent: 'last',\r\n        exponentformat: 'SI',\r\n        automargin: true,\r\n        gridcolor: this.darkMode ? this.gridColorDark : this.gridColorLight\r\n      },\r\n      plot_bgcolor: this.darkMode ? this.plotBgDark : this.plotBgLight,\r\n      paper_bgcolor: this.darkMode ? this.paperBgDark : this.paperBgLight,\r\n      font: {\r\n        color:  this.darkMode ? this.fontColorDark : this.fontColorLight,\r\n      },\r\n      margin: {\r\n        l: 40,\r\n        r: 40,\r\n        b: 50,\r\n        t: 55,\r\n        //pad: 4,\r\n      },\r\n      images: [{\r\n        x: 0.99,\r\n        y: 0.99,\r\n        opacity: 0.4,\r\n        sizex: 0.15,\r\n        sizey: 0.15,\r\n        source: '/assets/logo.svg',\r\n        xanchor: 'right',\r\n        xref: 'paper',\r\n        yanchor: 'top',\r\n        yref: 'paper',\r\n      }],\r\n      annotations: <Anno[]>[]\r\n    };\r\n\r\n    const config = {\r\n      responsive: true,\r\n      scrollZoom: false,\r\n      //displayModeBar: true,\r\n      displaylogo: false,\r\n      toImageButtonOptions: {\r\n        format: this.downloadFormat,\r\n        filename: 'gamma_mca_evolution',\r\n      },\r\n      editable: this.editableMode,\r\n      modeBarButtons: <any[][]>[\r\n        ['zoom2d'],\r\n        ['zoomIn2d', 'zoomOut2d'],\r\n        ['autoScale2d', 'resetScale2d'],\r\n        ['toImage'],\r\n        [this.customDownloadButton],\r\n        [this.customFullscreenButton]\r\n      ]\r\n    };\r\n\r\n    (<any>window).Plotly[update ? 'react' : 'newPlot'](this.plotDiv, [trace, averageTrace], layout, config);\r\n  }\r\n  /*\r\n    Plot Calibration Chart\r\n  */\r\n  private plotCalibration(dataObj: SpectrumData, update: boolean): void {\r\n    const trace: Trace = {\r\n      name: 'Calibration',\r\n      x: this.getXAxis(dataObj.data.length),\r\n      y: this.getCalAxis(dataObj.data.length),\r\n      mode: 'lines', // Remove lines, \"lines\", \"none\"\r\n      type: 'scatter',\r\n      fill: 'tozeroy',\r\n      //opacity: 0.8,\r\n      line: {\r\n        color: 'orangered',\r\n        width: 1,\r\n      }\r\n    };\r\n\r\n    const markersTrace: Trace = {\r\n      name: 'Calibration Points',\r\n      x: [],\r\n      y: [],\r\n      mode: 'text+markers',\r\n      type: 'scatter',\r\n      marker: {\r\n        //symbol: 'cross-thin',\r\n        size: 8,\r\n        color: '#444444',\r\n        //line: {\r\n        //  color: 'black',\r\n        //  width: 2\r\n        //}\r\n      },\r\n      text: [],\r\n      textposition: 'top center',\r\n    };\r\n\r\n    if (this.calibration.points) {\r\n      const charArr = ['a', 'b', 'c'];\r\n      for (const index in charArr) {\r\n        const char = charArr[index];\r\n        const fromVar = `${char}From`;\r\n        const toVar = `${char}To`;\r\n        if (fromVar in this.calibration.points && toVar in this.calibration.points) {\r\n          const fromVal = this.calibration.points[fromVar];\r\n          const toVal = this.calibration.points[toVar];\r\n          if (fromVal && toVal) {\r\n            markersTrace.x.push(fromVal);\r\n            markersTrace.y.push(toVal);\r\n            markersTrace.text?.push('Point ' + (parseInt(index)+1).toString());\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const layout = {\r\n      uirevision: 1,\r\n      autosize: true, // Needed for resizing on update\r\n      title: 'Calibration',\r\n      hovermode: 'x',\r\n      legend: {\r\n        orientation: 'h',\r\n        y: -0.35,\r\n      },\r\n      xaxis: {\r\n        title: 'Bin [1]',\r\n        mirror: true,\r\n        linewidth: 2,\r\n        autorange: true,\r\n        autorangeoptions: {\r\n          minallowed: 0\r\n        },\r\n        rangeslider: {\r\n          borderwidth: 1\r\n        },\r\n        showspikes: true, //Show spike line for X-axis\r\n        spikethickness: 1,\r\n        spikedash: 'solid',\r\n        spikecolor: 'blue',\r\n        spikemode: 'across',\r\n        ticksuffix: '',\r\n        hoverformat: ',.2~f',\r\n        exponentformat: 'none',\r\n        automargin: true,\r\n        gridcolor: this.darkMode ? this.gridColorDark : this.gridColorLight\r\n      },\r\n      yaxis: {\r\n        title: 'Energy [keV]',\r\n        mirror: true,\r\n        linewidth: 2,\r\n        autorange: true, //'max',\r\n        autorangeoptions: {\r\n          minallowed: 0\r\n        },\r\n        //range: [0, null],\r\n        showspikes: true, //Show spike line for Y-axis\r\n        spikethickness: 1,\r\n        spikedash: 'solid',\r\n        spikecolor: 'blue',\r\n        spikemode: 'across',\r\n        showticksuffix: 'last',\r\n        ticksuffix: ' keV',\r\n        showexponent: 'last',\r\n        exponentformat: 'none',\r\n        hoverformat: ',.2~f',\r\n        automargin: true,\r\n        gridcolor: this.darkMode ? this.gridColorDark : this.gridColorLight\r\n      },\r\n      plot_bgcolor: this.darkMode ? this.plotBgDark : this.plotBgLight,\r\n      paper_bgcolor: this.darkMode ? this.paperBgDark : this.paperBgLight,\r\n      font: {\r\n        color:  this.darkMode ? this.fontColorDark : this.fontColorLight,\r\n      },\r\n      margin: {\r\n        l: 40,\r\n        r: 40,\r\n        b: 50,\r\n        t: 55,\r\n        //pad: 4,\r\n      },\r\n      images: [{\r\n        x: 0.99,\r\n        y: 0.99,\r\n        opacity: 0.4,\r\n        sizex: 0.15,\r\n        sizey: 0.15,\r\n        source: '/assets/logo.svg',\r\n        xanchor: 'right',\r\n        xref: 'paper',\r\n        yanchor: 'top',\r\n        yref: 'paper',\r\n      }],\r\n      annotations: <Anno[]>[]\r\n    };\r\n\r\n    const config = {\r\n      responsive: true,\r\n      scrollZoom: false,\r\n      //displayModeBar: true,\r\n      displaylogo: false,\r\n      toImageButtonOptions: {\r\n        format: this.downloadFormat,\r\n        filename: 'gamma_mca_calibration',\r\n      },\r\n      editable: this.editableMode,\r\n      modeBarButtons: <any[][]>[\r\n        ['zoom2d'],\r\n        ['zoomIn2d', 'zoomOut2d'],\r\n        ['autoScale2d', 'resetScale2d'],\r\n        ['toImage'],\r\n        [this.customDownloadButton],\r\n        [this.customFullscreenButton]\r\n      ]\r\n    };\r\n\r\n    (<any>window).Plotly[update ? 'react' : 'newPlot'](this.plotDiv, [trace, markersTrace], layout, config);\r\n  }\r\n  /*\r\n    Compute data for pulse height histogram with cps, sma, gauss filter and others\r\n  */\r\n  computePulseHeightData(dataObj: SpectrumData): Trace[] {\r\n    const data: Trace[] = [];\r\n\r\n    if (dataObj.data.length) {\r\n      const trace: Trace = {\r\n        name: 'Spectrum',\r\n        stackgroup: 'data', // Stack line charts on top of each other\r\n\r\n        x: this.getXAxis(dataObj.data.length),\r\n        y: dataObj.data,\r\n        type: 'scatter',\r\n        mode: 'lines', // Remove lines, \"lines\", \"none\"\r\n        fill: this.linePlot ? 'none' : 'tonexty',\r\n        //opacity: 0.8,\r\n        line: {\r\n          color: 'orangered',\r\n          width: 1,\r\n          shape: this.linePlot ? 'linear' : 'hvh',\r\n        }\r\n      };\r\n\r\n      if (this.cps) trace.y = dataObj.dataCps;\r\n      data.push(trace);\r\n    }\r\n\r\n    /*\r\n      Compute Background and Corrected Spectrum\r\n    */\r\n    if (dataObj.background.length) { //== dataObj.data.length)\r\n      const bgTrace: Trace = {\r\n        name: 'Background',\r\n        stackgroup: 'data', // Stack line charts on top of each other\r\n\r\n        x: this.getXAxis(dataObj.background.length),\r\n        y: dataObj.background,\r\n        type: 'scatter',\r\n        mode: 'lines', // Remove lines, \"lines\", \"none\"\r\n        fill: this.linePlot ? 'none' : 'tonexty',\r\n        //opacity: 1,\r\n        line: {\r\n          color: 'slategrey',\r\n          width: 1,\r\n          shape: this.linePlot ? 'linear' : 'hvh',\r\n        }\r\n      };\r\n\r\n      if (this.cps) bgTrace.y = dataObj.backgroundCps;\r\n\r\n      if (data.length) {\r\n        const newData: number[] = []; // Compute the corrected data, i.e. data - background\r\n\r\n        const dataLen = data[0].y.length;\r\n        for (let i = 0; i < dataLen; i++) {\r\n          newData.push(data[0].y[i] - bgTrace.y[i]);\r\n        }\r\n\r\n        data[0].y = newData;\r\n        //data[0].fill = this.linePlot ? 'none' : 'tonexty'; //'tonextx'\r\n        data[0].name = 'Net Spectrum';\r\n      }\r\n\r\n      //data.unshift(bgTrace);\r\n      data.push(bgTrace);\r\n    }\r\n\r\n    /*\r\n      Set Simple Moving Average\r\n    */\r\n    if (this.sma) { // SIMPLE MOVING AVERAGE. MAYBE PLOT IT AS DIFFERENT LINE?\r\n      for (const element of data) {\r\n        element.y = this.computeMovingAverage(element.y);\r\n      }\r\n    }\r\n\r\n    /*\r\n      Energy calibration enabled\r\n    */\r\n    if (this.calibration.enabled) {\r\n      for (const element of data) {\r\n        element.x = this.getCalAxis(element.x.length);\r\n      }\r\n    }\r\n\r\n    /*\r\n      Efficiency calibration enabled\r\n    */\r\n   /*\r\n    if (this.calibration.enabled) { // TODO: CHANGE variable\r\n       for (const element of data) {\r\n         element.y.forEach((val, index) => element.y[index] = 0.00002 * val ** 2 + 0.0045 * val + 0.22); // TODO: CHANGE formula\r\n         console.log('neu');\r\n       }\r\n     }\r\n     */\r\n\r\n    /*\r\n      Peak Detection Stuff\r\n    */\r\n    if (this.peakConfig.enabled && data.length) {\r\n      // Gaussian Correlation Filter\r\n      const gaussData = this.gaussianCorrel(data[0].y, this.gaussSigma);\r\n\r\n      const eTrace: Trace = {\r\n        name: 'Gaussian Correlation',\r\n        //stackgroup: 'data', // Stack line charts on top of each other\r\n        x: data[0].x,\r\n        y: gaussData,\r\n        //yaxis: 'y2',\r\n        type: 'scatter',\r\n        mode: 'lines', // Remove lines, \"lines\", \"none\"\r\n        //fill: 'tozeroy',\r\n        //opacity: 0.8,\r\n        line: {\r\n          color: 'black',\r\n          width: 0.6,\r\n          shape: this.linePlot ? 'linear' : 'hvh',\r\n        },\r\n        marker: {\r\n          color: 'black',\r\n        }\r\n      };\r\n\r\n      data.unshift(eTrace);\r\n    }\r\n\r\n    return data;\r\n  }\r\n  /*\r\n    Plot All The Data\r\n  */\r\n  private plotData(dataObj: SpectrumData, update: boolean): void {\r\n    if (this.type !== 'default') return; // Ignore this if the calibration chart is currently shown\r\n\r\n    /*\r\n      All The Layout Stuff\r\n    */\r\n    const layout = {\r\n      uirevision: 1,\r\n      autosize: true, // Needed for resizing on update\r\n      title: 'Energy Spectrum',\r\n      hovermode: 'x',\r\n      legend: {\r\n        orientation: 'h',\r\n        y: -0.35,\r\n      },\r\n      selectdirection: 'h',\r\n      activeselection: {\r\n        fillcolor: 'blue',\r\n        opacity: 0.01\r\n      },\r\n      newselection: {\r\n        line: {\r\n          color: 'blue',\r\n          width: 1,\r\n          dash: 'solid'\r\n        }\r\n      },\r\n      xaxis: {\r\n        title: 'Bin [1]',\r\n        mirror: true,\r\n        linewidth: 2,\r\n        autorange: true,\r\n        autorangeoptions: {\r\n          minallowed: 0\r\n        },\r\n        type: this.xAxis, // 'linear' or 'log'\r\n        rangeslider: {\r\n          borderwidth: 1\r\n        },\r\n        showspikes: true, //Show spike line for X-axis\r\n        spikethickness: 1,\r\n        spikedash: 'solid',\r\n        spikecolor: 'blue',\r\n        spikemode: 'across',\r\n        //nticks: 20,\r\n        //tickformat: '.01f',\r\n        hoverformat: ',.2~f',\r\n        ticksuffix: '',\r\n        exponentformat: 'none',\r\n        automargin: true,\r\n        gridcolor: this.darkMode ? this.gridColorDark : this.gridColorLight\r\n      },\r\n      yaxis: {\r\n        title: 'Counts [1]',\r\n        mirror: true,\r\n        linewidth: 2,\r\n        autorange: true,\r\n        fixedrange: false,\r\n        type: this.yAxis, // 'linear' or 'log'\r\n        //showspikes: true, //Show spike line for Y-axis\r\n        //spikethickness: 1,\r\n        //spikedash: 'solid',\r\n        //spikecolor: 'blue',\r\n        //spikemode: 'across',\r\n        showticksuffix: 'last',\r\n        ticksuffix: 'cts',\r\n        //tickformat: '.02s',\r\n        hoverformat: '.4~s',\r\n        //showexponent: 'last',\r\n        exponentformat: 'SI',\r\n        automargin: true,\r\n        gridcolor: this.darkMode ? this.gridColorDark : this.gridColorLight\r\n      },\r\n      /*\r\n      yaxis2: {\r\n        overlaying: 'y',\r\n        side: 'right'\r\n      },\r\n      */\r\n      plot_bgcolor: this.darkMode ? this.plotBgDark : this.plotBgLight,\r\n      paper_bgcolor: this.darkMode ? this.paperBgDark : this.paperBgLight,\r\n      font: {\r\n        color:  this.darkMode ? this.fontColorDark : this.fontColorLight,\r\n      },\r\n      margin: {\r\n        l: 40,\r\n        r: 40,\r\n        b: 50,\r\n        t: this.peakConfig.newPeakStyle ? 55 : 80,\r\n        //autoexpand: true\r\n      },\r\n      images: [{\r\n        x: 0.99,\r\n        y: 0.99,\r\n        opacity: 0.4,\r\n        sizex: 0.15,\r\n        sizey: 0.15,\r\n        source: '/assets/logo.svg',\r\n        xanchor: 'right',\r\n        xref: 'paper',\r\n        yanchor: 'top',\r\n        yref: 'paper',\r\n      }],\r\n      shapes: <Shape[]>[],\r\n      annotations: <Anno[]>[],\r\n      //shapes: this.shapes,\r\n      //annotations: JSON.parse(JSON.stringify(this.annotations)), // Copy array but do not reference\r\n    };\r\n    /*\r\n      Set calibrated x-axis\r\n    */\r\n    if (this.calibration.enabled) {\r\n      layout.xaxis.title = 'Energy [keV]';\r\n      layout.xaxis.ticksuffix = ' keV';\r\n    }\r\n\r\n    const config = {\r\n      responsive: true,\r\n      scrollZoom: false,\r\n      //displayModeBar: true,\r\n      displaylogo: false,\r\n      toImageButtonOptions: {\r\n        format: this.downloadFormat,\r\n        filename: 'gamma_mca_spectrum',\r\n      },\r\n      editable: this.editableMode,\r\n      modeBarButtons: <any[][]>[\r\n        ['select2d'],\r\n        ['zoom2d'],\r\n        ['zoomIn2d', 'zoomOut2d'],\r\n        ['autoScale2d', 'resetScale2d'],\r\n        ['toImage'],\r\n        [this.customDownloadButton],\r\n        [this.customFullscreenButton]\r\n      ]\r\n    };\r\n\r\n    const data = this.computePulseHeightData(dataObj); // Get all trace data\r\n\r\n    /*\r\n      CPS enabled\r\n    */\r\n    if (this.cps) {\r\n      if (data.length > 0) { // Check before, otherwise it will crash recordings instantly when they start!\r\n        if (Math.max(...data[0].y) < this.cpsSwitchLimit) { // Less than 1 cps at max, switch to cpm\r\n          for (const trace of data) {\r\n            trace.y = trace.y.map(value => value * 60);\r\n          }\r\n          layout.yaxis.title = 'Counts Per Minute [60 s<sup>-1</sup>]';\r\n          layout.yaxis.ticksuffix = 'cpm';\r\n        } else { // Enough counts for cpm\r\n          layout.yaxis.title = 'Counts Per Second [s<sup>-1</sup>]';\r\n          layout.yaxis.ticksuffix = 'cps';\r\n        }\r\n      }\r\n    }\r\n\r\n    /*\r\n      Peak Detection Stuff\r\n    */\r\n    if (this.peakConfig.enabled && data.length > 1) {\r\n      const gaussDataX = data[0].x; // Gauss data will always be the first trace\r\n      const gaussDataY = data[0].y;\r\n\r\n      const peaks = this.peakFinder(gaussDataY);\r\n      this.drawPeakFinder(gaussDataX, peaks, data[1].y);\r\n\r\n      if (this.peakConfig.showFWHM) {\r\n        const peakResolutions = new CalculateFWHM(this.peakConfig.lines, data[1].x, data[1].y).getResolution();\r\n        \r\n        for (const anno of this.annotations) {\r\n          const fwhmValue = peakResolutions[anno.x];\r\n          \r\n          if (fwhmValue > 0 && fwhmValue < 0.9 * CalculateFWHM.resolutionLimit) anno.text += `<br>${(fwhmValue * 100).toFixed(1)}%`;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!this.peakConfig.enabled || !data.length || data.length >= 3) data.reverse(); // Change/Fix data order\r\n\r\n    layout.shapes = this.shapes;\r\n    layout.annotations = JSON.parse(JSON.stringify(this.annotations)); //layout.annotations.concat(JSON.parse(JSON.stringify(this.annotations))); // Copy array but do not reference\r\n\r\n    if (this.calibration.enabled) {\r\n      for (const anno of layout.annotations) {\r\n        anno.hovertext += layout.xaxis.ticksuffix;\r\n      }\r\n    }\r\n\r\n    //setTimeout((<any>window).Plotly[update ? 'react' : 'newPlot'], 1, this.plotDiv, data, layout, config); // Make plot update async\r\n    (<any>window).Plotly[update ? 'react' : 'newPlot'](this.plotDiv, data, layout, config);\r\n  }\r\n}\r\n","/*\r\n\r\n  Load and process many different file formats to get usable data.\r\n\r\n  Gamma MCA: free, open-source web-MCA for gamma spectroscopy\r\n  2022, NuclearPhoenix.- Phoenix1747\r\n  https://nuclearphoenix.xyz\r\n\r\n  Do not touch my garbage. All the CSV-related stuff is ugly asf.\r\n\r\n*/\r\n\r\nimport PolynomialRegression from './lib/regression/PolynomialRegression.min';\r\nimport { CoeffObj } from './plot';\r\n\r\nexport interface JSONParseError {\r\n  code: string;\r\n  description: string;\r\n}\r\n\r\nexport interface NPESv2 {\r\n  schemaVersion: 'NPESv2';\r\n  data: NPESv1[];\r\n}\r\n\r\nexport interface NPESv1 {\r\n  schemaVersion?: 'NPESv1';\r\n  deviceData?: NPESv1DeviceData;\r\n  sampleInfo?: NPESv1SampleInfo;\r\n  resultData: NPESv1ResultData;\r\n}\r\n\r\nexport interface NPESv1Spectrum {\r\n  numberOfChannels: number;\r\n  validPulseCount?: number;\r\n  measurementTime?: number;\r\n  energyCalibration?: {\r\n    polynomialOrder: number;\r\n    coefficients: number[];\r\n  };\r\n  spectrum: number[];\r\n}\r\n\r\ninterface NPESv1ResultData {\r\n  startTime?: string;\r\n  endTime?: string;\r\n  energySpectrum?: NPESv1Spectrum;\r\n  backgroundEnergySpectrum?: NPESv1Spectrum;\r\n}\r\n\r\ninterface NPESv1DeviceData {\r\n  deviceName?: string;\r\n  softwareName: string;\r\n}\r\n\r\ninterface NPESv1SampleInfo {\r\n  name?: string;\r\n  location?: string;\r\n  time?: string;\r\n  weight?: number;\r\n  volume?: number;\r\n  note?: string;\r\n}\r\n\r\ninterface XMLImportData {\r\n  espectrum: number[];\r\n  bgspectrum: number[];\r\n  coeff: CoeffObj;\r\n  meta: ImportDataMeta;\r\n}\r\n\r\ninterface ImportDataMeta {\r\n  name: string;\r\n  location: string;\r\n  time: string;\r\n  weight?: number;\r\n  volume?: number;\r\n  notes: string;\r\n  deviceName: string;\r\n  startTime: string;\r\n  endTime: string;\r\n  dataMt: number; // Measurement time for the energy spectrum\r\n  backgroundMt: number; // Measurement time for the background energy spectrum\r\n}\r\n\r\ninterface SchemaJSONStorage {\r\n  NPESv1: any;\r\n  NPESv2: any;\r\n}\r\n\r\ninterface CSVData {\r\n  histogramData: number[];\r\n  calibrationCoefficients: number[] | undefined;\r\n}\r\n\r\nexport class RawData {\r\n  valueIndex: number;\r\n  delimiter: string;\r\n  adcChannels = 4096; // For OGD\r\n  fileType: number;\r\n  private tempValIndex: number;\r\n  private schemaURLTable = {\r\n    NPESv1: '/assets/npes-1.schema.json',\r\n    NPESv2: '/assets/npes-2.schema.json'\r\n  };\r\n  private schemaJSON: SchemaJSONStorage = {\r\n    NPESv1: undefined,\r\n    NPESv2: undefined\r\n  };\r\n\r\n  constructor(valueIndex: number, delimiter = ',') {\r\n    this.valueIndex = valueIndex;\r\n    this.delimiter = delimiter;\r\n    this.adcChannels;\r\n    this.fileType = valueIndex;\r\n    this.tempValIndex = valueIndex;\r\n  }\r\n\r\n  private checkLines(value: string): boolean {\r\n    const values = value.split(this.delimiter);\r\n\r\n    if (isNaN(parseFloat(values[0].trim()))) return false;\r\n    if (values.length === 1) this.tempValIndex = 0; // Work-Around for files with only one column\r\n\r\n    return values.length > this.tempValIndex;\r\n  }\r\n\r\n  private parseLines(value: string): number {\r\n    const values = value.split(this.delimiter);\r\n    return parseFloat(values[this.tempValIndex].trim());\r\n  }\r\n\r\n  private histConverter(dataArr: number[]): number[] {\r\n    const xArray: number[] = Array(this.adcChannels).fill(0);\r\n\r\n    for (const element of dataArr) {\r\n      xArray[element] += 1;\r\n    }\r\n    return xArray;\r\n  }\r\n\r\n  private parseCalibration(valueArray: string[]): number[] | undefined {\r\n    if (!this.tempValIndex) return undefined; // Only one column, return no calibration\r\n    if (valueArray.length < 3) return undefined; // Not enough data to get the coefficients, return no calibration\r\n\r\n    const xEnergyData = valueArray.map((value) => parseFloat(value.split(this.delimiter)[0].trim())/*, this*/);\r\n    const regressionArray: {x: number, y: number}[] = [];\r\n\r\n    for (const index in xEnergyData) {\r\n      const newObj  = {\r\n        x: parseInt(index),\r\n        y: xEnergyData[index]\r\n      };\r\n      regressionArray.push(newObj);\r\n    }\r\n\r\n    const model = PolynomialRegression.read(regressionArray, 3); // Degree 3 seems to work better than 2 (quadratic polynomial)\r\n    const terms = model.getTerms();\r\n    \r\n    terms.pop(); // Because we used degree 3 above, remove the fourth coefficient for x^3 (last element)\r\n\r\n    return terms.reverse();\r\n  }\r\n\r\n  csvToArray(data: string): CSVData {\r\n    this.tempValIndex = this.valueIndex; // RESET VALUE INDEX\r\n\r\n    const returnData: CSVData = {\r\n      histogramData: [],\r\n      calibrationCoefficients: undefined\r\n    };\r\n\r\n    if (this.fileType === 1) { // HISTOGRAM\r\n      const dataLines = data.split('\\n').filter(this.checkLines, this);\r\n\r\n      returnData.calibrationCoefficients = this.parseCalibration(dataLines); // Get linear calibration data\r\n      returnData.histogramData = dataLines.map(this.parseLines, this);\r\n    } else { // CHRONOLOGICAL STREAM\r\n      const dataEvents = data.split(this.delimiter).filter(this.checkLines, this);\r\n\r\n      returnData.histogramData = this.histConverter(dataEvents.map(this.parseLines, this));\r\n    }\r\n\r\n    return returnData;\r\n  }\r\n\r\n  xmlToArray(data: string): XMLImportData {\r\n    const coeff: CoeffObj = {\r\n      c1: 0,\r\n      c2: 0,\r\n      c3: 0\r\n    };\r\n    const meta: ImportDataMeta = {\r\n      name: '',\r\n      location: '',\r\n      time: '',\r\n      notes: '',\r\n      deviceName: '',\r\n      startTime: '',\r\n      endTime: '',\r\n      dataMt: 0,\r\n      backgroundMt: 0\r\n    };\r\n\r\n    try {\r\n      const xmlDoc = new DOMParser().parseFromString(data, 'text/xml');\r\n      const especTop = xmlDoc.getElementsByTagName('EnergySpectrum');\r\n      let espectrum = <number[]>[];\r\n      let bgspectrum = <number[]>[];\r\n\r\n      if (especTop[0]) {\r\n        const espec = especTop[0].getElementsByTagName('DataPoint');\r\n\r\n        espectrum = Array.from(espec).map(item => parseFloat(item.textContent ?? '-1'));\r\n\r\n        meta.dataMt = parseFloat(especTop[0].getElementsByTagName('MeasurementTime')[0]?.textContent?.trim() ?? '1');\r\n      }\r\n\r\n      const bgspecTop = xmlDoc.getElementsByTagName('BackgroundEnergySpectrum');\r\n\r\n      if (bgspecTop[0]) {\r\n        const bgspec = bgspecTop[0].getElementsByTagName('DataPoint');\r\n\r\n        bgspectrum = Array.from(bgspec).map(item => parseFloat(item.textContent ?? '-1'));\r\n\r\n        meta.backgroundMt = parseFloat(bgspecTop[0].getElementsByTagName('MeasurementTime')[0]?.textContent?.trim() ?? '1');\r\n      }\r\n\r\n      const calCoeffsTop = xmlDoc.getElementsByTagName('EnergySpectrum')[0];\r\n\r\n      if (calCoeffsTop) {\r\n        const calCoeffs = calCoeffsTop.getElementsByTagName('Coefficient');\r\n\r\n        const coeffNumArray = Array.from(calCoeffs).map(item => parseFloat((item.textContent ?? '0')));\r\n\r\n        for (const i in coeffNumArray) {\r\n          coeff['c' + (parseInt(i) + 1).toString()] = coeffNumArray[2 - parseInt(i)];\r\n        }\r\n      }\r\n\r\n      const rdl = xmlDoc.getElementsByTagName('SampleInfo')[0];\r\n\r\n      meta.name = rdl?.getElementsByTagName('Name')[0]?.textContent?.trim() ?? '';\r\n      meta.location = rdl?.getElementsByTagName('Location')[0]?.textContent?.trim() ?? '';\r\n      meta.time = rdl?.getElementsByTagName('Time')[0]?.textContent?.trim() ?? '';\r\n      meta.notes = rdl?.getElementsByTagName('Note')[0]?.textContent?.trim() ?? '';\r\n\r\n      let val = parseFloat(rdl?.getElementsByTagName('Weight')[0]?.textContent?.trim() ?? '0');\r\n      if (val > 0) meta.weight = val*1000; // Convert from kg to g\r\n\r\n      val = parseFloat(rdl?.getElementsByTagName('Volume')[0]?.textContent?.trim() ?? '0'); // Convert from L to ml\r\n      if (val > 0) meta.volume = val*1000;\r\n\r\n      meta.deviceName = xmlDoc.getElementsByTagName('DeviceConfigReference')[0]?.getElementsByTagName('Name')[0]?.textContent?.trim() ?? '';\r\n\r\n      meta.startTime = xmlDoc.getElementsByTagName('StartTime')[0]?.textContent?.trim() ?? '';\r\n      meta.endTime = xmlDoc.getElementsByTagName('EndTime')[0]?.textContent?.trim() ?? '';\r\n\r\n      return {espectrum, bgspectrum, coeff, meta};\r\n    } catch (e) {\r\n      console.error(e);\r\n      return {espectrum: [], bgspectrum: [], coeff, meta};\r\n    }\r\n  }\r\n\r\n  async jsonToObject(data: string): Promise<NPESv1[] | JSONParseError[]> {\r\n    let json: any;\r\n\r\n    try {\r\n      json = JSON.parse(data);\r\n    } catch (e) {\r\n      console.error(e);\r\n      return [{code: 'JSON_PARSE_ERROR', description: `A problem with the JSON formatting occured when trying to parse the contents of the file: ${e}`}];\r\n    }\r\n\r\n    let version: 'NPESv1' | 'NPESv2';\r\n\r\n    try {\r\n      // Detect schemaVersion (either NPESv1 or NPESv2)\r\n      if (json.schemaVersion === 'NPESv1' || json.schemaVersion === 'NPESv2') {\r\n        version = json.schemaVersion;\r\n      } else {\r\n        throw `schemaVersion is neither NPESv1 nor NPESv2, but ${json.schemaVersion}!`;\r\n      }\r\n    } catch(e) {\r\n      console.error(e);\r\n      return [{code: 'NPES_VERSION_ERROR', description: `An error occured when trying to parse the schema version: ${e}`}];\r\n    }\r\n    \r\n    try {\r\n      // Load the correct schema if if hasn't been loaded before\r\n      if (!this.schemaJSON[version]) {\r\n        const response = await fetch(this.schemaURLTable[version]);\r\n\r\n        if (response.ok) {\r\n          const schema = await response.json();\r\n          delete schema['$schema']; // Remove, otherwise it will crash because it cannot resolve the schema URI, wow...\r\n          this.schemaJSON[version] = schema;\r\n        } else {\r\n          throw 'Could not load the schema file!';\r\n        }\r\n      }\r\n\r\n      /* // OLD METHOD\r\n      const scripts = Array.from(document.querySelectorAll('script')).map(scr => scr.src);\r\n      if (!scripts.includes('/assets/js/external/ZSchema-browser-min.js')) {\r\n        const tag = document.createElement('script');\r\n        tag.src = '/assets/js/external/ZSchema-browser-min.js';\r\n        tag.async = true;\r\n        tag.onload =\r\n        document.getElementsByTagName('head')[0].appendChild(tag);\r\n      }\r\n      */\r\n      const validator = new (<any>window).ZSchema();\r\n      validator.validate(json, this.schemaJSON[version]);\r\n      const errors = validator.getLastErrors();\r\n\r\n      if (errors) {\r\n        //throw errors; // Catch validation errors\r\n        const errorMessages: JSONParseError[] = [];\r\n\r\n        for (const error of errors) {\r\n          errorMessages.push({\r\n            'code': error.code,\r\n            'description': error.message\r\n          });\r\n        }\r\n\r\n        console.error(errorMessages);\r\n        return errorMessages;\r\n      }\r\n\r\n      if (version === 'NPESv1') {\r\n        return [<NPESv1>json]; // Only a single data package available\r\n      } else { // NPESv2\r\n        return (<NPESv2>json).data; // Return all data packages from the file\r\n      }\r\n\r\n    } catch(e) {\r\n      console.error(e);\r\n      return [{code: 'UNDEFINED_ERROR', description: `Some undefined error occured: ${e}`}];\r\n    }\r\n  }\r\n}\r\n","/*\r\n\r\n  Serial device connection, recording of spectra and serial console.\r\n\r\n  Gamma MCA: free, open-source web-MCA for gamma spectroscopy\r\n  2022, NuclearPhoenix.- Phoenix1747\r\n  https://nuclearphoenix.xyz\r\n\r\n*/\r\n\r\nimport { WebUSBSerialPort } from './lib/webusbserial-min';\r\n\r\nexport class WebUSBSerial {\r\n  private port: WebUSBSerialPort | undefined;\r\n  private device: any;\r\n  isOpen = false;\r\n  \r\n  static deviceFilters = [{ 'vendorId': 0x0403 }]; // Allow ALL FTDI chips //, 'productId': 0x6015 }]; // Filter FTDx Chips\r\n\r\n  constructor(device: any) {\r\n    this.device = device;\r\n\r\n    console.info('WebUSB product name:', device.productName);\r\n    console.info('WebUSB manufacturer name:', device.manufacturerName);\r\n  }\r\n\r\n  async sendString(value: string): Promise<void> {\r\n    const enc = new TextEncoder(); \r\n    this.port?.send(enc.encode(`${value}\\n`));\r\n  }\r\n\r\n  private buffer = new Uint8Array(102400); // Is 100kB enough?\r\n  private pos = 0;\r\n  \r\n  async read(): Promise<Uint8Array> {\r\n    if (this.pos === 0) {\r\n      await new Promise(resolve => setTimeout(resolve, 100)); // Cooldown delay\r\n      return new Uint8Array();\r\n    }\r\n    const ret = this.buffer.subarray(0, this.pos);\r\n    this.pos = 0;\r\n    return ret; \r\n  }\r\n\r\n  serOptions = {\r\n    overridePortSettings: true,\r\n    baudrate: 115200,\r\n  };\r\n\r\n  async open(baudRate: number): Promise<void> { \r\n    this.serOptions.baudrate = baudRate;\r\n    this.port = new WebUSBSerialPort(this.device, this.serOptions);\r\n\r\n    this.pos = 0;\r\n   \r\n    this.port.connect(data => {\r\n      //console.log(data);\r\n      this.buffer.set(data,this.pos);\r\n      this.pos += data.length;\r\n    }, error => {\r\n      console.error('Error receiving data!' + error)\r\n      this.isOpen = false;\r\n    });\r\n    this.isOpen = true;\r\n  }\r\n\r\n  async close(): Promise<void> {\r\n    if (!this.isOpen) return;\r\n    this.isOpen = false;\r\n    this.port?.disconnect();\r\n  }\r\n\r\n  isThisPort(port: SerialPort | WebUSBSerialPort): boolean  {\r\n    return (this.device === port);\r\n  }\r\n\r\n  getInfo(): string {\r\n    return this.device.productName;\r\n    //return 'WebUSB';\r\n  }\r\n\r\n  getPort(): any {\r\n    return this.device;\r\n  }\r\n}\r\n\r\n\r\nexport class WebSerial {\r\n  private port: SerialPort;\r\n  isOpen = false;\r\n\r\n  constructor(port: SerialPort) {\r\n    this.port = port;\r\n  }\r\n\r\n  isThisPort(port: SerialPort | WebUSBSerialPort): boolean {\r\n    return this.port === port;\r\n  }\r\n\r\n  async sendString(value: string): Promise<void> {\r\n    if (!this.isOpen) return;\r\n      \r\n    if (!this.port?.writable) throw 'Port is not writable!';\r\n\r\n    const textEncoder = new TextEncoderStream();\r\n    const writer = textEncoder.writable.getWriter();\r\n    const writableStreamClosed = textEncoder.readable.pipeTo(this.port.writable);\r\n\r\n    writer.write(value.trim() + '\\n');\r\n    //writer.write('\\x03\\n');\r\n\r\n    //writer.releaseLock();\r\n    await writer.close();\r\n    await writableStreamClosed;\r\n  }\r\n\r\n  private reader: ReadableStreamDefaultReader | undefined;\r\n\r\n  async read(): Promise<Uint8Array>{\r\n    let ret = new Uint8Array();\r\n    if (!this.isOpen) return ret;\r\n  \r\n    if (this.port.readable) {\r\n      try {\r\n        this.reader = this.port.readable.getReader();\r\n        const {value} = await this.reader.read();\r\n        if (value) {\r\n          ret = value;\r\n        } else {\r\n          //await new Promise(resolve => setTimeout(resolve, 10));\r\n        }\r\n      } finally {\r\n        this.reader?.releaseLock();\r\n        this.reader = undefined;\r\n        //await new Promise(resolve => setTimeout(resolve, 100));\r\n      }\r\n    } else {\r\n      await this.close();\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  serOptions: SerialOptions = { baudRate: 9600 } // Default 9600 baud rate\r\n\r\n  async open(baudRate: number): Promise<void> {\r\n    this.serOptions.baudRate = baudRate;\r\n    await this.port.open(this.serOptions);\r\n    this.isOpen = true;\r\n  }\r\n\r\n  async close(): Promise<void> {\r\n    if (!this.isOpen) return;\r\n    if (this.reader) await this.reader?.cancel();\r\n\r\n    await this.port?.close();\r\n    this.isOpen = false;\r\n  }\r\n\r\n  getInfo(): string {\r\n    return `ID: 0x${this.port.getInfo().usbProductId?.toString(16).toUpperCase()}`;\r\n  }\r\n\r\n  getPort(): SerialPort {\r\n    return this.port;\r\n  }\r\n}\r\n\r\n\r\nimport { DataOrder } from './main';\r\n\r\nexport class SerialManager {\r\n  // SECTION: Serial Manager\r\n  readonly port: WebSerial | WebUSBSerial;\r\n\r\n  //private reader: ReadableStreamDefaultReader | undefined;\r\n  private closed: Promise<void> | undefined;\r\n  private recording = false;\r\n  private onlyConsole = true;\r\n  private startTime = 0;\r\n  private timeDone = 0;\r\n\r\n  static orderType: DataOrder = 'chron'; // Chronological data order;\r\n  static baudRate = 9600; // Default 9600 baud rate\r\n\r\n  // SECTION: Serial Data\r\n  private consoleMemory = 1000; // Number of newlines saved before the first newlines gets removed again\r\n  private consoleMemoryTotal = 100_000; // Number of chars saved before the first chars get removed again\r\n  private rawConsoleData = '';\r\n  private rawData = ''; // Raw String Input from Serial Reading\r\n  private maxHistLength = 2**18 * 2 * 10; // Maximum number of characters for a valid histogram string/number\r\n  private maxLength = 20; // Maximum number of characters for a valid string/number\r\n  private bufferPulseData = <number[]>[]; // Ready to use Integer Pulse Heights, could use a setget meh\r\n  private baseHist = <number[]>[]; // Baseline histogram that will be subtracted from every other newer hist\r\n\r\n  static maxSize = 200_000; // Maximum number of pulses/events to hold in the buffer\r\n  static adcChannels = 4096; // Default 12-bit ADC\r\n  static eolChar = ';'; // End of Line/Data character\r\n\r\n  constructor(port: WebSerial | WebUSBSerial) {\r\n    this.port = port;\r\n  }\r\n\r\n  isThisPort(port: SerialPort | WebUSBSerialPort): boolean {\r\n    return this.port.isThisPort(port);\r\n  }\r\n\r\n  /*\r\n\r\n    SERIAL CONSOLE CONTROL\r\n\r\n  */\r\n  async sendString(value: string): Promise<void> {\r\n    await this.port.sendString(value);\r\n  }\r\n\r\n  async showConsole(): Promise<void> {\r\n    if (this.recording) return; // Port is already being read, nothing to do\r\n    if (!this.port.isOpen) await this.port.open(SerialManager.baudRate); // Only try to open port if not open already\r\n\r\n    this.recording = true;\r\n    this.onlyConsole = true;\r\n    this.closed = this.readUntilClosed();\r\n  }\r\n\r\n  async hideConsole(): Promise<void> {\r\n    if (!this.recording || !this.onlyConsole) return; // Not recording or currently in a measurement so don't do anything...\r\n\r\n    this.onlyConsole = false;\r\n    this.recording = false;\r\n\r\n    try {\r\n      await this.port.close();\r\n    } catch(err) {\r\n      console.warn('Nothing to disconnect.', err);\r\n    }\r\n\r\n    await this.closed;\r\n  }\r\n  /*\r\n\r\n    RECORDING CONTROL\r\n\r\n  */\r\n  async stopRecord(): Promise<void> {\r\n    if (!this.recording) return;\r\n\r\n    this.recording = false;\r\n    this.timeDone += performance.now() - this.startTime;\r\n\r\n    try {\r\n      await this.port.close();\r\n    } catch(err) {\r\n      console.warn('Nothing to disconnect.', err);\r\n    }\r\n\r\n    await this.closed;\r\n  }\r\n\r\n  async startRecord(resume = false): Promise<void> {\r\n    if (this.recording) return;\r\n    if (!this.port.isOpen) await this.port.open(SerialManager.baudRate); // Only try to open port if not open already\r\n\r\n    if (!resume) {\r\n      //this.flushRawData();\r\n      this.flushData();\r\n      this.clearBaseHist();\r\n      this.timeDone = 0;\r\n    }\r\n\r\n    this.startTime = performance.now();\r\n\r\n    this.recording = true;\r\n    this.onlyConsole = false;\r\n    this.closed = this.readUntilClosed();\r\n  }\r\n\r\n  private async readUntilClosed(): Promise<void> {\r\n    while (this.port.isOpen && this.recording) {\r\n      const data = await this.port.read();\r\n      if (data.length) this.addRaw(data); // Only submit non-empty arrays\r\n    }\r\n    await this.port.close();\r\n  }\r\n  /*\r\n\r\n    DATA CONTROL\r\n\r\n  */\r\n  private addRaw(uintArray: Uint8Array): void {\r\n    const string = new TextDecoder('utf-8').decode(uintArray); //String.fromCharCode(...uintArray);\r\n    this.rawConsoleData += string;\r\n\r\n    const rawLines = this.rawConsoleData.split('\\n'); // Split newlines\r\n    rawLines.pop(); // Last line will always be empty\r\n\r\n    if (rawLines.length > this.consoleMemory || this.rawConsoleData.length > this.consoleMemoryTotal) {\r\n      //console.warn('Serial console log is out of memory, deleting old history...');\r\n      this.rawConsoleData = this.rawConsoleData.replace(rawLines[0] + '\\n', '');\r\n    }\r\n    if (this.onlyConsole) return;\r\n\r\n    if (this.bufferPulseData.length > SerialManager.maxSize) { // Protect from overflow and crashes\r\n      console.warn('Warning: Serial buffer is saturating!');\r\n      return;\r\n    }\r\n    this.rawData += string;\r\n\r\n    if (SerialManager.orderType === 'chron') { // CHRONOLOGICAL EVENTS\r\n\r\n      const stringArr = this.rawData.split(SerialManager.eolChar); //('\\r\\n');\r\n      stringArr.pop(); // Delete last entry to avoid counting unfinished transmissions\r\n      stringArr.shift(); // Delete first entry. !FIX SERIAL COMMUNICATION ERRORS!\r\n\r\n      if (stringArr.length <= 1) {\r\n        if (this.rawData.length > this.maxLength) this.rawData = ''; // String too long without an EOL char, obvious error, delete.\r\n        return;\r\n      } else {\r\n        for (const element of stringArr) {\r\n          //this.rawData = this.rawData.replaceAll(element + '\\r\\n', '');\r\n          this.rawData = this.rawData.replace(element + SerialManager.eolChar, '');\r\n          const trimString = element.trim(); // Delete whitespace and line breaks\r\n\r\n          if (!trimString.length || trimString.length >= this.maxLength) continue; // String is empty or longer than maxLength --> Invalid, disregard\r\n\r\n          const parsedInt = parseInt(trimString);\r\n\r\n          if (isNaN(parsedInt)) {\r\n            continue; // Not an integer -> throw away\r\n          } else {\r\n            if (parsedInt < 0 || parsedInt > SerialManager.adcChannels) continue; // Fixed value range. !FIX SERIAL COMMUNICATION ERRORS!\r\n            this.bufferPulseData.push(parsedInt);\r\n          }\r\n        }\r\n      }\r\n\r\n    } else if (SerialManager.orderType === 'hist') { // HISTOGRAM DATA\r\n\r\n      const stringArr = this.rawData.split('\\n');\r\n\r\n      stringArr.pop(); // Delete last entry to avoid counting unfinished transmissions\r\n      //stringArr.shift(); // Delete first entry. !FIX SERIAL COMMUNICATION ERRORS!\r\n\r\n      if (!stringArr.length) {\r\n        if (this.rawData.length > this.maxHistLength) this.rawData = ''; // String too long without an EOL char, obvious error, delete.\r\n        return;\r\n      } else {\r\n        for (const element of stringArr) {\r\n          this.rawData = this.rawData.replace(element + '\\n', '');\r\n          const trimString = element.trim(); // Delete whitespace and line breaks\r\n\r\n          if (!trimString.length || trimString.length >= this.maxHistLength) continue; // String is empty or longer than maxHistLength --> Invalid, disregard\r\n\r\n          const stringHist = trimString.split(SerialManager.eolChar);\r\n          stringHist.pop();\r\n\r\n          if (stringHist.length !== SerialManager.adcChannels) continue; // Something is wrong with this histogram\r\n\r\n          const numHist = stringHist.map(x => { // Parse ints from strings and check if NaN\r\n            const parsed = parseInt(x);\r\n            return isNaN(parsed) ? 0 : parsed;\r\n          });\r\n\r\n          if (!this.baseHist.length) {\r\n            this.baseHist = numHist;\r\n            this.startTime = performance.now(); // Reset because we only acquired the differential comparison hist\r\n            return;\r\n          }\r\n\r\n          const diffHist = numHist.map((item, index) => item - this.baseHist[index]);\r\n\r\n          if (!this.bufferPulseData.length) this.bufferPulseData = Array(SerialManager.adcChannels).fill(0);\r\n\r\n          for (const index in this.bufferPulseData) {\r\n            this.bufferPulseData[index] += diffHist[index];\r\n          }\r\n\r\n          this.baseHist = numHist; // Update baseline to the current array\r\n        }\r\n      }\r\n    }\r\n  }\r\n  /*\r\n\r\n    DATA INTERFACING\r\n\r\n  */\r\n  private flushData(): void {\r\n    this.rawData = '';\r\n    this.bufferPulseData = [];\r\n  }\r\n\r\n  private clearBaseHist(): void {\r\n    this.baseHist = [];\r\n  }\r\n\r\n  flushRawData(): void {\r\n    this.rawConsoleData = '';\r\n  }\r\n\r\n  getRawData(): string {\r\n    return this.rawConsoleData;\r\n  }\r\n\r\n  getData(): number[] {\r\n    const copyArr = [...this.bufferPulseData];\r\n    this.bufferPulseData = [];\r\n    return copyArr;\r\n  }\r\n\r\n  getTime(): number {\r\n    return (this.recording ? (performance.now() - this.startTime + this.timeDone) : this.timeDone);\r\n  }\r\n}\r\n","export default class Matrix{backwardSubstitution(t,r,n,e){if(n<0||e<0)return r;{const o=t.length,l=t[0].length-1;let i=0,s=0;for(let u=l-1;u>=e;u--)u===e?i=t[n][l]/t[n][u]:(t[n][l]-=t[n][u]*r[o-1-s],s++);return r[n]=i,this.backwardSubstitution(t,r,n-1,e-1)}}combineMatrices(t,r){const n=r.length,e=t[0].length,o=[];for(let l=0;l<n;l++){o.push([]);for(let n=0;n<=e;n++)o[l][n]=n===e?r[l]:t[l][n]}return o}forwardElimination(t){const r=t.length,n=t[0].length,e=[];for(let o=0;o<r;o++){e.push([]);for(let r=0;r<n;r++)e[o][r]=t[o][r]}for(let t=0;t<r-1;t++)for(let o=t;o<r-1;o++){const r=e[o+1][t]/e[t][t];for(let l=0;l<n;l++)e[o+1][l]=e[o+1][l]-r*e[t][l]}return e}gaussianJordanElimination(t,r){const n=this.combineMatrices(t,r),e=this.forwardElimination(n);return this.backwardSubstitution(e,[],e.length-1,e[0].length-2)}identityMatrix(t){const r=t.length,n=t[0].length,e=[[]];for(let t=0;t<r;t++)for(let r=0;r<n;r++)e[t][r]=r===t?1:0;return e}matrixProduct(t,r){const n=t[0].length,e=r.length;if(n!==e)return!1;const o=[[]];for(let l=0;l<e;l++)for(let e=0;e<n;e++)o[l][e]=this.doMultiplication(t,r,l,e,n);return o}doMultiplication(t,r,n,e,o){let l=0,i=0;for(;l<o;)i+=t[n][l]*r[l][e],l++;return i}multiplyRow(t,r,n){const e=t.length,o=t[0].length,l=[[]];for(let i=0;i<e;i++)for(let e=0;e<o;e++)l[i][e]=i===r?t[i][e]*n:t[i][e];return l}}","export default class DataPoint{constructor(t,s){this.x=t,this.y=s}}","import Matrix from\"./Matrix.min.js\";import DataPoint from\"./DataPoint.min.js\";export default class PolynomialRegression{static read(t,e){const i=t.map((t=>new DataPoint(t.x,t.y)));return new PolynomialRegression(i,e)}constructor(t,e){this.data=t,this.degree=e,this.matrix=new Matrix,this.leftMatrix=[],this.rightMatrix=[],this.generateLeftMatrix(),this.generateRightMatrix()}sumX(t,e){let i=0;for(let r=0;r<t.length;r++)i+=Math.pow(t[r].x,e);return i}sumXTimesY(t,e){let i=0;for(let r=0;r<t.length;r++)i+=Math.pow(t[r].x,e)*t[r].y;return i}sumY(t,e){let i=0;for(let r=0;r<t.length;r++)i+=Math.pow(t[r].y,e);return i}generateLeftMatrix(){for(let t=0;t<=this.degree;t++){this.leftMatrix.push([]);for(let e=0;e<=this.degree;e++)this.leftMatrix[t][e]=0===t&&0===e?this.data.length:this.sumX(this.data,t+e)}}generateRightMatrix(){for(let t=0;t<=this.degree;t++)this.rightMatrix[t]=0===t?this.sumY(this.data,1):this.sumXTimesY(this.data,t)}getTerms(){return this.matrix.gaussianJordanElimination(this.leftMatrix,this.rightMatrix)}predictY(t,e){let i=0;for(let r=t.length-1;r>=0;r--)i+=0===r?t[r]:t[r]*Math.pow(e,r);return i}}","/*\r\n\tWebUSB FTDI Driver v0.01a\r\n\t(C) 2020 Shaped Technologies (Jai B.)\r\n\r\n\tGPL v2 free for personal use / commercial or closed source use requires commercial license - contact us.\r\n*/\r\n// Custom minified version. Source: https://github.com/Shaped/webusb-ftdi\r\nexport class WebUSBSerialPort{#_=0;#e=1;#T=2;#t=3;#i=4;#I=5;#S=6;#E=7;#s=9;#r=10;#n=11;#D=12;#F=144;#O=0;#R=1;#o=2;#a=4;#c=8;#h=16;#d=32;#A=64;#u=1;#v=2;#l=3;#M=4;#B=0;#f=1;#U=2;#C=3;#b=this.#_;#p=\"vendor\";#L=0;#N=1;#P=2;#y=3;#g={SIO:1,FT8U232AM:2,FT232BM:3,FT2232C:4,FT232RL:5,FT2232H:6,FT4232H:7,FT232H:8,FTX:9};#m={ftdi_sio_b300:0,ftdi_sio_b600:1,ftdi_sio_b1200:2,ftdi_sio_b2400:3,ftdi_sio_b4800:4,ftdi_sio_b9600:5,ftdi_sio_b19200:6,ftdi_sio_b38400:7,ftdi_sio_b57600:8,ftdi_sio_b115200:9};#Q=this.#i;#H=0;#Y=256;#w=512;#G=768;#K=1024;#q=0;#W=2048;#X=4096;#V=16384;#x=this.#e;#k=1;#j=this.#k<<8|1;#z=this.#k<<8|0;#J=2;#Z=this.#J<<8|2;#$=this.#J<<8|0;#__=this.#T;#e_=0;#T_=256;#t_=512;#i_=1024;#I_=this.#r;#S_=this.#s;#E_=this.#S;#s_=this.#I;#r_=16;#n_=32;#D_=64;#F_=128;#O_=this.#n;#R_=0;#o_=32;#a_=this.#D;#c_=this.#F;#h_=8;#d_=10;#A_=16;#u_=32;#v_=64;#l_=128;#M_=1;#B_=2;#f_=4;#U_=8;#C_=16;#b_=32;#p_=64;#L_=128;constructor(_,e){this.device=_,this.portConfiguration=e,this.interfaceNumber=0,this.endpointIn=0,this.endpointOut=0,this.modemStatusByte=0,this.lineStatusByte=0,this.packetsReceived=0}connect(_,e){this.onReceive=_,this.onReceiveError=e;let T=()=>{this.device.transferIn(this.endpointIn,64).then((_=>{let e=new Uint8Array(_.data.buffer);if(e[0]!=this.modemStatusByte&&(this.modemStatusByte=e[0]),e[1]!=this.lineStatusByte&&(this.lineStatusByte=e[1]),e.length>2){let _=new Uint8Array(e.length-2);for(let T=2;T<e.length;T++)_[T-2]=e[T];this.onReceive(_)}else this.packetsReceived=this.packetsReceived+1;T()}),(_=>{this.onReceiveError(_)}))};return this.device.open().then((()=>{if(null===this.device.configuration)return this.device.selectConfiguration(1)})).then((()=>{this.device.configuration.interfaces.forEach((_=>{_.alternates.forEach((e=>{console.log(e),255==e.interfaceClass&&(this.interfaceNumber=_.interfaceNumber,e.endpoints.forEach((_=>{\"out\"==_.direction&&(this.endpointOut=_.endpointNumber),\"in\"==_.direction&&(this.endpointIn=_.endpointNumber)})))}))}))})).then((()=>this.device.claimInterface(this.interfaceNumber))).then((()=>this.device.selectAlternateInterface(this.interfaceNumber,0))).then((()=>{let _=this.portConfiguration.baudrate;this.device.controlTransferOut({requestType:\"vendor\",recipient:\"device\",request:this.#t,value:this.getBaudDivisor(_),index:this.getBaudBase()})})).then((()=>this.device.controlTransferIn({requestType:\"vendor\",recipient:\"device\",request:this.#I_,value:0,index:0},1))).then((_=>{if(this.device.latencyTimer=new Uint8Array(_.data.buffer)[0],1!=this.device.latencyTimer)return this.device.controlTransferOut({requestType:\"vendor\",recipient:\"device\",request:this.#S_,value:1,index:0})})).then((_=>this.device.latencyTimer=this.device.controlTransferIn({requestType:\"vendor\",recipient:\"device\",request:this.#I_,value:0,index:0},1))).then((_=>(this.device.latencyTimer=new Uint8Array(_.data.buffer)[0],console.log(\"Current Latency Timer: \"),console.log(this.device.latencyTimer),T(),this.device)))}DIV_ROUND_CLOSEST(_,e){return _-1>0||e-1>0||_>0==e>0?(_+e/2)/e:(_-e/2)/e}getBaudBase(){return 48e6}getBaudDivisor(_){let e=this.getBaudBase(),T=new Uint8Array(8);T=[0,3,2,4,1,5,6,7];let t=0,i=this.DIV_ROUND_CLOSEST(e,2*_);return t=i>>3,t|=T[7&i]<<14,1==t?t=0:16385==t&&(t=1),t}send(_){return this.device.transferOut(this.endpointOut,_)}disconnect(){this.device.close()}}class WebUSBSerialDevice{constructor(_){if(!(\"usb\"in navigator))throw new Error(\"USB Support not available!\");this.configuration=_||{overridePortSettings:!1,baudrate:9600,bits:8,stop:1,parity:!1,deviceFilters:[]},this.devices=[]}async getAvailablePorts(){return this.devices=await navigator.usb.getDevices(),this.devices.map((_=>new WebUSBSerialPort(_)))}async requestNewPort(){try{let _=await navigator.usb.requestDevice({filters:this.configuration.deviceFilters});return _ in this.devices||this.devices.push(_),new WebUSBSerialPort(_,this.configuration)}catch(_){throw new Error(_)}}}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n/*\r\n\r\n  Gamma MCA: free, open-source web-MCA for gamma spectroscopy\r\n  2022, NuclearPhoenix.- Phoenix1747\r\n  https://nuclearphoenix.xyz\r\n\r\n  ===============================\r\n\r\n  Possible Future Improvements:\r\n    - (?) Highlight plot lines in ROI selection\r\n    - (?) Isotope list: Add grouped display, e.g. show all Bi-214 lines with a (right-)click\r\n    - (?) Add pulse limit analog to time limit for serial recordings\r\n    - (?) Use Window Controls Overlay API\r\n    - (?) Dead time correction for cps\r\n    - (?) Hist mode: First cps value is always zero?\r\n\r\n    - NPESv2: Create additional save (append) button that allows users to save multiple data packages in one file\r\n    - NPESv2: Let user remove data packages from file in the import selection dialog\r\n    - Automatically close system notifications when the user interacts with the page again\r\n    - Web Worker for Isotope Seek, FWHM Calculation, Plot update, Gaussian correlation\r\n\r\n    - Sound card spectrometry prove of concept\r\n    - Add support for IndexedDB API to store spectra locally inside the browser/app without the need for a filesystem\r\n    - Update calibration to n-poly energy calibration and add efficiency calibration\r\n    - Finish migrating to all npm packages and webpack\r\n\r\n  Known Issues/Problems/Limitations:\r\n    - Plot.ts: Gaussian Correlation Filtering still has pretty bad performance despite many optimizations already.\r\n    - Plotly.js: Plot updates takes forever, but there is no real way to improve it (?)\r\n    - Plotly.js: Would love to use ScatterGL (WebGL) that VASTLY improves performance, but stackgroups don't work there: https://github.com/plotly/plotly.js/issues/5365\r\n    - Plotly.js: Selection Box is technically not supported on scatter traces w/o text or markers, that's why it's spamming errors : https://github.com/plotly/plotly.js/issues/170\r\n    - Service Worker: Somehow fetching and caching the hits tracker does not work in Edge for me (hits.seeyoufarm.com). Works fine with FF.\r\n\r\n*/\r\n\r\nimport { SpectrumPlot, SeekClosest, DownloadFormat, CalculateFWHM } from './plot';\r\nimport { RawData, NPESv1, NPESv1Spectrum, JSONParseError, NPESv2 } from './raw-data';\r\nimport { SerialManager, WebSerial, WebUSBSerial } from './serial';\r\nimport { WebUSBSerialPort } from './lib/webusbserial-min'\r\nimport { ToastNotification, launchSysNotification } from './notifications';\r\nimport { applyTheming, autoThemeChange } from './global-theming';\r\n\r\nexport interface IsotopeList {\r\n  [key: string]: number[];\r\n}\r\n\r\nexport interface SaveTypeList {\r\n  [key: string]: FilePickerAcceptType;\r\n}\r\n\r\ninterface FileSelectData {\r\n  'filename': string,\r\n  'package': NPESv1;\r\n  'type': FileImportType;\r\n}\r\n\r\nexport type DataOrder = 'hist' | 'chron';\r\ntype CalType = 'a' | 'b' | 'c';\r\ntype DataType = 'data' | 'background';\r\ntype PortList = (WebSerial | WebUSBSerial | undefined)[];\r\ntype DownloadType = 'CAL' | 'XML' | 'JSON' | 'EVOL' | 'CSV';\r\ntype SortTypes = 'asc' | 'desc' | 'none';\r\ntype FileImportType = DataType | 'both';\r\n\r\nexport class SpectrumData { // Will hold the measurement data globally.\r\n  data: number[] = [];\r\n  background: number[] = [];\r\n  dataCps: number[] = [];\r\n  backgroundCps: number[] = [];\r\n  dataTime = 1000; // Measurement time in ms\r\n  backgroundTime = 1000; // Measurement time in ms\r\n\r\n  getTotalCounts(type: DataType, start = 0, end = this[type].length - 1): number {\r\n    //return this[type].reduce((acc,curr) => acc + curr, 0);\r\n    const dataArr = this[type];\r\n    let sum = 0;\r\n\r\n    if (start < 0 || start >= dataArr.length || end < 0 || end >= dataArr.length || start > end) {\r\n      console.warn('Invalid sum range! Return default 0.');\r\n      return sum;\r\n    }\r\n\r\n    for (let i = start; i <= end; i++) {\r\n      sum += dataArr[i];\r\n    }\r\n    return sum;\r\n  }\r\n\r\n  addPulseData(type: DataType, newDataArr: number[], adcChannels: number): void {\r\n    if (!this[type].length) this[type] = Array(adcChannels).fill(0);\r\n\r\n    for (const value of newDataArr) {\r\n      this[type][value] += 1;\r\n    }\r\n  }\r\n\r\n  addHist(type: DataType, newHistArr: number[]): void {\r\n    if (!this[type].length) this[type] = newHistArr;\r\n\r\n    for (const index in newHistArr) {\r\n      this[type][index] += newHistArr[index];\r\n    }\r\n  }\r\n}\r\n\r\n// Holds all the classes\r\nconst spectrumData = new SpectrumData();\r\nconst plot = new SpectrumPlot('plot');\r\nconst raw = new RawData(1); // 2=raw, 1=hist\r\n\r\n// Other \"global\" vars\r\nconst calClick = { a: false, b: false, c: false };\r\nconst oldCalVals = { a: '', b: '', c: ''};\r\n\r\nlet portsAvail: PortList = [];\r\nlet refreshRate = 1000; // Delay in ms between serial plot updates\r\nlet maxRecTimeEnabled = false;\r\nlet maxRecTime = 1800000; // 30 minutes\r\nconst REFRESH_META_TIME = 200; // Milliseconds\r\nconst CONSOLE_REFRESH = 200; // Milliseconds\r\nconst AUTOSAVE_TIME = 900_000; // Milliseconds === 15 minutes\r\n\r\nlet cpsValues: number[] = [];\r\n\r\nlet isoListURL = 'assets/isotopes_energies_min.json';\r\nconst isoList: IsotopeList = {};\r\nlet checkNearIso = false;\r\nlet maxDist = 100; // Max energy distance to highlight\r\n\r\nconst APP_VERSION = '2024-02-04';\r\nconst localStorageAvailable = 'localStorage' in self; // Test for localStorage, for old browsers\r\nconst wakeLockAvailable = 'wakeLock' in navigator; // Test for Screen Wake Lock API\r\nconst notificationsAvailable = 'Notification' in window; // Test for Notifications API\r\nlet allowNotifications = notificationsAvailable;\r\nlet fileSystemWritableAvail = false;\r\nlet firstInstall = false;\r\n\r\n// Isotope table variables\r\nconst isoTableSortDirections: SortTypes[] = ['none', 'none', 'none'];\r\nconst faSortClasses: {[key: string]: string} = {\r\n  none: 'fa-sort',\r\n  asc: 'fa-sort-up',\r\n  desc: 'fa-sort-down'\r\n};\r\n\r\n// Key combinations for hotkey function: ALT+KEY\r\nconst hotkeys = {\r\n  'r': 'reset-plot',\r\n  's': 'sma-label',\r\n  'x': 'xAxis',\r\n  'y': 'yAxis',\r\n  'c': 'plot-cps',\r\n  't': 'plot-type',\r\n  'i': 'iso-hover-label',\r\n  'p': 'peak-finder-btn',\r\n  '1': 'file-import-tab',\r\n  '2': 'serial-tab',\r\n  '3': 'sound-tab',\r\n  '4': 'calibration-tab',\r\n  '5': 'metadata-tab',\r\n};\r\n\r\n\r\n/*\r\n  Theming-related function calls\r\n*/\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n  if (localStorageAvailable) {\r\n    plot.darkMode = applyTheming() === 'dark';\r\n    resetPlot(false);\r\n  }\r\n});\r\n\r\n\r\nwindow.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {\r\n  if (localStorageAvailable) {\r\n    plot.darkMode = autoThemeChange() === 'dark';\r\n    resetPlot(false);\r\n  }\r\n});\r\n\r\n\r\n/*\r\n  Startup of the page\r\n*/\r\ndocument.body.onload = async function(): Promise<void> {\r\n  fileSystemWritableAvail = (window.FileSystemHandle && 'createWritable' in FileSystemFileHandle.prototype); // Test for File System Access API\r\n\r\n  if (localStorageAvailable) {\r\n    loadSettingsStorage();\r\n  } else {\r\n    console.error('Browser does not support local storage. OOF, it must be ancient. Dude, update your browser. For real.');\r\n  }\r\n\r\n  if (navigator.serviceWorker) { // Add service worker for PWA\r\n    const reg = await navigator.serviceWorker.register('/service-worker.js'); // Onload async because of this... good? hmmm.\r\n\r\n    if (localStorageAvailable) {\r\n      reg.addEventListener('updatefound', () => {\r\n        if (firstInstall) return; // \"Update\" will always be installed on first load (service worker installation)\r\n\r\n        new ToastNotification('updateInstalled'); //popupNotification('update-installed');\r\n        launchSysNotification('New Update!', 'An update has been installed and will be applied once you reload Gamma MCA.');\r\n      });\r\n    }\r\n  }\r\n\r\n  if ('standalone' in window.navigator || window.matchMedia('(display-mode: standalone)').matches) { // Standalone PWA mode\r\n    document.title += ' PWA';\r\n    document.getElementById('main')!.classList.remove('p-1');\r\n\r\n    const borderModeElements = document.getElementsByClassName('border-mode');\r\n    for (const element of borderModeElements) {\r\n      element.classList.add('border-0');\r\n    }\r\n\r\n    document.getElementById('plot-tab')!.classList.add('border-start-0', 'border-end-0');\r\n  } else { // Default browser window\r\n    document.getElementById('main')!.classList.remove('pb-1');\r\n    document.title += ' web application';\r\n  }\r\n\r\n  isoListURL = new URL(isoListURL, window.location.origin).href;\r\n\r\n  if (navigator.serial || navigator.usb) { // Web Serial API or fallback Web USB API with FTDx JS driver\r\n    const serErrDiv = document.getElementById('serial-error')!;\r\n    serErrDiv.parentNode!.removeChild(serErrDiv); // Delete Serial Not Supported Warning\r\n    navigator[navigator.serial ? 'serial' : 'usb'].addEventListener('connect', serialConnect);\r\n    navigator[navigator.serial ? 'serial' : 'usb'].addEventListener('disconnect', serialDisconnect);\r\n    listSerial(); // List Available Serial Ports\r\n  } else {\r\n    const serDiv = document.getElementById('serial-div')!;\r\n    serDiv.parentNode!.removeChild(serDiv); // Delete Serial Control Div\r\n\r\n    const serSettingsElements = document.getElementsByClassName('ser-settings');\r\n    for (const element of serSettingsElements) { // Disable serial settings\r\n      (<HTMLSelectElement | HTMLButtonElement>element).disabled = true;\r\n    }\r\n    const serControlsElements = document.getElementsByClassName('serial-controls');\r\n    for (const element of serControlsElements) { // Disable serial controls\r\n      (<HTMLSelectElement | HTMLButtonElement>element).disabled = true;\r\n    }\r\n  }\r\n\r\n  if ('launchQueue' in window && 'LaunchParams' in window) { // File Handling API\r\n    (<any>window).launchQueue.setConsumer(\r\n      async (launchParams: { files: FileSystemFileHandle[] }) => {\r\n        if (!launchParams.files.length) return;\r\n\r\n        const file: File = await launchParams.files[0].getFile();\r\n        const fileEnding = file.name.split('.')[1].toLowerCase();\r\n\r\n        if (fileSystemWritableAvail) { // Try to use the File System Access API if possible\r\n          if (fileEnding === 'json' || fileEnding === 'xml') {\r\n            dataFileHandle = launchParams.files[0];\r\n            showSaveButton(dataFileHandle.name); // Only show \"Save\" button if it can be used\r\n          }\r\n        }\r\n\r\n        const spectrumEndings = ['csv', 'tka', 'xml', 'txt', 'json'];\r\n        if (spectrumEndings.includes(fileEnding)) getFileData(file, 'data');\r\n        /* else if (fileEnding === 'json') {\r\n          importCal(file);\r\n        } */\r\n        console.warn('File could not be imported!');\r\n      });\r\n  }\r\n\r\n  resetPlot(); // Set up plot window\r\n\r\n  document.getElementById('version-tag')!.innerText += ` ${APP_VERSION}.`;\r\n\r\n  if (localStorageAvailable) {\r\n    if (loadJSON('lastVisit') <= 0) {\r\n      new ToastNotification('welcomeMessage'); //popupNotification('welcome-msg');\r\n      if (notificationsAvailable) legacyPopupNotification('ask-notifications'); // Show notifications notification on first visit\r\n\r\n      firstInstall = true;\r\n    }\r\n\r\n    saveJSON('lastVisit', Date.now());\r\n    saveJSON('lastUsedVersion', APP_VERSION);\r\n\r\n    const sVal = loadJSON('serialDataMode'); // ids: s1, s2\r\n    const rVal = loadJSON('fileDataMode'); // ids: r1, r2\r\n\r\n    if (sVal) {\r\n      const element = <HTMLInputElement>document.getElementById(sVal);\r\n      element.checked = true;\r\n      selectSerialType(element);\r\n    }\r\n\r\n    if (rVal) {\r\n      const element = <HTMLInputElement>document.getElementById(rVal);\r\n      element.checked = true;\r\n      selectFileType(element);\r\n    }\r\n\r\n    const settingsNotSaveAlert = document.getElementById('ls-unavailable')!; // Remove saving alert\r\n    settingsNotSaveAlert.parentNode!.removeChild(settingsNotSaveAlert);\r\n\r\n    const getAutoScrollValue = loadJSON('consoleAutoscrollEnabled');\r\n    if (getAutoScrollValue) {\r\n      autoscrollEnabled = getAutoScrollValue;\r\n      (<HTMLInputElement>document.getElementById('autoscroll-console')).checked = getAutoScrollValue;\r\n    }\r\n  } else {\r\n    const settingsSaveAlert = document.getElementById('ls-available')!; // Remove saving alert\r\n    settingsSaveAlert.parentNode!.removeChild(settingsSaveAlert);\r\n    new ToastNotification('welcomeMessage'); //popupNotification('welcome-msg');\r\n  }\r\n\r\n  loadSettingsDefault();\r\n  sizeCheck();\r\n\r\n  bindInputs(); // Enable settings enter press and onclick buttons\r\n\r\n  const menuElements = document.getElementById('main-tabs')!.getElementsByTagName('button');\r\n  for (const button of menuElements) {\r\n    button.addEventListener('shown.bs.tab', (/*event: Event*/): void => {\r\n      const toggleCalChartElement = <HTMLInputElement>document.getElementById('toggle-calibration-chart');\r\n      const toggleEvolChartElement = <HTMLInputElement>document.getElementById('toggle-evolution-chart');\r\n\r\n      if (toggleCalChartElement.checked || toggleEvolChartElement.checked) { // Leave cal/evol chart when changing tabs\r\n        toggleCalChartElement.checked = false;\r\n        toggleEvolChartElement.checked = false;\r\n        toggleCalChart(false);\r\n        toogleEvolChart(false);\r\n      } else {\r\n        plot.updatePlot(spectrumData); // Adjust Plot Size For Main Tab Menu Content Size\r\n      }\r\n    });\r\n  }\r\n\r\n  const isoTable = <HTMLTableElement>document.getElementById('table');\r\n  \r\n  const thList = <NodeListOf<HTMLTableCellElement>>isoTable.querySelectorAll('th[data-sort-by]'); // Add click event listeners to table header cells\r\n  thList.forEach(th => {\r\n    th.addEventListener('click', () => {\r\n      const columnIndex = Number(th.dataset.sortBy);\r\n      const sortDirection = isoTableSortDirections[columnIndex];\r\n\r\n      // Toggle the sort direction\r\n      isoTableSortDirections.fill('none');\r\n      isoTableSortDirections[columnIndex] = sortDirection === 'asc' ? 'desc' : 'asc';\r\n\r\n      thList.forEach((loopTableHeader, index) => {\r\n        const sortIcon = <HTMLElement>loopTableHeader.querySelector('.fa-solid');\r\n\r\n        sortIcon.classList.remove(...Object.values(faSortClasses)); // Remove all old icons\r\n        sortIcon.classList.add(faSortClasses[isoTableSortDirections[index+1]]); // Set new icons\r\n      });\r\n\r\n      sortTableByColumn(isoTable, columnIndex, isoTableSortDirections[columnIndex]); // Actually sort the table rows\r\n    });\r\n  });\r\n\r\n  // Activate notification button if the Notifications API is supported by the browser\r\n  if (notificationsAvailable) {\r\n    (<HTMLInputElement>document.getElementById('notifications-toggle')).disabled = false;\r\n  } else {\r\n    console.error('Browser does not support Notifications API.');\r\n  }\r\n\r\n  bindHotkeys();\r\n\r\n  if (localStorageAvailable) checkAutosave(); // Check for the last autosaved spectrum\r\n\r\n  const loadingOverlay = document.getElementById('loading')!;\r\n  loadingOverlay.parentNode!.removeChild(loadingOverlay); // Delete Loading Thingymajig\r\n};\r\n\r\n\r\n// Exit website confirmation alert\r\nwindow.onbeforeunload = (event): string => {\r\n  event.preventDefault();\r\n  return event.returnValue = 'Are you sure you want to exit?';\r\n};\r\n\r\n\r\nwindow.onpagehide = (): void => {\r\n  // Delete autosave data when user deliberately leaves the page without saving\r\n  localStorage.removeItem('autosave');\r\n}\r\n\r\n\r\n// Needed For Responsiveness! DO NOT REMOVE OR THE LAYOUT GOES TO SHIT!!!\r\ndocument.body.onresize = (): void => {\r\n  plot.updatePlot(spectrumData);\r\n  if (navigator.userAgent.toLowerCase().match(/mobile|tablet|android|webos|iphone|ipad|ipod|blackberry|bb|playbook|iemobile|windows phone|kindle|silk|opera mini/i)) {\r\n    // Mobile device\r\n  } else {\r\n    sizeCheck();\r\n  }\r\n};\r\n\r\n\r\n// User changed from browser window to PWA (after installation) or backwards\r\nwindow.matchMedia('(display-mode: standalone)').addEventListener('change', (/*event*/): void => {\r\n  /*\r\n  let displayMode = 'browser';\r\n  if (event.matches) {\r\n    displayMode = 'standalone';\r\n  }\r\n  */\r\n  window.location.reload(); // Just reload the page?\r\n});\r\n\r\n\r\nlet deferredPrompt: any;\r\n\r\nwindow.addEventListener('beforeinstallprompt', (event: Event): void => {\r\n  event.preventDefault(); // Prevent the mini-infobar from appearing on mobile\r\n  deferredPrompt = event;\r\n\r\n  if (localStorageAvailable) {\r\n    if (!loadJSON('installPrompt')) {\r\n      legacyPopupNotification('pwa-installer'); // Show notification on first visit\r\n      saveJSON('installPrompt', true);\r\n    }\r\n  }\r\n\r\n  document.getElementById('manual-install')!.classList.remove('d-none');\r\n});\r\n\r\n\r\ndocument.getElementById('install-pwa-btn')!.onclick = () => installPWA();\r\ndocument.getElementById('install-pwa-toast-btn')!.onclick = () => installPWA();\r\n\r\nasync function installPWA(): Promise<void> {\r\n  //hideNotification('pwa-installer');\r\n  deferredPrompt.prompt();\r\n  await deferredPrompt.userChoice;\r\n}\r\n\r\n\r\nwindow.addEventListener('onappinstalled', (): void => {\r\n  deferredPrompt = null;\r\n  hideNotification('pwa-installer');\r\n  document.getElementById('manual-install')!.classList.add('d-none');\r\n});\r\n\r\n\r\ndocument.getElementById('notifications-toggle')!.onclick = event => toggleNotifications((<HTMLInputElement>event.target).checked);\r\ndocument.getElementById('notifications-toast-btn')!.onclick = () => toggleNotifications(true);\r\n\r\nfunction toggleNotifications(toggle: boolean): void {\r\n  allowNotifications = toggle;\r\n\r\n  if (Notification.permission !== 'granted') {\r\n    if (allowNotifications) {\r\n      // Request permission from user to use notifications\r\n      Notification.requestPermission().then((permission) => {\r\n        if (permission === 'granted') {\r\n          launchSysNotification('Success!', 'Notifications for Gamma MCA are now enabled.', true);\r\n        }\r\n        allowNotifications = allowNotifications && (permission === 'granted');\r\n\r\n        (<HTMLInputElement>document.getElementById('notifications-toggle')).checked = allowNotifications;\r\n        const result = saveJSON('allowNotifications', allowNotifications);\r\n        new ToastNotification(result ? 'settingSuccess' : 'settingError'); // Success or error toast\r\n      });\r\n    }\r\n  }\r\n  \r\n  hideNotification('ask-notifications');\r\n  (<HTMLInputElement>document.getElementById('notifications-toggle')).checked = allowNotifications;\r\n  const result = saveJSON('allowNotifications', allowNotifications);\r\n  new ToastNotification(result ? 'settingSuccess' : 'settingError'); // Success or error toast\r\n}\r\n\r\n\r\nfunction showSaveButton(filename: string): void {\r\n  const overwriteButton = <HTMLButtonElement>document.getElementById('overwrite-button');\r\n  overwriteButton.disabled = false;\r\n  overwriteButton.title = `Overwrite \"${filename}\" with current data.`;\r\n}\r\n\r\n\r\ndocument.getElementById('data')!.onclick = event => clickFileInput(event, 'data');\r\ndocument.getElementById('background')!.onclick = event => clickFileInput(event, 'background');\r\n\r\nconst openFileTypes: FilePickerAcceptType[] = [\r\n  {\r\n    description: 'Combination data file',\r\n    accept: {\r\n      'application/json': ['.json'],\r\n      'application/xml': ['.xml']\r\n    }\r\n  },\r\n  {\r\n    description: 'Single spectrum file',\r\n    accept: {\r\n      'text/csv': ['.csv'],\r\n      'text/txt': ['.txt'],\r\n      'text/TKA': ['.TKA']\r\n    }\r\n  }\r\n];\r\nlet dataFileHandle: FileSystemFileHandle | undefined;\r\nlet backgroundFileHandle: FileSystemFileHandle | undefined;\r\n\r\nasync function clickFileInput(event: MouseEvent, type: DataType): Promise<void> {\r\n  //(<HTMLInputElement>event.target).value = ''; // No longer necessary?\r\n\r\n  if (window.FileSystemHandle && window.showOpenFilePicker) { // Try to use the File System Access API if possible\r\n    event.preventDefault(); // Don't show the \"standard\" HTML file picker...\r\n\r\n    const openFilePickerOptions = {\r\n      types: openFileTypes,\r\n      multiple: false\r\n    };\r\n\r\n    let fileHandle: FileSystemFileHandle;\r\n\r\n    try {\r\n      [fileHandle] = await window.showOpenFilePicker(openFilePickerOptions); // ...instead show a File System Access API picker\r\n    } catch (error) {\r\n      console.warn('File Picker error:', error);\r\n      return;\r\n    }\r\n    \r\n    const file = await fileHandle.getFile();\r\n\r\n    getFileData(file, type);\r\n\r\n    const fileExtension = file.name.split('.')[1].toLowerCase();\r\n\r\n    if (fileExtension !== 'json' && fileExtension !== 'xml') {\r\n      //console.info('The \"Save\" action is not supported on the imported file.');\r\n      return;\r\n    }\r\n\r\n    // File System Access API specific stuff\r\n    if (type === 'background') {\r\n      backgroundFileHandle = fileHandle;\r\n    } else {\r\n      dataFileHandle = fileHandle;\r\n    }\r\n\r\n    // Only show \"Save\" button if it can be used\r\n    if (fileSystemWritableAvail) showSaveButton(fileHandle.name);\r\n  }\r\n}\r\n\r\n\r\ndocument.getElementById('data')!.onchange = event => importFile(<HTMLInputElement>event.target, 'data');\r\ndocument.getElementById('background')!.onchange = event => importFile(<HTMLInputElement>event.target, 'background');\r\n\r\nfunction importFile(input: HTMLInputElement, type: DataType): void {\r\n  if (!input.files?.length) return; // File selection has been canceled\r\n  getFileData(input.files[0], type);\r\n}\r\n\r\n\r\nfunction getFileData(file: File, type: FileImportType): void { // Gets called when a file has been selected.\r\n  const reader = new FileReader();\r\n\r\n  const fileEnding = file.name.split('.')[1];\r\n\r\n  reader.readAsText(file);\r\n\r\n  reader.onerror = () => {\r\n    new ToastNotification('fileError'); //popupNotification('file-error');\r\n    return;\r\n  };\r\n\r\n  reader.onload = async () => {\r\n    const result = (<string>reader.result).trim(); // A bit unclean for typescript, I'm sorry\r\n\r\n    if (fileEnding.toLowerCase() === 'xml') {\r\n      if (window.DOMParser) {\r\n        // Only grabs the first spectrum if there are multiple\r\n        // Use JSON (NPES) if you want to have the option to select the spectrum to show\r\n        const {espectrum, bgspectrum, coeff, meta} = raw.xmlToArray(result);\r\n\r\n        (<HTMLInputElement>document.getElementById('sample-name')).value = meta.name;\r\n        (<HTMLInputElement>document.getElementById('sample-loc')).value = meta.location;\r\n\r\n        if (meta.time) {\r\n          const date = new Date(meta.time);\r\n          const rightDate = new Date(date.getTime() - date.getTimezoneOffset()*60*1000);\r\n          (<HTMLInputElement>document.getElementById('sample-time')).value = rightDate.toISOString().slice(0,16);\r\n        }\r\n\r\n        (<HTMLInputElement>document.getElementById('sample-vol')).value = meta.volume?.toString() ?? '';\r\n        (<HTMLInputElement>document.getElementById('sample-weight')).value = meta.weight?.toString() ?? '';\r\n        (<HTMLInputElement>document.getElementById('device-name')).value = meta.deviceName;\r\n        (<HTMLInputElement>document.getElementById('add-notes')).value = meta.notes;\r\n\r\n        startDate = new Date(meta.startTime);\r\n        endDate = new Date(meta.endTime);\r\n\r\n        if (espectrum?.length && bgspectrum?.length) { // Both files ok\r\n          spectrumData.data = espectrum;\r\n          spectrumData.background = bgspectrum;\r\n          spectrumData.dataTime = meta.dataMt*1000;\r\n          spectrumData.backgroundTime = meta.backgroundMt*1000;\r\n        \r\n          if (meta.dataMt) spectrumData.dataCps = spectrumData.data.map(val => val / meta.dataMt);\r\n          if (meta.backgroundMt) spectrumData.backgroundCps = spectrumData.background.map(val => val / meta.backgroundMt);\r\n\r\n          type = 'both'; // Update type to reflect that both spectra have been loaded\r\n\r\n        } else if (!espectrum?.length && !bgspectrum?.length) { // No spectrum\r\n          new ToastNotification('fileError'); //popupNotification('file-error');\r\n        } else if (type !== 'both') { // Only one spectrum\r\n          const fileData = espectrum?.length ? espectrum : bgspectrum;\r\n          const fileDataTime = (espectrum?.length ? meta.dataMt : meta.backgroundMt)*1000;\r\n          const fileDataType = type;\r\n\r\n          spectrumData[fileDataType] = fileData;\r\n          spectrumData[`${fileDataType}Time`] = fileDataTime;\r\n          \r\n          if (fileDataTime) spectrumData[`${fileDataType}Cps`] = spectrumData[fileDataType].map(val => val / fileDataTime * 1000);\r\n        }\r\n\r\n        const importedCount = Object.values(coeff).filter(value => value !== 0).length;\r\n\r\n        if (importedCount >= 2) {\r\n          resetCal(); // Reset in case of old calibration\r\n          plot.calibration.coeff = coeff;\r\n          plot.calibration.imported = true;\r\n          displayCoeffs();\r\n\r\n          const calSettings = document.getElementsByClassName('cal-setting');\r\n          for (const element of calSettings) {\r\n            (<HTMLInputElement>element).disabled = true;\r\n          }\r\n\r\n          addImportLabel();\r\n          toggleCal(true);\r\n        }\r\n      } else {\r\n        console.error('No DOM parser in this browser!');\r\n        (<HTMLButtonElement>document.getElementById('overwrite-button')).disabled = true; // Disable save button again, if it could be used\r\n        return;\r\n      }\r\n    } else if (fileEnding.toLowerCase() === 'json') { // THIS SECTION MAKES EVERYTHING ASYNC DUE TO THE JSON THING!!!\r\n      const jsonData = await raw.jsonToObject(result);\r\n\r\n      // Check if multiple files/errors were imported\r\n      if (jsonData.length > 1) {\r\n        const fileSelectModalElement = document.getElementById('file-select-modal');\r\n        const fileSelectModal = new (<any>window).bootstrap.Modal(fileSelectModalElement);\r\n        const selectElement = (<HTMLSelectElement>document.getElementById('select-spectrum'));\r\n\r\n        // Delete all previous options\r\n        selectElement.options.length = 0;\r\n\r\n        // Fill with all the info and check for errors at the same time\r\n        for (const dataPackage of jsonData) {\r\n          // Check if there are any error packages\r\n          if (checkJSONImportError(file.name, dataPackage)) return;\r\n\r\n          const opt = document.createElement('option');\r\n          const optionValue: FileSelectData = {\r\n            'filename': file.name,\r\n            'package': <NPESv1>dataPackage,\r\n            'type': type,\r\n          };\r\n\r\n          opt.value = JSON.stringify(optionValue);\r\n          opt.text = `${(<NPESv1>dataPackage).sampleInfo?.name} (${(<NPESv1>dataPackage).resultData.startTime ?? 'Undefined Time'})`;\r\n          selectElement.add(opt);\r\n        }\r\n\r\n        fileSelectModal.show();\r\n        \r\n      } else {\r\n        const importData = jsonData[0]; // Select first element to probe for errors\r\n\r\n        // Check if it's an error\r\n        if (checkJSONImportError(file.name, importData)) {\r\n          (<HTMLButtonElement>document.getElementById('overwrite-button')).disabled = true; // Disable save button again, if it could be used\r\n          return;\r\n        }\r\n\r\n        npesFileImport(file.name, <NPESv1>importData, type);\r\n      }\r\n      return; // Nothing else to do, imported successfully or continue doing stuff when the user has finished interacting with the modal\r\n    } else if (type === 'background' || type === 'data') {\r\n      spectrumData[`${type}Time`] = 1000;\r\n      const csvData = raw.csvToArray(result);\r\n      spectrumData[type] = csvData.histogramData;\r\n\r\n      if (csvData.calibrationCoefficients) {\r\n        resetCal(); // Reset in case of old calibration\r\n\r\n        for (const index in csvData.calibrationCoefficients) {\r\n          plot.calibration.coeff[`c${parseInt(index)+1}`] = csvData.calibrationCoefficients[index];\r\n        }\r\n        plot.calibration.imported = true;\r\n        displayCoeffs();\r\n\r\n        const calSettings = document.getElementsByClassName('cal-setting');\r\n        for (const element of calSettings) {\r\n          (<HTMLInputElement>element).disabled = true;\r\n        }\r\n        addImportLabel();\r\n        toggleCal(true);\r\n      }\r\n    } else {\r\n      console.error('Could not import file, some kind of critical mistake happened. This is very bad and should not have happened!');\r\n    }\r\n\r\n    finalizeFileImport(file.name, type);\r\n  };\r\n}\r\n\r\n\r\nfunction checkJSONImportError(filename: string, data: NPESv1 | JSONParseError): boolean {\r\n  if ('code' in data && 'description' in data) {\r\n    //new ToastNotification('npesError'); //popupNotification('npes-error');\r\n    // Pop up modal with more error information instead of just toast with oopsy\r\n    const importErrorModalElement = document.getElementById('import-error-modal');\r\n    const fileImportErrorModal = new (<any>window).bootstrap.Modal(importErrorModalElement);\r\n\r\n    // Change content according to error\r\n    document.getElementById('error-filename')!.innerText = filename;\r\n    document.getElementById('error-code')!.innerText = data.code;\r\n    document.getElementById('error-desc')!.innerText = data.description;\r\n\r\n    fileImportErrorModal.show();\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n\r\nfunction npesFileImport(filename: string, importData: NPESv1, type: FileImportType): void {\r\n  // Import all the data from a JSON spectrum file to the active program\r\n  (<HTMLInputElement>document.getElementById('device-name')).value = importData?.deviceData?.deviceName ?? '';\r\n  (<HTMLInputElement>document.getElementById('sample-name')).value = importData?.sampleInfo?.name ?? '';\r\n  (<HTMLInputElement>document.getElementById('sample-loc')).value = importData?.sampleInfo?.location ?? '';\r\n\r\n  if (importData.sampleInfo?.time) {\r\n    const date = new Date(importData.sampleInfo.time);\r\n    const rightDate = new Date(date.getTime() - date.getTimezoneOffset()*60*1000);\r\n\r\n    (<HTMLInputElement>document.getElementById('sample-time')).value = rightDate.toISOString().slice(0,16);\r\n  }\r\n\r\n  (<HTMLInputElement>document.getElementById('sample-weight')).value = importData.sampleInfo?.weight?.toString() ?? '';\r\n  (<HTMLInputElement>document.getElementById('sample-vol')).value = importData.sampleInfo?.volume?.toString() ?? '';\r\n  (<HTMLInputElement>document.getElementById('add-notes')).value = importData.sampleInfo?.note ?? '';\r\n\r\n  const resultData = importData.resultData;\r\n\r\n  if (resultData.startTime && resultData.endTime) {\r\n    startDate = new Date(resultData.startTime);\r\n    endDate = new Date(resultData.endTime);\r\n  }\r\n\r\n  const espectrum = resultData.energySpectrum;\r\n  const bgspectrum = resultData.backgroundEnergySpectrum;\r\n  if (espectrum && bgspectrum) { // Both files ok\r\n    spectrumData.data = espectrum.spectrum;\r\n    spectrumData.background = bgspectrum.spectrum;\r\n\r\n    const eMeasurementTime = espectrum.measurementTime;\r\n    if (eMeasurementTime) {\r\n      spectrumData.dataTime = eMeasurementTime * 1000;\r\n      spectrumData.dataCps = spectrumData.data.map(val => val / eMeasurementTime);\r\n    }\r\n    const bgMeasurementTime = bgspectrum.measurementTime;\r\n    if (bgMeasurementTime) {\r\n      spectrumData.backgroundTime = bgMeasurementTime * 1000;\r\n      spectrumData.backgroundCps = spectrumData.background.map(val => val / bgMeasurementTime);\r\n    }\r\n\r\n    type = 'both'; // Update type to reflect that both spectra have been loaded\r\n\r\n  } else if (type !== 'both') { // Only one spectrum\r\n    const dataObj = espectrum ?? bgspectrum;\r\n    const fileData = dataObj?.spectrum ?? [];\r\n    const fileDataTime = (dataObj?.measurementTime ?? 1) * 1000;\r\n    const fileDataType = type;\r\n\r\n    spectrumData[fileDataType] = fileData;\r\n    spectrumData[`${fileDataType}Time`] = fileDataTime;\r\n    \r\n    if (fileDataTime) spectrumData[`${fileDataType}Cps`] = spectrumData[fileDataType].map(val => val / fileDataTime * 1000);\r\n  }\r\n\r\n  const calDataObj = (espectrum ?? bgspectrum)?.energyCalibration; // Grab calibration preferably from energy spectrum\r\n\r\n  if (calDataObj) {\r\n    const coeffArray: number[] = calDataObj.coefficients;\r\n    const numCoeff: number = calDataObj.polynomialOrder;\r\n\r\n    resetCal(); // Reset in case of old calibration\r\n\r\n    for (const index in coeffArray) {\r\n      plot.calibration.coeff[`c${numCoeff-parseInt(index)+1}`] = coeffArray[index];\r\n    }\r\n    plot.calibration.imported = true;\r\n    displayCoeffs();\r\n\r\n    const calSettings = document.getElementsByClassName('cal-setting');\r\n    for (const element of calSettings) {\r\n      (<HTMLInputElement>element).disabled = true;\r\n    }\r\n    addImportLabel();\r\n    toggleCal(true);\r\n  }\r\n\r\n  finalizeFileImport(filename, type);\r\n}\r\n\r\n\r\nfunction finalizeFileImport(filename: string, type: FileImportType): void {\r\n  if (type === 'both') { // Set file name(s) to the openers\r\n    document.getElementById('data-form-label')!.innerText = filename;\r\n    document.getElementById('background-form-label')!.innerText = filename;\r\n  } else {\r\n    document.getElementById(`${type}-form-label`)!.innerText = filename;\r\n  } \r\n\r\n  updateSpectrumCounts();\r\n  updateSpectrumTime();\r\n\r\n  /*\r\n    Error Msg Problem with RAW Stream selection?\r\n  */\r\n  if (spectrumData.background.length !== spectrumData.data.length && spectrumData.data.length && spectrumData.background.length) {\r\n    new ToastNotification('dataError'); //popupNotification('data-error');\r\n    removeFile(type); // Remove file again\r\n  }\r\n\r\n  plot.resetPlot(spectrumData);\r\n  bindPlotEvents();\r\n}\r\n\r\n\r\ndocument.getElementById('spectrum-select-btn')!.onclick = () => getJSONSelectionData();\r\n\r\nfunction getJSONSelectionData(): void {\r\n  const fileSelectData = <FileSelectData>JSON.parse((<HTMLSelectElement>document.getElementById('select-spectrum')).value);\r\n\r\n  npesFileImport(fileSelectData.filename, fileSelectData.package, fileSelectData.type);\r\n\r\n  const fileSelectModalElement = document.getElementById('file-select-modal')!; // Close the modal if the file saving has been successful\r\n  const closeButton = <HTMLButtonElement>fileSelectModalElement.querySelector('.btn-close'); // Find some close button\r\n  closeButton.click();\r\n}\r\n\r\n\r\nfunction checkAutosave(): void {\r\n  const data: string | undefined = loadJSON('autosave');\r\n\r\n  if (data) legacyPopupNotification('autosave-dialog'); // Show notification on first visit\r\n}\r\n\r\n\r\ndocument.getElementById('restore-data-btn')!.onclick = () => loadAutosave(true);\r\ndocument.getElementById('discard-data-btn')!.onclick = () => loadAutosave(false);\r\n\r\nasync function loadAutosave(restore: boolean): Promise<void> {\r\n  const data: string | undefined = loadJSON('autosave');\r\n\r\n  if (data) {\r\n    localStorage.removeItem('autosave'); // Delete autosave data\r\n\r\n    if (restore) {\r\n      const objData = await raw.jsonToObject(data);\r\n\r\n      if (objData.length) {\r\n        const importData = objData[0]; // Select first element to probe for errors\r\n\r\n        // TODO: Check if it's an error?\r\n        //if (checkJSONImportError(file.name, importData)) return;\r\n\r\n        npesFileImport('Autosave Data', <NPESv1>importData, 'data');\r\n      } else {\r\n        console.error('Could not load autosaved data!');\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*\r\ndocument.getElementById('delete-spectrum')!.onclick = () => deleteJSONSelectionData();\r\n\r\nfunction deleteJSONSelectionData(): void {\r\n  const selectElement = <HTMLSelectElement>document.getElementById('select-spectrum');\r\n  const selectedValue = selectElement.value;\r\n  \r\n  // Remove from file and save contents\r\n\r\n  selectElement.remove(selectElement.selectedIndex);\r\n}\r\n*/\r\n\r\n\r\nfunction sizeCheck(): void {\r\n  const minWidth = 1100;\r\n  const minHeight = 700;\r\n  if (document.documentElement.clientWidth <= minWidth || document.documentElement.clientHeight <= minHeight) {\r\n    console.warn(`Small screen detected. Screen should be at least ${minWidth}x${minHeight} px for the best experience.`)\r\n  }\r\n}\r\n\r\n\r\ndocument.getElementById('clear-data')!.onclick = () => removeFile('data');\r\ndocument.getElementById('clear-bg')!.onclick = () => removeFile('background');\r\n\r\nfunction removeFile(type: FileImportType): void {\r\n  let removeType: DataType[];\r\n  if (type === 'both') {\r\n    removeType = ['data', 'background'];\r\n  } else {\r\n    removeType = [type];\r\n  }\r\n\r\n  for (const id of removeType) {\r\n    spectrumData[id] = [];\r\n    spectrumData[`${id}Time`] = 0;\r\n    (<HTMLInputElement>document.getElementById(id)).value = '';\r\n    document.getElementById(`${id}-form-label`)!.innerText = 'No File Chosen';\r\n\r\n    if (id === 'data') dataFileHandle = undefined; // Reset File System Access API handlers\r\n    if (id === 'background') backgroundFileHandle = undefined;\r\n    if (dataFileHandle) {\r\n      showSaveButton(dataFileHandle.name);\r\n    } else if (backgroundFileHandle) {\r\n      showSaveButton(backgroundFileHandle.name);\r\n    } else {\r\n      (<HTMLButtonElement>document.getElementById('overwrite-button')).disabled = true; // Disable save button again, if it could be used\r\n    }\r\n\r\n    document.getElementById(id + '-icon')!.classList.add('d-none');\r\n  }\r\n\r\n  updateSpectrumCounts();\r\n  updateSpectrumTime();\r\n\r\n  plot.resetPlot(spectrumData);\r\n  bindPlotEvents();\r\n}\r\n\r\n\r\nfunction addImportLabel(): void {\r\n  document.getElementById('calibration-title')!.classList.remove('d-none');\r\n}\r\n\r\n\r\nfunction updateSpectrumCounts() {\r\n  const sCounts = spectrumData.getTotalCounts('data');\r\n  const bgCounts = spectrumData.getTotalCounts('background');\r\n\r\n  document.getElementById('total-spec-cts')!.innerText = sCounts.toString();\r\n  document.getElementById('total-bg-cts')!.innerText = bgCounts.toString();\r\n\r\n  if (sCounts) document.getElementById('data-icon')!.classList.remove('d-none');\r\n  if (bgCounts) document.getElementById('background-icon')!.classList.remove('d-none');\r\n}\r\n\r\n\r\nfunction updateSpectrumTime() {\r\n  document.getElementById('spec-time')!.innerText = getRecordTimeStamp(spectrumData.dataTime);\r\n  document.getElementById('bg-time')!.innerText = getRecordTimeStamp(spectrumData.backgroundTime);\r\n}\r\n\r\n\r\ndocument.getElementById('r1')!.onchange = event => selectFileType(<HTMLInputElement>event.target);\r\ndocument.getElementById('r2')!.onchange = event => selectFileType(<HTMLInputElement>event.target);\r\n\r\nfunction selectFileType(button: HTMLInputElement): void {\r\n  raw.fileType = parseInt(button.value);\r\n  raw.valueIndex = parseInt(button.value);\r\n  saveJSON('fileDataMode', button.id);\r\n}\r\n\r\n\r\ndocument.getElementById('reset-plot')!.onclick = () => resetPlot();\r\n\r\nfunction resetPlot(hardReset = true): void {\r\n  if (hardReset) {\r\n    if (plot.xAxis === 'log') changeAxis(<HTMLButtonElement>document.getElementById('xAxis'));\r\n    if (plot.yAxis === 'log') changeAxis(<HTMLButtonElement>document.getElementById('yAxis'));\r\n    if (plot.sma) toggleSma(false, <HTMLInputElement>document.getElementById('sma'));\r\n  }\r\n\r\n  plot.clearAnnos();\r\n  (<HTMLInputElement>document.getElementById('check-all-isos')).checked = false; // reset \"select all\" checkbox\r\n  loadIsotopes(true); // Plot resets all isotope lines, but they stay checked if not force reloaded\r\n  plot.resetPlot(spectrumData);\r\n  bindPlotEvents(); // Fix Reset Bug: Hovering and Clicking not working.\r\n}\r\n\r\n\r\ndocument.getElementById('xAxis')!.onclick = event => changeAxis(<HTMLButtonElement>event.target);\r\ndocument.getElementById('yAxis')!.onclick = event => changeAxis(<HTMLButtonElement>event.target);\r\n\r\nfunction changeAxis(button: HTMLButtonElement): void {\r\n  const id = button.id as 'xAxis' | 'yAxis';\r\n  if (plot[id] === 'linear') {\r\n    plot[id] = 'log';\r\n    button.innerText = 'Log';\r\n    plot.resetPlot(spectrumData); // Fix because of autorange bug in Plotly\r\n    bindPlotEvents();\r\n  } else {\r\n    plot[id] = 'linear';\r\n    button.innerText = 'Linear';\r\n    plot.updatePlot(spectrumData);\r\n  }\r\n}\r\n\r\n\r\ndocument.getElementById('sma')!.onclick = event => toggleSma((<HTMLInputElement>event.target).checked);\r\n\r\nfunction toggleSma(value: boolean, thisValue: HTMLInputElement | null = null ): void {\r\n  plot.sma = value;\r\n  if (thisValue) thisValue.checked = false;\r\n  plot.updatePlot(spectrumData);\r\n}\r\n\r\n\r\ndocument.getElementById('sma-val')!.onkeydown = event => {\r\n  if (event.key === 'Enter') document.getElementById('sma')?.click(); // ENTER key\r\n};\r\ndocument.getElementById('sma-val')!.oninput = event => changeSma(<HTMLInputElement>event.target);\r\n\r\nfunction changeSma(input: HTMLInputElement): void {\r\n  const parsedInput = parseInt(input.value);\r\n  if (isNaN(parsedInput)) {\r\n    new ToastNotification('smaError'); //popupNotification('sma-error');\r\n  } else {\r\n    plot.smaLength = parsedInput;\r\n    plot.updatePlot(spectrumData);\r\n    saveJSON('smaLength', parsedInput);\r\n  }\r\n}\r\n\r\n\r\nfunction bindPlotEvents(): void {\r\n  if (!plot.plotDiv) return;\r\n\r\n  const myPlot = <any>plot.plotDiv; \r\n  myPlot.on('plotly_hover', hoverEvent);\r\n  myPlot.on('plotly_unhover', unHover);\r\n  myPlot.on('plotly_click', clickEvent);\r\n  myPlot.on('plotly_selected', selectEvent);\r\n  myPlot.addEventListener('contextmenu', (event: PointerEvent) => {\r\n    event.preventDefault(); // Prevent the context menu from opening inside the plot!\r\n  });\r\n}\r\n\r\n\r\nfunction hoverEvent(data: any): void {\r\n  for (const key in calClick) {\r\n    const castKey = <CalType>key;\r\n    if (calClick[castKey]) (<HTMLInputElement>document.getElementById(`adc-${castKey}`)).value = data.points[0].x.toFixed(2);\r\n  }\r\n\r\n  if (checkNearIso) closestIso(data.points[0].x);\r\n}\r\n\r\n\r\nfunction unHover(/*data: any*/): void {\r\n  for (const key in calClick) {\r\n    const castKey = <CalType>key;\r\n    if (calClick[castKey]) (<HTMLInputElement>document.getElementById(`adc-${castKey}`)).value = oldCalVals[castKey];\r\n  }\r\n  /*\r\n  if (Object.keys(prevIso).length > 0) {\r\n    closestIso(-maxDist); // Force Reset Iso Highlighting\r\n  }\r\n  */\r\n}\r\n\r\n\r\nlet prevClickLine: number | undefined;\r\n\r\nfunction clickEvent(data: any): void {\r\n  document.getElementById('click-data')!.innerText = data.points[0].x.toFixed(2) + data.points[0].xaxis.ticksuffix + ': ' + data.points[0].y.toFixed(2) + data.points[0].yaxis.ticksuffix;\r\n\r\n  for (const key in calClick) {\r\n    const castKey = <CalType>key;\r\n    if (calClick[castKey]) {\r\n      (<HTMLInputElement>document.getElementById(`adc-${castKey}`)).value = data.points[0].x.toFixed(2);\r\n      oldCalVals[castKey] = data.points[0].x.toFixed(2);\r\n      calClick[castKey] = false;\r\n      (<HTMLInputElement>document.getElementById(`select-${castKey}`)).checked = calClick[<CalType>key];\r\n    }\r\n  }\r\n\r\n  if (prevClickLine) plot.toggleLine(prevClickLine, prevClickLine.toString(), false); // Delete the last line\r\n\r\n  if (data.event.button === 0) { // Left-click. spawn a line in the plot\r\n    const newLine = Math.round(data.points[0].x);\r\n    plot.toggleLine(newLine, newLine.toString(), true);\r\n    prevClickLine = newLine;\r\n  } else if (data.event.button === 2) { // Right-click, delete old line\r\n    prevClickLine = undefined;\r\n  }\r\n  plot.updatePlot(spectrumData);\r\n}\r\n\r\n\r\nfunction selectEvent(data: any): void {\r\n  /* // Just a reminder on how to modify trace color for a specific selection. Doesn't work as expected though.\r\n  data.points.forEach(function(pt: any) {\r\n    x.push(pt.x);\r\n    y.push(pt.y);\r\n    colors[pt.pointNumber] = color1;\r\n  });\r\n\r\n  (<any>window).Plotly.restyle(plot.plotDiv, {\r\n    x: [x, y],\r\n    xbins: {}\r\n  }, [1, 2]);\r\n\r\n  (<any>window).Plotly.restyle(plot.plotDiv, 'line.color', [colors], [0]);\r\n  */\r\n\r\n  const roiElement = document.getElementById('roi-info')!;\r\n  const infoElement = document.getElementById('static-info')!;\r\n\r\n  if (!data?.range?.x.length) { // De-select: data undefined or empty\r\n    roiElement.classList.add('d-none');\r\n    infoElement.classList.remove('d-none');\r\n    return;\r\n  }\r\n\r\n  roiElement.classList.remove('d-none');\r\n  infoElement.classList.add('d-none');\r\n\r\n  let range: number[] = data.range.x;\r\n  range = range.map(value => Math.round(value));\r\n\r\n  let start = range[0];\r\n  let end = range[1];\r\n\r\n  document.getElementById('roi-range')!.innerText = `${start.toString()} - ${end.toString()}`;\r\n  document.getElementById('roi-range-unit')!.innerText = plot.calibration.enabled ? ' keV' : '';\r\n  \r\n  if (plot.calibration.enabled) { // Convert the keV points back to bins\r\n    const max = Math.max(spectrumData.data.length, spectrumData.background.length);\r\n    const calAxis = plot.getCalAxis(max);\r\n    const axisLength = calAxis.length;\r\n\r\n    const findPoints = [start, end];\r\n    const numberOfPoints = findPoints.length;\r\n    const binPoints: number[] = [];\r\n    let compareIndex = 0;\r\n\r\n    for (let i = 0; i < axisLength; i++) {\r\n      const value = calAxis[i];\r\n      const compareValue = findPoints[compareIndex];\r\n\r\n      if (value > compareValue) {\r\n        binPoints.push(i); // Can be off by +1, doesn't really matter too much though.\r\n        compareIndex++;\r\n\r\n        if (compareIndex >= numberOfPoints) break;\r\n      }\r\n    }\r\n\r\n    start = binPoints[0];\r\n    end = binPoints[1];\r\n  }\r\n\r\n  const total = spectrumData.getTotalCounts('data', start, end);\r\n  const bg = spectrumData.getTotalCounts('background', start, end);\r\n  const net = total - bg;\r\n\r\n  document.getElementById('total-counts')!.innerText = total.toString();\r\n  document.getElementById('net-counts')!.innerText = net.toString();\r\n  document.getElementById('bg-counts')!.innerText = bg.toString();\r\n  document.getElementById('bg-ratio')!.innerText = (net / bg * 100).toFixed();\r\n}\r\n\r\n\r\ndocument.getElementById('apply-cal')!.onclick = event => toggleCal((<HTMLInputElement>event.target).checked);\r\n\r\nasync function toggleCal(enabled: boolean): Promise<void> {\r\n  const button = document.getElementById('calibration-label')!;\r\n\r\n  button.innerHTML = enabled ? '<i class=\"fa-solid fa-rotate-left\"></i> Reset' : '<i class=\"fa-solid fa-check\"></i> Calibrate';\r\n\r\n  (<HTMLInputElement>document.getElementById('apply-cal')).checked = enabled;\r\n  /*\r\n    Reset Plot beforehand, to prevent x-range from dying when zoomed?\r\n  */\r\n  if (enabled) {\r\n    if (!plot.calibration.imported) {\r\n\r\n      const readoutArray = [\r\n        [(<HTMLInputElement>document.getElementById('adc-a')).value, (<HTMLInputElement>document.getElementById('cal-a')).value],\r\n        [(<HTMLInputElement>document.getElementById('adc-b')).value, (<HTMLInputElement>document.getElementById('cal-b')).value],\r\n        [(<HTMLInputElement>document.getElementById('adc-c')).value, (<HTMLInputElement>document.getElementById('cal-c')).value]\r\n      ];\r\n\r\n      let invalid = 0;\r\n      const validArray: number[][] = [];\r\n\r\n      for (const pair of readoutArray) {\r\n        const float1 = parseFloat(pair[0]);\r\n        const float2 = parseFloat(pair[1]);\r\n\r\n        if (isNaN(float1) || isNaN(float2)) {\r\n          //validArray.push([-1, -1]);\r\n          invalid += 1;\r\n        } else {\r\n          validArray.push([float1, float2]);\r\n        }\r\n        if (invalid > 1) {\r\n          new ToastNotification('calibrationApplyError'); //popupNotification('cal-error');\r\n\r\n          const checkbox = <HTMLInputElement>document.getElementById('apply-cal');\r\n          checkbox.checked = false;\r\n          toggleCal(checkbox.checked);\r\n\r\n          return;\r\n        }\r\n      }\r\n\r\n      plot.calibration.points.aFrom = validArray[0][0];\r\n      plot.calibration.points.aTo = validArray[0][1];\r\n      plot.calibration.points.bFrom = validArray[1][0];\r\n      plot.calibration.points.bTo = validArray[1][1];\r\n\r\n      if (validArray.length === 3) {\r\n        plot.calibration.points.cTo = validArray[2][1];\r\n        plot.calibration.points.cFrom = validArray[2][0];\r\n      } else {\r\n        delete plot.calibration.points.cTo;\r\n        delete plot.calibration.points.cFrom;\r\n      }\r\n\r\n      await plot.computeCoefficients();\r\n    }\r\n  }\r\n  displayCoeffs();\r\n\r\n  plot.calibration.enabled = enabled;\r\n  plot.resetPlot(spectrumData); // Fix because of autorange bug in Plotly\r\n  bindPlotEvents();\r\n}\r\n\r\n\r\nfunction displayCoeffs(): void {\r\n  const arr = ['c1','c2','c3'];\r\n  for (const elem of arr) {\r\n    document.getElementById(`${elem}-coeff`)!.innerText = plot.calibration.coeff[elem].toString();\r\n  }\r\n}\r\n\r\n\r\ndocument.getElementById('calibration-reset')!.onclick = () => resetCal();\r\n\r\nfunction resetCal(): void {\r\n  for (const point in calClick) {\r\n    calClick[<CalType>point] = false;\r\n  }\r\n\r\n  const calSettings = document.getElementsByClassName('cal-setting');\r\n  for (const element of <HTMLCollectionOf<HTMLInputElement>>calSettings) {\r\n    element.disabled = false;\r\n    element.value = '';\r\n  }\r\n\r\n  document.getElementById('calibration-title')!.classList.add('d-none');\r\n\r\n  plot.clearCalibration();\r\n  toggleCal(false);\r\n}\r\n\r\n\r\n// Pretty ugly, but will get changed when implementing the n-poly calibration\r\ndocument.getElementById('select-a')!.onclick = event => toggleCalClick('a', (<HTMLInputElement>event.target).checked);\r\ndocument.getElementById('select-b')!.onclick = event => toggleCalClick('b', (<HTMLInputElement>event.target).checked);\r\ndocument.getElementById('select-c')!.onclick = event => toggleCalClick('c', (<HTMLInputElement>event.target).checked);\r\n\r\nfunction toggleCalClick(point: CalType, value: boolean): void {\r\n  calClick[point] = value;\r\n}\r\n\r\n\r\ndocument.getElementById('plot-type')!.onclick = () => changeType();\r\n\r\nfunction changeType(): void {\r\n  const button = <HTMLButtonElement>document.getElementById('plot-type');\r\n  if (plot.linePlot) {\r\n    button.innerHTML = '<i class=\"fas fa-chart-bar\"></i> Bar';\r\n  } else {\r\n    button.innerHTML = '<i class=\"fas fa-chart-line\"></i> Line';\r\n  }\r\n  plot.linePlot = !plot.linePlot;\r\n  plot.updatePlot(spectrumData);\r\n}\r\n\r\n\r\ndocument.getElementById('plot-cps')!.onclick = event => toggleCps(<HTMLButtonElement>event.target);\r\n\r\nfunction toggleCps(button: HTMLButtonElement): void {\r\n  plot.cps = !plot.cps;\r\n\r\n  button.innerText = plot.cps ? 'CPS' : 'Total';\r\n  plot.updatePlot(spectrumData);\r\n}\r\n\r\n\r\ndocument.getElementById('cal-input')!.onchange = event => importCalButton(<HTMLInputElement>event.target);\r\n\r\nfunction importCalButton(input: HTMLInputElement): void {\r\n  if (!input.files?.length) return; // File selection has been canceled\r\n  importCal(input.files[0]);\r\n}\r\n\r\n\r\nfunction importCal(file: File): void {\r\n  const reader = new FileReader();\r\n\r\n  reader.readAsText(file);\r\n\r\n  reader.onload = () => {\r\n    try {\r\n      const result = (<string>reader.result).trim(); // A bit unclean for typescript, I'm sorry\r\n      const obj = JSON.parse(result);\r\n\r\n      const readoutArray = [\r\n        <HTMLInputElement>document.getElementById('adc-a'),\r\n        <HTMLInputElement>document.getElementById('cal-a'),\r\n        <HTMLInputElement>document.getElementById('adc-b'),\r\n        <HTMLInputElement>document.getElementById('cal-b'),\r\n        <HTMLInputElement>document.getElementById('adc-c'),\r\n        <HTMLInputElement>document.getElementById('cal-c')\r\n      ];\r\n\r\n\r\n      if (obj.imported) {\r\n\r\n        const calSettings = document.getElementsByClassName('cal-setting');\r\n        for (const element of calSettings) {\r\n          (<HTMLInputElement>element).disabled = true;\r\n        }\r\n\r\n        addImportLabel();\r\n\r\n        plot.calibration.coeff = obj.coeff;\r\n        plot.calibration.imported = true;\r\n\r\n      } else {\r\n\r\n        const inputArr = ['aFrom', 'aTo', 'bFrom', 'bTo', 'cFrom', 'cTo'];\r\n        for (const index in inputArr) {\r\n          if (obj.points === undefined || typeof obj.points === 'number') { // Keep compatability with old calibration files\r\n            readoutArray[index].value = obj[inputArr[index]];\r\n          } else { // New calibration files\r\n            readoutArray[index].value = obj.points[inputArr[index]];\r\n          }\r\n        }\r\n\r\n        oldCalVals.a = readoutArray[0].value;\r\n        oldCalVals.b = readoutArray[2].value;\r\n        oldCalVals.c = readoutArray[4].value;\r\n      }\r\n\r\n    } catch(e) {\r\n      console.error('Calibration Import Error:', e);\r\n      new ToastNotification('calibrationImportError'); //popupNotification('cal-import-error');\r\n    }\r\n  };\r\n\r\n  reader.onerror = () => {\r\n    new ToastNotification('fileError'); //popupNotification('file-error');\r\n    return;\r\n  };\r\n}\r\n\r\n\r\ndocument.getElementById('toggle-calibration-chart')!.onclick = event => toggleCalChart((<HTMLInputElement>event.target).checked);\r\n\r\nfunction toggleCalChart(enabled: boolean): void {\r\n  const buttonLabel = document.getElementById('toggle-cal-chart-label')!;\r\n  buttonLabel.innerHTML = enabled ? '<i class=\"fa-solid fa-eye-slash fa-beat-fade\"></i> Hide Chart' : '<i class=\"fa-solid fa-eye\"></i> Show Chart';\r\n\r\n  plot.setChartType(enabled ? 'calibration' : 'default', spectrumData);\r\n\r\n  if (!enabled) bindPlotEvents(); // Above call is equivalent to a full reset, so we need to bind the events again!\r\n}\r\n\r\n\r\ndocument.getElementById('toggle-evolution-chart')!.onclick = event => toogleEvolChart((<HTMLInputElement>event.target).checked);\r\n\r\nfunction toogleEvolChart(enabled: boolean): void {\r\n  const buttonLabel = document.getElementById('toggle-evol-chart-label')!;\r\n  buttonLabel.innerHTML = enabled ? '<i class=\"fa-solid fa-eye-slash fa-beat-fade\"></i> Hide Evolution' : '<i class=\"fa-solid fa-eye\"></i> Show Evolution';\r\n\r\n  plot.setChartType(enabled ? 'evolution' : 'default', spectrumData, cpsValues);\r\n\r\n  if (!enabled) bindPlotEvents(); // Above call is equivalent to a full reset, so we need to bind the events again!\r\n}\r\n\r\n\r\nfunction addLeadingZero(number: string): string {\r\n  if (parseFloat(number) < 10) return '0' + number;\r\n  return number;\r\n}\r\n\r\n\r\nfunction getDateString(): string {\r\n  const time = new Date();\r\n  return time.getFullYear() + '-' + addLeadingZero((time.getMonth() + 1).toString()) + '-' + addLeadingZero(time.getDate().toString()) + '_' + addLeadingZero(time.getHours().toString()) + '-' + addLeadingZero(time.getMinutes().toString());\r\n}\r\n\r\n\r\nfunction getDateStringMin(): string {\r\n  const time = new Date();\r\n  return time.getFullYear() + '-' + addLeadingZero((time.getMonth() + 1).toString()) + '-' + addLeadingZero(time.getDate().toString());\r\n}\r\n\r\n\r\nfunction toLocalIsoString(date: Date) {\r\n  let localIsoString = date.getFullYear() + '-'\r\n    + addLeadingZero((date.getMonth() + 1).toString()) + '-'\r\n    + addLeadingZero(date.getDate().toString()) + 'T'\r\n    + addLeadingZero(date.getHours().toString()) + ':'\r\n    + addLeadingZero(date.getMinutes().toString()) + ':'\r\n    + addLeadingZero(date.getSeconds().toString());\r\n\r\n  localIsoString += (-date.getTimezoneOffset() < 0) ? '-' : '+';\r\n  const tzDate = new Date(Math.abs(date.getTimezoneOffset()));\r\n\r\n  localIsoString += addLeadingZero(tzDate.getHours().toString()) + ':' + addLeadingZero(tzDate.getMinutes().toString());\r\n  return localIsoString;\r\n}\r\n\r\n\r\ndocument.getElementById('evolution-download-btn')!.onclick = () => downloadEvolution();\r\n\r\nfunction downloadEvolution(): void {\r\n  if (!cpsValues.length) {\r\n    console.error('Time evolution is empty. No cps values to export!');\r\n  }\r\n\r\n  download(`evolution_${getDateString()}.csv`, cpsValues.join('\\n'), 'EVOL');\r\n}\r\n\r\n\r\ndocument.getElementById('calibration-download')!.onclick = () => downloadCal();\r\n\r\nfunction downloadCal(): void {\r\n  const calObj = plot.calibration;\r\n\r\n  let outStr = JSON.stringify(calObj);\r\n\r\n  if (calObj.coeff.c2 === 0 && calObj.coeff.c3 === 0) {\r\n    outStr = ''; // Nothing is calibrated, do not save anything\r\n  }\r\n\r\n  if (!calObj.points.cFrom) delete calObj.points.cFrom;\r\n  if (!calObj.points.cTo) delete calObj.points.cTo;\r\n\r\n  download(`calibration_${getDateString()}.json`, outStr, 'CAL');\r\n}\r\n\r\n\r\ndocument.getElementById('xml-export-btn')!.onclick = () => downloadXML();\r\n\r\nfunction downloadXML(): void {\r\n  const filename = `spectrum_${getDateString()}.xml`;\r\n  const content = generateXML();\r\n  download(filename, content, 'XML');\r\n}\r\n\r\n\r\nfunction makeXMLSpectrum(type: DataType, name: string): Element {\r\n  const root = document.createElementNS(null, (type === 'data') ? 'EnergySpectrum' : 'BackgroundEnergySpectrum');\r\n  const noc = document.createElementNS(null, 'NumberOfChannels');\r\n\r\n  noc.textContent = spectrumData[type].length.toString();\r\n  root.appendChild(noc);\r\n\r\n  const sn = document.createElementNS(null, 'SpectrumName');\r\n  sn.textContent = name;\r\n  root.appendChild(sn);\r\n\r\n  if (plot.calibration.enabled) {\r\n    const ec = document.createElementNS(null, 'EnergyCalibration');\r\n    root.appendChild(ec);\r\n\r\n    const c = document.createElementNS(null, 'Coefficients');\r\n    const coeffs: number[] = [];\r\n    const coeffObj = plot.calibration.coeff;\r\n\r\n    for (const index in coeffObj) {\r\n      coeffs.push(coeffObj[index]);\r\n    }\r\n    const coeffsRev = coeffs.reverse();\r\n    for (const val of coeffsRev) {\r\n      const coeff = document.createElementNS(null, 'Coefficient');\r\n      coeff.textContent = val.toString();\r\n      c.appendChild(coeff);\r\n    }\r\n    ec.appendChild(c);\r\n\r\n    const po = document.createElementNS(null, 'PolynomialOrder');\r\n    /*\r\n    // Specifies the number of coefficients in the XML\r\n    if (plot.calibration.coeff.c1 === 0) {\r\n      po.textContent = (1).toString();\r\n    } else {\r\n      po.textContent = (2).toString();\r\n    }\r\n    */\r\n    po.textContent = (2).toString();\r\n    ec.appendChild(po);\r\n  }\r\n\r\n  const tpc = document.createElementNS(null, 'TotalPulseCount');\r\n  tpc.textContent = spectrumData.getTotalCounts(type).toString();\r\n  root.appendChild(tpc);\r\n\r\n  const vpc = document.createElementNS(null, 'ValidPulseCount');\r\n  vpc.textContent = tpc.textContent;\r\n  root.appendChild(vpc);\r\n\r\n  const mt = document.createElementNS(null, 'MeasurementTime');\r\n\r\n  mt.textContent = (Math.round(spectrumData[`${type}Time`]/1000)).toString();\r\n  root.appendChild(mt)\r\n\r\n  const s = document.createElementNS(null, 'Spectrum');\r\n  root.appendChild(s);\r\n\r\n  const data = spectrumData[type];\r\n  for (const datapoint of data) {\r\n    const d = document.createElementNS(null, 'DataPoint');\r\n    d.textContent = datapoint.toString();\r\n    s.appendChild(d);\r\n  }\r\n\r\n  return root;\r\n}\r\n\r\n\r\nfunction generateXML(): string {\r\n  const formatVersion = 230124;\r\n\r\n  const spectrumName = getDateStringMin() + ' Energy Spectrum';\r\n  const backgroundName = getDateStringMin() + ' Background Energy Spectrum';\r\n\r\n  const doc = document.implementation.createDocument(null, 'ResultDataFile');\r\n\r\n  const pi = doc.createProcessingInstruction('xml', 'version=\"1.0\" encoding=\"UTF-8\"');\r\n  doc.insertBefore(pi, doc.firstChild);\r\n\r\n  const root = doc.documentElement;\r\n  const fv = document.createElementNS(null, 'FormatVersion');\r\n  fv.textContent = formatVersion.toString();\r\n  root.appendChild(fv);\r\n\r\n  const rdl = document.createElementNS(null, 'ResultDataList');\r\n  root.appendChild(rdl);\r\n\r\n  const rd = document.createElementNS(null, 'ResultData');\r\n  rdl.appendChild(rd);\r\n\r\n  const dcr = document.createElementNS(null, 'DeviceConfigReference');\r\n  rd.appendChild(dcr);\r\n\r\n  const dcrName = document.createElementNS(null, 'Name');\r\n  /*\r\n  if (serial) {\r\n    dcrName.textContent = 'Gamma MCA Serial Device';\r\n  } else {\r\n    dcrName.textContent = 'Gamma MCA File';\r\n  }\r\n  */\r\n  dcrName.textContent = (<HTMLInputElement>document.getElementById('device-name')).value.trim();\r\n  dcr.appendChild(dcrName);\r\n\r\n  if (startDate) {\r\n    const st = document.createElementNS(null, 'StartTime');\r\n    st.textContent = toLocalIsoString(startDate);\r\n    rd.appendChild(st);\r\n\r\n    const et = document.createElementNS(null, 'EndTime');\r\n    rd.appendChild(et);\r\n\r\n    if (endDate && endDate.getTime() - startDate.getTime() >= 0) {\r\n      et.textContent = toLocalIsoString(endDate);\r\n    } else {\r\n      et.textContent = toLocalIsoString(new Date());\r\n    }\r\n  }\r\n\r\n  const si = document.createElementNS(null, 'SampleInfo');\r\n  rd.appendChild(si);\r\n\r\n  const name = document.createElementNS(null, 'Name');\r\n  name.textContent = (<HTMLInputElement>document.getElementById('sample-name')).value.trim();\r\n  si.appendChild(name);\r\n\r\n  const l = document.createElementNS(null, 'Location');\r\n  l.textContent = (<HTMLInputElement>document.getElementById('sample-loc')).value.trim();\r\n  si.appendChild(l);\r\n\r\n  const t = document.createElementNS(null, 'Time');\r\n  const tval = (<HTMLInputElement>document.getElementById('sample-time')).value.trim();\r\n  if (tval.length) {\r\n    t.textContent = toLocalIsoString(new Date(tval));\r\n    si.appendChild(t);\r\n  }\r\n\r\n  const w = document.createElementNS(null, 'Weight');\r\n  const wval = (<HTMLInputElement>document.getElementById('sample-weight')).value.trim();\r\n  if (wval.length) {\r\n    w.textContent = (parseFloat(wval)/1000).toString();\r\n    si.appendChild(w);\r\n  }\r\n\r\n  const v = document.createElementNS(null, 'Volume');\r\n  const vval = (<HTMLInputElement>document.getElementById('sample-vol')).value.trim();\r\n  if (vval.length) {\r\n    v.textContent = (parseFloat(vval)/1000).toString();\r\n    si.appendChild(v);\r\n  }\r\n\r\n  const note = document.createElementNS(null, 'Note');\r\n  note.textContent = (<HTMLInputElement>document.getElementById('add-notes')).value.trim();\r\n  si.appendChild(note);\r\n\r\n  if (spectrumData['data'].length) rd.appendChild(makeXMLSpectrum('data', spectrumName));\r\n  if (spectrumData['background'].length) {\r\n    const bsf = document.createElementNS(null, 'BackgroundSpectrumFile');\r\n    bsf.textContent = backgroundName;\r\n    rd.appendChild(bsf);\r\n\r\n    rd.appendChild(makeXMLSpectrum('background', backgroundName));\r\n  }\r\n\r\n  const vis = document.createElementNS(null, 'Visible');\r\n  vis.textContent = true.toString();\r\n  rd.appendChild(vis);\r\n\r\n  return new XMLSerializer().serializeToString(doc);\r\n}\r\n\r\n\r\ndocument.getElementById('npes-export-btn')!.onclick = () => downloadNPES();\r\n\r\nfunction downloadNPES(): void {\r\n  const filename = `spectrum_${getDateString()}.json`;\r\n  const data = generateNPES();\r\n  download(filename, data, 'JSON');\r\n}\r\n\r\n\r\nfunction makeJSONSpectrum(type: DataType): NPESv1Spectrum {\r\n  const spec: NPESv1Spectrum = {\r\n    numberOfChannels: spectrumData[type].length,\r\n    validPulseCount: spectrumData.getTotalCounts(type),\r\n    measurementTime: 0,\r\n    spectrum: spectrumData[type]\r\n  }\r\n  spec.measurementTime = Math.round(spectrumData[`${type}Time`]/1000);\r\n\r\n  if (plot.calibration.enabled) {\r\n    const calObj = {\r\n      polynomialOrder: 0,\r\n      coefficients: <number[]>[]\r\n    }\r\n    calObj.polynomialOrder = 2;\r\n    calObj.coefficients = [plot.calibration.coeff.c3, plot.calibration.coeff.c2, plot.calibration.coeff.c1];\r\n    spec.energyCalibration = calObj;\r\n  }\r\n\r\n  return spec;\r\n}\r\n\r\n\r\nfunction generateNPES(): string | undefined {\r\n  const data: NPESv2 = {\r\n    schemaVersion: 'NPESv2',\r\n    data: []\r\n  }\r\n\r\n  const dataPackage: NPESv1 = {\r\n    deviceData: {\r\n      softwareName: 'Gamma MCA, ' + APP_VERSION,\r\n      deviceName: (<HTMLInputElement>document.getElementById('device-name')).value.trim()\r\n    },\r\n    sampleInfo: {\r\n      name: (<HTMLInputElement>document.getElementById('sample-name')).value.trim(),\r\n      location: (<HTMLInputElement>document.getElementById('sample-loc')).value.trim(),\r\n      note: (<HTMLInputElement>document.getElementById('add-notes')).value.trim()\r\n    },\r\n    resultData: {}\r\n  }\r\n\r\n  let val = parseFloat((<HTMLInputElement>document.getElementById('sample-weight')).value.trim());\r\n  if (val) dataPackage.sampleInfo!.weight = val;\r\n\r\n  val = parseFloat((<HTMLInputElement>document.getElementById('sample-vol')).value.trim());\r\n  if (val) dataPackage.sampleInfo!.volume = val;\r\n\r\n  const tval = (<HTMLInputElement>document.getElementById('sample-time')).value.trim();\r\n  if (tval.length && new Date(tval)) dataPackage.sampleInfo!.time = toLocalIsoString(new Date(tval));\r\n\r\n  if (startDate) {\r\n    dataPackage.resultData.startTime = toLocalIsoString(startDate);\r\n\r\n    if (endDate && endDate.getTime() - startDate.getTime() >= 0) {\r\n      dataPackage.resultData.endTime = toLocalIsoString(endDate);\r\n    } else {\r\n      dataPackage.resultData.endTime = toLocalIsoString(new Date());\r\n    }\r\n  }\r\n\r\n  if (spectrumData.data.length && spectrumData.getTotalCounts('data')) dataPackage.resultData.energySpectrum = makeJSONSpectrum('data');\r\n  if (spectrumData.background.length && spectrumData.getTotalCounts('background')) dataPackage.resultData.backgroundEnergySpectrum = makeJSONSpectrum('background');\r\n\r\n  // Additionally validate the JSON Schema?\r\n  if (!dataPackage.resultData.energySpectrum && !dataPackage.resultData.backgroundEnergySpectrum) {\r\n    //new ToastNotification('fileEmptyError'); //popupNotification('file-empty-error');\r\n    return undefined;\r\n  }\r\n\r\n  data.data.push(dataPackage);\r\n\r\n  return JSON.stringify(data);\r\n}\r\n\r\n\r\ndocument.getElementById('download-spectrum-btn')!.onclick = () => downloadData('spectrum', 'data');\r\ndocument.getElementById('download-bg-btn')!.onclick = () => downloadData('background', 'background');\r\n\r\nfunction downloadData(filename: string, data: DataType): void {\r\n  filename += `_${getDateString()}.csv`;\r\n\r\n  let text = '';\r\n  spectrumData[data].forEach(item => text += item + '\\n');\r\n\r\n  download(filename, text, 'CSV');\r\n}\r\n\r\n\r\ndocument.getElementById('overwrite-button')!.onclick = () => overwriteFile();\r\n\r\nasync function overwriteFile(): Promise<void> {\r\n  if (dataFileHandle && backgroundFileHandle) {\r\n    new ToastNotification('saveMultipleAtOnce');\r\n    return;\r\n  }\r\n\r\n  if (!dataFileHandle && !backgroundFileHandle) {\r\n    console.error('No file handlers found to save to!');\r\n    return;\r\n  } \r\n\r\n  const handler = (dataFileHandle ?? backgroundFileHandle)!; // CANNOT be undefined, since I checked above, ugh...\r\n  const writable = await handler.createWritable(); // Create a FileSystemWritableFileStream to write to.\r\n\r\n  const file = await handler.getFile();\r\n  const fileExtension = file.name.split('.')[1].toLowerCase();\r\n  let content: string | undefined;\r\n\r\n  if (fileExtension === 'xml') {\r\n    content = generateXML();\r\n  } else {\r\n    content = generateNPES();\r\n  }\r\n\r\n  if (!content?.trim()) { // Check empty string\r\n    new ToastNotification('fileEmptyError'); //popupNotification('file-empty-error');\r\n    return;\r\n  }\r\n\r\n  await writable.write(content); // Write the contents of the file to the stream.\r\n  await writable.close(); // Close the file and write the contents to disk.\r\n\r\n  new ToastNotification('saveFile');\r\n}\r\n\r\n\r\nconst saveFileTypes: SaveTypeList = {\r\n  'CAL': {\r\n    description: 'Calibration data file',\r\n    accept: {\r\n      'application/json': ['.json']\r\n    }\r\n  },\r\n  'XML': {\r\n    description: 'Combination data file (XML)',\r\n    accept: {\r\n      'application/xml': ['.xml']\r\n    }\r\n  },\r\n  'JSON': {\r\n    description: 'Combination data file (NPESv2, smaller size)',\r\n    accept: {\r\n      'application/json': ['.json']\r\n    }\r\n  },\r\n  'EVOL': {\r\n    description: 'Count rate time evolution file',\r\n    accept: {\r\n      'text/csv': ['.csv']\r\n    }\r\n  },\r\n  'CSV': {\r\n    description: 'Single spectrum file',\r\n    accept: {\r\n      'text/csv': ['.csv']\r\n    }\r\n  }\r\n};\r\n\r\nasync function download(filename: string, text: string | undefined, type: DownloadType): Promise<void> {\r\n  if (!text?.trim()) { // Check empty string\r\n    new ToastNotification('fileEmptyError'); //popupNotification('file-empty-error');\r\n    return;\r\n  }\r\n\r\n  if (window.FileSystemHandle && window.showSaveFilePicker) { // Try to use File System Access API\r\n    const saveFilePickerOptions = {\r\n      suggestedName: filename,\r\n      types: [saveFileTypes[type]]\r\n    };\r\n\r\n    let newHandle: FileSystemFileHandle;\r\n\r\n    try {\r\n      newHandle = await window.showSaveFilePicker(saveFilePickerOptions); // Create a new handle\r\n    } catch(error) {\r\n      console.warn('File SaveAs error:', error);\r\n      return;\r\n    }\r\n\r\n    // Update FileHandle for \"Save\" button\r\n    if (dataFileHandle) {\r\n      dataFileHandle = newHandle;\r\n    } else if (backgroundFileHandle) {\r\n      backgroundFileHandle = newHandle;\r\n    }\r\n    \r\n    const writableStream = await newHandle.createWritable(); // Create a FileSystemWritableFileStream to write to\r\n\r\n    await writableStream.write(text); // Write our file\r\n    await writableStream.close(); // Close the file and write the contents to disk.\r\n\r\n    new ToastNotification('saveFile');\r\n  } else { // Fallback old download-only method\r\n    const element = document.createElement('a');\r\n    element.setAttribute('href', `data:text/plain;charset=utf-8,${encodeURIComponent(text)}`);\r\n\r\n    element.setAttribute('download', filename);\r\n\r\n    element.style.display = 'none';\r\n    element.click();\r\n  }\r\n\r\n  localStorage.removeItem('autosave'); // Delete autosave data\r\n\r\n  const exportModalElement = document.getElementById('export-modal')!; // Close the modal if the file saving has been successful\r\n  const closeButton = <HTMLButtonElement>exportModalElement.querySelector('.btn-close'); // Find some close button\r\n  closeButton.click();\r\n}\r\n\r\n\r\ndocument.getElementById('reset-meta-values')!.onclick = () => resetSampleInfo();\r\n\r\nfunction resetSampleInfo(): void {\r\n  const toBeReset = <HTMLCollectionOf<HTMLInputElement>>document.getElementsByClassName('sample-info');\r\n  for (const element of toBeReset) {\r\n    element.value = '';\r\n  }\r\n}\r\n\r\n\r\ndocument.getElementById('print-report')!.onclick = () => printReport();\r\n\r\nfunction printReport(): void {\r\n  // If Gaussian mode is not enabled, enable it to better find peaks\r\n  const copyPeakFlag = plot.peakConfig.enabled;\r\n  if (!copyPeakFlag) useGaussPeakMode(<HTMLButtonElement>document.getElementById('peak-finder-btn'));\r\n\r\n  const dataArray = plot.computePulseHeightData(spectrumData); // Generate data with current settings + force enabled Gaussian\r\n  const metaDataString = generateNPES();\r\n\r\n  // After collecting the data, click twice on the button to get back to the \r\n  if (!copyPeakFlag) useIdlePeakMode(<HTMLButtonElement>document.getElementById('peak-finder-btn'));\r\n\r\n  if (!dataArray.length || !metaDataString) {\r\n    console.error('Nothing to analyze, no data found. Cannot print report!');\r\n    new ToastNotification('reportError');\r\n    return;\r\n  }\r\n\r\n  // Open a new tab, generate the report and print it\r\n  const printWindow = window.open('/print.html', '_blank');\r\n  if (printWindow) {\r\n    // Wait for the document to be fully loaded before triggering everything else\r\n    printWindow.onload = () => {\r\n      const printDocument = printWindow.document;\r\n      \r\n      const metaData = (<NPESv2>JSON.parse(metaDataString)).data[0];\r\n\r\n      printDocument.getElementById('sample-name')!.innerText = metaData.sampleInfo?.name || 'N/A';\r\n      printDocument.getElementById('sample-loc')!.innerText = metaData.sampleInfo?.location || 'N/A';\r\n      printDocument.getElementById('sample-time')!.innerText = metaData.sampleInfo?.time || 'N/A';\r\n      printDocument.getElementById('note')!.innerText = metaData.sampleInfo?.note || 'N/A';\r\n      printDocument.getElementById('device-name')!.innerText = metaData.deviceData?.deviceName || 'N/A';\r\n      printDocument.getElementById('software-name')!.innerText = metaData.deviceData?.softwareName || 'N/A';\r\n      printDocument.getElementById('start-time')!.innerText = metaData.resultData.startTime ?? 'N/A';\r\n      printDocument.getElementById('end-time')!.innerText = metaData.resultData.endTime ?? 'N/A';\r\n      printDocument.getElementById('total-time-gross')!.innerText = metaData.resultData.energySpectrum?.measurementTime?.toString() || 'N/A';\r\n      printDocument.getElementById('total-time-bg')!.innerText = metaData.resultData.backgroundEnergySpectrum?.measurementTime?.toString() || 'N/A';\r\n      printDocument.getElementById('cal-coeffs')!.innerText = JSON.stringify(plot.calibration.enabled ? plot.calibration.coeff : {c1:0,c2:0,c3:0}) || 'N/A';\r\n\r\n      // Generate table and populate with data\r\n      const tableHeadRow = <HTMLTableRowElement>printDocument.getElementById('peak-table-head-row');\r\n\r\n      const cell1 = document.createElement('th');\r\n      cell1.innerHTML = 'Peak Number <br>[1]';\r\n      tableHeadRow.appendChild(cell1);\r\n      const cell2 = document.createElement('th');\r\n      cell2.innerHTML = `Energy <br>[${plot.calibration.enabled ? 'keV' : 'bin'}]`;\r\n      tableHeadRow.appendChild(cell2);\r\n      const cell3 = document.createElement('th');\r\n      cell3.innerHTML = 'Net Peak Area <br>(3&sigma;) [cts]';\r\n      tableHeadRow.appendChild(cell3);\r\n      const cell4 = document.createElement('th');\r\n      cell4.innerHTML = 'Background Peak Area <br>(3&sigma;) [cts]';\r\n      tableHeadRow.appendChild(cell4);\r\n      const cell5 = document.createElement('th');\r\n      cell5.innerHTML = `FWHM <br>[${plot.calibration.enabled ? 'keV' : 'bin'}]`;\r\n      tableHeadRow.appendChild(cell5);\r\n      const cell6 = document.createElement('th');\r\n      cell6.innerHTML = 'FWHM <br>[%]';\r\n      tableHeadRow.appendChild(cell6);\r\n      const cell7 = document.createElement('th');\r\n      cell7.innerHTML = 'Net Peak Counts/s <br>(3&sigma;) [cps]';\r\n      tableHeadRow.appendChild(cell7);\r\n\r\n      const tableBody = <HTMLTableElement>printDocument.getElementById('peak-table-body');\r\n\r\n      // Compute data for analysis\r\n      const dataX = dataArray[0].x; // Will be Gauss data, net spectrum or background in this order\r\n      const dataY = dataArray[0].y;\r\n\r\n      const peaks = plot.peakFinder(dataY);\r\n      let index = 1;\r\n\r\n      for (const peak of peaks) {\r\n        const xPosition = dataX[Math.round(peak)];\r\n\r\n        if (xPosition < 0) continue;\r\n\r\n        const peakFWHM = new CalculateFWHM([xPosition], dataArray[1].x, dataArray[1].y).compute()[xPosition];\r\n        const energyResolution = new CalculateFWHM([xPosition], dataArray[1].x, dataArray[1].y).getResolution()[xPosition];\r\n\r\n        const sigmaMaxCenterDistance = 2 * peakFWHM / (2 * Math.sqrt(2 * Math.LN2)) // Max distance to peak center for 4 sigma of all peaks, approx total count number inside this range\r\n        const peakCounterXMin = xPosition - sigmaMaxCenterDistance;\r\n        const peakCounterXMax = xPosition + sigmaMaxCenterDistance;\r\n\r\n        let spectrumValue = 0;\r\n        let backgroundValue = 0;\r\n\r\n        for (const i in dataX) {\r\n          const xPos = dataX[i];\r\n          if (xPos >= peakCounterXMin && xPos <= peakCounterXMax) {\r\n            spectrumValue += dataArray[1].y[i];\r\n            if (dataArray.length > 2) backgroundValue += dataArray[2].y[i];\r\n          }\r\n        }\r\n\r\n        const row = tableBody.insertRow();\r\n        const cell1 = document.createElement('th');\r\n        cell1.innerText = index.toString();\r\n        row.appendChild(cell1);\r\n\r\n        const cell2 = row.insertCell();\r\n        cell2.innerText = xPosition.toFixed(2);\r\n\r\n        const cell3 = row.insertCell();\r\n        cell3.innerText = (peakFWHM > 0 && peakFWHM < 0.9 * CalculateFWHM.resolutionLimit * xPosition) ? (spectrumValue * (plot.cps ? metaData.resultData.energySpectrum?.measurementTime ?? 1 : 1)).toFixed(0) : 'N/A';\r\n\r\n        const cell4 = row.insertCell();\r\n        cell4.innerText = (peakFWHM > 0 && peakFWHM < 0.9 * CalculateFWHM.resolutionLimit * xPosition) ? (backgroundValue * (plot.cps ? metaData.resultData.backgroundEnergySpectrum?.measurementTime ?? 1 : 1)).toFixed(0) : 'N/A';\r\n\r\n        const cell5 = row.insertCell();\r\n        cell5.innerText = (peakFWHM > 0 && peakFWHM < 0.9 * CalculateFWHM.resolutionLimit * xPosition) ? peakFWHM.toFixed(3) : 'OVF';\r\n\r\n        const cell6 = row.insertCell();\r\n        cell6.innerText = (energyResolution > 0 && energyResolution < 0.9 * CalculateFWHM.resolutionLimit) ? (energyResolution * 100).toFixed(2) : 'OVF';\r\n\r\n        const cell7 = row.insertCell();\r\n        cell7.innerText = (peakFWHM > 0 && peakFWHM < 0.9 * CalculateFWHM.resolutionLimit * xPosition) ? (plot.cps ? spectrumValue : spectrumValue / (metaData.resultData.energySpectrum?.measurementTime ?? 1)).toExponential(3) : 'N/A';\r\n\r\n        index++;\r\n      }\r\n\r\n      // Last step: Create an image element of the saved plot\r\n      (<any>window).Plotly.toImage(plot.plotDiv,{format: 'png', height: 400, width: 1000}).then(\r\n        function (url: string) {\r\n          const img = <HTMLImageElement>printDocument.getElementById('plot-image');\r\n          img.src = url;\r\n\r\n          img.onload = () => printWindow.print(); // Finally print the window if the image has been loaded\r\n        }\r\n      );\r\n    };\r\n\r\n    printWindow.onafterprint = () => printWindow.close(); // Close the new print tab after printing\r\n  } else {\r\n    console.error('Unable to open a new window for printing.');\r\n  }\r\n}\r\n\r\n\r\nfunction legacyPopupNotification(id: string): void { // Uses Bootstrap Toasts already defined in HTML\r\n  const toast = new (<any>window).bootstrap.Toast(document.getElementById(id));\r\n  if (!toast.isShown()) toast.show();\r\n}\r\n\r\n\r\nfunction hideNotification(id: string): void {\r\n  const toast = new (<any>window).bootstrap.Toast(document.getElementById(id));\r\n  if (toast.isShown()) toast.hide();\r\n}\r\n\r\n\r\nfunction sortTableByColumn(table: HTMLTableElement, columnIndex: number, sortDirection: SortTypes) {\r\n  const tbody = table.tBodies[0];\r\n  const rows = Array.from(tbody.rows);\r\n\r\n  rows.sort((a, b) => {\r\n    const aCellValue = a.cells[columnIndex].textContent?.trim() ?? '';\r\n    const bCellValue = b.cells[columnIndex].textContent?.trim() ?? '';\r\n\r\n    const aNumValue = parseFloat(aCellValue.replace(/[^\\d.-]/g, '')); // Get the mass number of the isotope\r\n    const bNumValue = parseFloat(bCellValue.replace(/[^\\d.-]/g, ''));\r\n\r\n    if (isNaN(aNumValue) || isNaN(bNumValue)) {\r\n      return aCellValue.localeCompare(bCellValue);\r\n    }\r\n\r\n    const comparison = aNumValue - bNumValue;\r\n\r\n    return sortDirection === 'asc' ? comparison : -comparison;\r\n  });\r\n\r\n  tbody.append(...rows);\r\n}\r\n\r\n\r\ndocument.getElementById('toggle-menu')!.onclick = () => loadIsotopes();\r\ndocument.getElementById('reload-isos-btn')!.onclick = () => loadIsotopes(true);\r\n\r\nlet loadedIsos = false;\r\n\r\nasync function loadIsotopes(reload = false): Promise<boolean> { // Load Isotope Energies JSON ONCE\r\n  if (loadedIsos && !reload) return true; // Isotopes already loaded\r\n\r\n  const loadingElement = document.getElementById('iso-loading')!;\r\n  loadingElement.classList.remove('d-none');\r\n\r\n  const options: RequestInit = {\r\n    cache: 'no-cache',\r\n    headers: {\r\n      'Content-Type': 'text/plain; application/json; charset=UTF-8',\r\n    },\r\n  };\r\n\r\n\r\n  const isoError = document.getElementById('iso-load-error')!;\r\n  //isoError.innerText = ''; // Remove any old error msges\r\n  isoError.classList.add('d-none'); // Hide any old errors\r\n  let successFlag = true; // Ideally no errors\r\n\r\n  try {\r\n    const response = await fetch(isoListURL, options);\r\n\r\n    if (response.ok) { // If HTTP-status is 200-299\r\n      const json: IsotopeList = await response.json();\r\n      loadedIsos = true;\r\n\r\n      const table = <HTMLTableElement>document.getElementById('table');\r\n      const tableElement = <HTMLTableElement>table.querySelector('#iso-table');\r\n      tableElement.innerHTML = ''; // Delete old table\r\n\r\n      for (const [key, energyArr] of Object.entries(json)) {\r\n        let index = 0; // Index used to avoid HTML id duplicates\r\n\r\n        const lowercaseName = key.toLowerCase().replace(/[^a-z0-9 -]/gi, '').trim(); // Fixes security issue. Clean everything except for letters, numbers and minus. See GitHub: #2\r\n        const name = lowercaseName.charAt(0).toUpperCase() + lowercaseName.slice(1); // Capitalize Name\r\n\r\n        for (const energy of energyArr) {\r\n          if (isNaN(energy)) continue; // Not a number, ignore this one\r\n\r\n          if (isoList[name]) {\r\n            isoList[name].push(energy);\r\n          } else {\r\n            isoList[name] = [energy];\r\n          }\r\n\r\n          const uniqueName = name + '-' + index; // Append index number\r\n          index++;\r\n\r\n          const row = tableElement.insertRow();\r\n          const cell1 = row.insertCell(0);\r\n          const cell2 = row.insertCell(1);\r\n          const cell3 = row.insertCell(2);\r\n\r\n          cell1.onclick = () => (<HTMLInputElement>cell1.firstChild).click();\r\n          cell2.onclick = () => (<HTMLInputElement>cell1.firstChild).click();\r\n          cell3.onclick = () => (<HTMLInputElement>cell1.firstChild).click();\r\n\r\n          cell1.style.cursor = 'pointer'; // Change cursor pointer to \"click-ready\"\r\n          cell2.style.cursor = 'pointer';\r\n          cell3.style.cursor = 'pointer';\r\n\r\n          cell1.innerHTML = `<input class=\"form-check-input iso-table-label\" id=\"${uniqueName}\" type=\"checkbox\" value=\"${energy}\">`; // keV to eV\r\n          cell3.innerText = energy.toFixed(2); //`<label for=\"${uniqueName}\">${energy.toFixed(2)}</label>`;\r\n\r\n          const clickBox = <HTMLInputElement>document.getElementById(uniqueName);\r\n          clickBox.onclick = () => plotIsotope(clickBox);\r\n\r\n          const strArr = name.split('-');\r\n\r\n          cell2.innerHTML = `<sup>${strArr[1]}</sup>${strArr[0]}`; //`<label for=\"${uniqueName}\"><sup>${strArr[1]}</sup>${strArr[0]}</label>`;\r\n        }\r\n      }\r\n\r\n      if (isoTableSortDirections[2] !== 'asc') { // Default sort is ascending by isotope energy\r\n        const sortButton = <HTMLTableCellElement>table.querySelector('th[data-sort-by=\"2\"]');\r\n        sortButton.click();\r\n      } else {\r\n        sortTableByColumn(table, 2, 'asc');\r\n      }\r\n\r\n      plot.clearAnnos(); // Delete all isotope lines\r\n      plot.updatePlot(spectrumData);\r\n      plot.isotopeSeeker = new SeekClosest(isoList); // Generate new seeker for the plot with the current list\r\n      isotopeSeeker = new SeekClosest(isoList);\r\n    } else {\r\n      isoError.innerText = `Could not load isotope list! HTTP Error: ${response.status}. Please try again.`;\r\n      isoError.classList.remove('d-none');\r\n      successFlag = false;\r\n    }\r\n  } catch (err) { // No network connection!\r\n    console.error(err);\r\n    isoError.innerText = 'Could not load isotope list! Connection refused - you are probably offline.';\r\n    isoError.classList.remove('d-none');\r\n    successFlag = false;\r\n  }\r\n\r\n  loadingElement.classList.add('d-none');\r\n  return successFlag;\r\n}\r\n\r\n\r\ndocument.getElementById('iso-hover')!.onclick = () => toggleIsoHover();\r\n\r\nlet prevIso: [string, number] | undefined;\r\n\r\nfunction toggleIsoHover(): void {\r\n  checkNearIso = !checkNearIso;\r\n  closestIso(-100000);\r\n}\r\n\r\n\r\nlet isotopeSeeker: SeekClosest | undefined;\r\n\r\nasync function closestIso(value: number): Promise<void> {\r\n  if (!await loadIsotopes()) return; // User has not yet opened the settings panel\r\n\r\n  if (!isotopeSeeker) isotopeSeeker = new SeekClosest(isoList);\r\n  \r\n  if (prevIso) plot.toggleLine(prevIso[1], prevIso[0], false); // Remove previous isotope line\r\n\r\n  const { energy, name } = isotopeSeeker.seek(value, maxDist);\r\n\r\n  if (energy && name) {\r\n    const newIso: [string, number] = [name, energy];\r\n\r\n    if (prevIso !== newIso) prevIso = newIso;\r\n\r\n    plot.toggleLine(energy, name);\r\n  }\r\n  plot.updatePlot(spectrumData);\r\n}\r\n\r\n\r\nfunction plotIsotope(checkbox: HTMLInputElement): void {\r\n  const wordArray = checkbox.id.split('-');\r\n  plot.toggleLine(parseFloat(checkbox.value), wordArray[0] + '-' + wordArray[1], checkbox.checked);\r\n  plot.updatePlot(spectrumData);\r\n}\r\n\r\n\r\ndocument.getElementById('check-all-isos')!.onclick = (event) => selectAll(<HTMLInputElement>event.target);\r\n\r\nfunction selectAll(selectBox: HTMLInputElement): void {\r\n  const tableRows = (<HTMLTableElement>document.getElementById('table')).tBodies[0].rows;\r\n\r\n  for (const row of tableRows) {\r\n    const checkBox = <HTMLInputElement>row.cells[0].firstChild;\r\n    checkBox.checked = selectBox.checked;\r\n    if (selectBox.checked) {\r\n      const wordArray = checkBox.id.split('-');\r\n      plot.toggleLine(parseFloat(checkBox.value), wordArray[0] + '-' + wordArray[1], checkBox.checked);\r\n    }\r\n  }\r\n  if (!selectBox.checked) plot.clearAnnos();\r\n\r\n  // Bad performance because of Plotly with too many lines!\r\n  plot.updatePlot(spectrumData);\r\n}\r\n\r\n\r\nfunction useIdlePeakMode(button: HTMLButtonElement): void {\r\n  plot.clearPeakFinder(); // Delete all old lines\r\n  plot.peakConfig.enabled = false;\r\n  button.innerText = 'None';\r\n}\r\n\r\n\r\nfunction useGaussPeakMode(button: HTMLButtonElement): void {\r\n  plot.peakConfig.enabled = true;\r\n  plot.peakConfig.mode = 'gaussian';\r\n  button.innerText = 'Gaussian';\r\n}\r\n\r\n\r\nfunction useEnergyPeakMode(button: HTMLButtonElement): void {\r\n  plot.peakConfig.mode = 'energy';\r\n  button.innerText = 'Energy';\r\n}\r\n\r\n\r\nasync function useIsotopePeakMode(button: HTMLButtonElement): Promise<void> {\r\n  plot.clearPeakFinder(); // Delete all old lines\r\n  await loadIsotopes();\r\n  plot.peakConfig.mode = 'isotopes';\r\n  button.innerText = 'Isotopes';\r\n}\r\n\r\n\r\ndocument.getElementById('peak-finder-btn')!.onclick = event => findPeaks(<HTMLButtonElement>event.target);\r\n\r\nasync function findPeaks(button: HTMLButtonElement): Promise<void> {\r\n  if (plot.peakConfig.enabled) {\r\n    switch(plot.peakConfig.mode) {\r\n      case 'gaussian': // Second Mode: Energy\r\n        useEnergyPeakMode(button);\r\n        break;\r\n        \r\n      case 'energy': // Third Mode: Isotopes\r\n        await useIsotopePeakMode(button);\r\n        break;\r\n\r\n      case 'isotopes':\r\n        useIdlePeakMode(button);\r\n        break;\r\n    }\r\n  } else { // First Mode: Gauss\r\n    useGaussPeakMode(button);\r\n  }\r\n\r\n  plot.updatePlot(spectrumData);\r\n}\r\n\r\n\r\nfunction bindHotkeys(): void {\r\n  // Bind ESCAPE key to the settings offcanvas\r\n  document.addEventListener('keydown', (event: KeyboardEvent) => {\r\n    if (event.key.toLowerCase() === 'escape') {\r\n      const offcanvasElement = document.getElementById('offcanvas');\r\n      if (offcanvasElement && !offcanvasElement.classList.contains('show')) { // Exists and is not shown currently\r\n        if (!offcanvasElement.classList.contains('showing')) { // Don't toggle while in transition\r\n          new (<any>window).bootstrap.Offcanvas(offcanvasElement).show(); // Offcanvas is closed, open it\r\n        }\r\n      }\r\n    }\r\n  });\r\n  const settingsButton = document.getElementById('toggle-menu');\r\n  if (settingsButton) settingsButton.title += ' (ESC)'; // Add hotkey hint to settings button\r\n\r\n  // Bind all other standard hotkeys\r\n  for (const [key, buttonId] of Object.entries(hotkeys)) {\r\n    const button = document.getElementById(buttonId);\r\n    document.addEventListener('keydown', (event: KeyboardEvent) => {\r\n      if (event.altKey && event.key.toLowerCase() === key.toLowerCase()) {\r\n        event.preventDefault(); // Prevent the browser default action from popping up\r\n        if (!event.repeat) button?.click(); // Call the function to handle the hotkey action only once per keydown\r\n      }\r\n    });\r\n    if (button) button.title += ` (ALT+${key.toUpperCase()})`; // Add hotkey hint to button titles\r\n  }\r\n}\r\n\r\n/*\r\n=========================================\r\n  LOADING AND SAVING\r\n=========================================\r\n*/\r\n// These functions are REALLY ugly and a nightmare to maintain, but I don't know how to make it\r\n// better without nuking everything related to the settings and starting again from the ground up.\r\n// I'll probably have to do a complete re-write of the whole settings at one point...\r\n\r\nfunction saveJSON(name: string, value: string | boolean | number): boolean {\r\n  if (localStorageAvailable) {\r\n    localStorage.setItem(name, JSON.stringify(value));\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n\r\nfunction loadJSON(name: string): any {\r\n  return JSON.parse(<string>localStorage.getItem(name));\r\n}\r\n\r\n\r\nfunction bindInputs(): void {\r\n  // Bind settings button onclick events and enter press, format: {settingsValueElement: settingsName}\r\n  const settingsEnterPressElements = {\r\n    'iso-hover-prox': 'maxIsoDist',\r\n    'custom-url': 'customURL',\r\n    'custom-delimiter': 'fileDelimiter',\r\n    'custom-file-adc': 'fileChannels',\r\n    'custom-baud': 'baudRate',\r\n    'eol-char': 'eolChar',\r\n    'ser-limit-h': 'timeLimit',\r\n    'ser-limit-m': 'timeLimit',\r\n    'ser-limit-s': 'timeLimit',\r\n    'custom-ser-refresh': 'plotRefreshRate',\r\n    'custom-ser-buffer': 'serBufferSize',\r\n    'custom-ser-adc': 'serChannels',\r\n    'peak-thres': 'peakThres',\r\n    'peak-lag': 'peakLag',\r\n    'seek-width': 'seekWidth',\r\n    'gauss-sigma': 'gaussSigma'\r\n  }\r\n  for (const [inputId, settingsName] of Object.entries(settingsEnterPressElements)) {\r\n    const valueElement = <HTMLInputElement>document.getElementById(inputId);\r\n    valueElement.onkeydown = event => {\r\n      //if (event.key === 'Enter') buttonElement.click(); // Press ENTER key;\r\n      if (event.key === 'Enter') changeSettings(settingsName, valueElement);\r\n    };\r\n    const buttonElement = <HTMLButtonElement>document.getElementById(`${inputId}-btn`);\r\n    if (buttonElement) buttonElement.onclick = () => changeSettings(settingsName, valueElement);\r\n  }\r\n\r\n  // Bind settings button press or onchange events for settings that do not have the default value input element\r\n  document.getElementById('new-flags')!.onclick = event => changeSettings('newPeakStyle', <HTMLInputElement>event.target); // Checkbox\r\n  document.getElementById('enable-res')!.onclick = event => changeSettings('showEnergyRes', <HTMLInputElement>event.target); // Checkbox\r\n  document.getElementById('fwhm-fast')!.onclick = event => changeSettings('useFWHMFast', <HTMLInputElement>event.target); // Checkbox\r\n  document.getElementById('edit-plot')!.onclick = event => changeSettings('editMode', <HTMLInputElement>event.target); // Checkbox\r\n  document.getElementById('toggle-time-limit')!.onclick = event => changeSettings('timeLimitBool', <HTMLInputElement>event.target); // Checkbox\r\n  document.getElementById('download-format')!.onchange = event => changeSettings('plotDownload', <HTMLSelectElement>event.target); // Select\r\n  document.getElementById('theme-select')!.onchange = event => changeSettings('theme', <HTMLSelectElement>event.target); // Select\r\n}\r\n\r\n\r\nfunction loadSettingsDefault(): void {\r\n  if (notificationsAvailable) {\r\n    (<HTMLInputElement>document.getElementById('notifications-toggle')).checked = allowNotifications && (Notification.permission === 'granted');\r\n  }\r\n  \r\n  (<HTMLInputElement>document.getElementById('custom-url')).value = isoListURL;\r\n  (<HTMLInputElement>document.getElementById('edit-plot')).checked = plot.editableMode;\r\n  (<HTMLInputElement>document.getElementById('custom-delimiter')).value = raw.delimiter;\r\n  (<HTMLInputElement>document.getElementById('custom-file-adc')).value = raw.adcChannels.toString();\r\n  (<HTMLInputElement>document.getElementById('custom-ser-refresh')).value = (refreshRate / 1000).toString(); // Convert ms to s\r\n  (<HTMLInputElement>document.getElementById('custom-ser-buffer')).value = SerialManager.maxSize.toString();\r\n  (<HTMLInputElement>document.getElementById('custom-ser-adc')).value = SerialManager.adcChannels.toString();\r\n  \r\n  const time = new Date(maxRecTime); // Create a date with the time limit\r\n  (<HTMLInputElement>document.getElementById('ser-limit-h')).value = (time.getUTCHours() + (time.getUTCDate() - 1) * 24).toString(); // Grab the hours\r\n  (<HTMLInputElement>document.getElementById('ser-limit-m')).value = time.getUTCMinutes().toString(); // Grab the minutes\r\n  (<HTMLInputElement>document.getElementById('ser-limit-s')).value = time.getUTCSeconds().toString(); // Grab the seconds\r\n  \r\n  (<HTMLInputElement>document.getElementById('toggle-time-limit')).checked = maxRecTimeEnabled;\r\n  (<HTMLInputElement>document.getElementById('iso-hover-prox')).value = maxDist.toString();\r\n  (<HTMLInputElement>document.getElementById('custom-baud')).value = SerialManager.baudRate.toString();\r\n  (<HTMLInputElement>document.getElementById('eol-char')).value = SerialManager.eolChar;\r\n\r\n  (<HTMLInputElement>document.getElementById('sma-val')).value = plot.smaLength.toString();\r\n\r\n  (<HTMLInputElement>document.getElementById('new-flags')).checked = plot.peakConfig.newPeakStyle;\r\n  (<HTMLInputElement>document.getElementById('enable-res')).checked = plot.peakConfig.showFWHM;\r\n  (<HTMLInputElement>document.getElementById('fwhm-fast')).checked = CalculateFWHM.fastMode;\r\n\r\n  (<HTMLInputElement>document.getElementById('peak-thres')).value = plot.peakConfig.thres.toString();\r\n  (<HTMLInputElement>document.getElementById('peak-lag')).value = plot.peakConfig.lag.toString();\r\n  (<HTMLInputElement>document.getElementById('seek-width')).value = SeekClosest.seekWidth.toString();\r\n  (<HTMLInputElement>document.getElementById('gauss-sigma')).value = plot.gaussSigma.toString();\r\n\r\n  const formatSelector = <HTMLSelectElement>document.getElementById('download-format');\r\n  const formatLen = formatSelector.options.length;\r\n  const format = plot.downloadFormat;\r\n  for (let i = 0; i < formatLen; i++) {\r\n    if (formatSelector.options[i].value === format) formatSelector.selectedIndex = i;\r\n  }\r\n\r\n  const themeSelector = <HTMLSelectElement>document.getElementById('theme-select');\r\n  const themeLen = themeSelector.options.length;\r\n  const theme = loadJSON('theme');\r\n  for (let i = 0; i < themeLen; i++) {\r\n    if (themeSelector.options[i].value === theme) themeSelector.selectedIndex = i;\r\n  }\r\n}\r\n\r\n\r\nfunction loadSettingsStorage(): void {\r\n  let setting = loadJSON('allowNotifications');\r\n  if (notificationsAvailable && setting !== null) allowNotifications = setting && (Notification.permission === 'granted');\r\n\r\n  setting = loadJSON('customURL');\r\n  if (setting) isoListURL = new URL(setting).href;\r\n\r\n  setting = loadJSON('editMode');\r\n  if (setting !== null) plot.editableMode = setting;\r\n\r\n  setting = loadJSON('fileDelimiter');\r\n  if (setting !== null) raw.delimiter = setting;\r\n\r\n  setting = loadJSON('fileChannels');\r\n  if (setting !== null) raw.adcChannels = setting;\r\n\r\n  setting = loadJSON('plotRefreshRate');\r\n  if (setting !== null) refreshRate = setting;\r\n\r\n  setting = loadJSON('serBufferSize');\r\n  if (setting !== null) SerialManager.maxSize = setting;\r\n\r\n  setting = loadJSON('timeLimitBool');\r\n  if (setting !== null) maxRecTimeEnabled = setting;\r\n\r\n  setting = loadJSON('timeLimit');\r\n  if (setting !== null) maxRecTime = setting;\r\n\r\n  setting = loadJSON('maxIsoDist');\r\n  if (setting !== null) maxDist = setting;\r\n\r\n  setting = loadJSON('baudRate');\r\n  if (setting !== null) SerialManager.baudRate = setting;\r\n\r\n  setting = loadJSON('eolChar');\r\n  if (setting !== null) SerialManager.eolChar = setting;\r\n\r\n  setting = loadJSON('serChannels');\r\n  if (setting !== null) SerialManager.adcChannels = setting;\r\n\r\n  setting = loadJSON('smaLength');\r\n  if (setting !== null) plot.smaLength = setting;\r\n\r\n  setting = loadJSON('peakThres');\r\n  if (setting !== null) plot.peakConfig.thres = setting;\r\n\r\n  setting = loadJSON('peakLag');\r\n  if (setting !== null) plot.peakConfig.lag = setting;\r\n\r\n  setting = loadJSON('seekWidth');\r\n  if (setting !== null) SeekClosest.seekWidth = setting;\r\n\r\n  setting = loadJSON('plotDownload');\r\n  if (setting !== null) plot.downloadFormat = setting;\r\n\r\n  // Setting for dark mode is right at the beginning of the file\r\n\r\n  setting = loadJSON('gaussSigma');\r\n  if (setting !== null) plot.gaussSigma = setting;\r\n\r\n  setting = loadJSON('showEnergyRes');\r\n  if (setting !== null) plot.peakConfig.showFWHM = setting;\r\n\r\n  setting = loadJSON('useFWHMFast');\r\n  if (setting !== null) CalculateFWHM.fastMode = setting;\r\n\r\n  setting = loadJSON('newPeakStyle');\r\n  if (setting !== null) plot.peakConfig.newPeakStyle = setting;\r\n}\r\n\r\n\r\nfunction changeSettings(name: string, element: HTMLInputElement | HTMLSelectElement): void {\r\n  const stringValue = element.value.trim();\r\n  let result = false;\r\n\r\n  if (!element.checkValidity() || !stringValue) {\r\n    new ToastNotification('settingType'); //popupNotification('setting-type');\r\n    return;\r\n  }\r\n\r\n  switch (name) {\r\n    case 'editMode': {\r\n      const boolVal = (<HTMLInputElement>element).checked;\r\n      plot.editableMode = boolVal;\r\n      plot.resetPlot(spectrumData); // Modify won't be disabled if you don't fully reset\r\n      bindPlotEvents();\r\n\r\n      result = saveJSON(name, boolVal);\r\n      break;\r\n    }\r\n    case 'customURL': {\r\n      try {\r\n        /*\r\n        // Currently not yet supported in this TS version\r\n        // Use new String.prototype.toWellFormed() method if available to sanitize any ill-formed strings\r\n        let tmpStringCopy = stringValue;\r\n        if ('toWellFormed' in String.prototype) {\r\n          tmpStringCopy = tmpStringCopy.toWellFormed();\r\n        }\r\n        */\r\n        isoListURL = new URL(stringValue).href;\r\n\r\n        loadIsotopes(true);\r\n\r\n        result = saveJSON(name, isoListURL);\r\n\r\n      } catch(e) {\r\n        new ToastNotification('settingError'); //popupNotification('setting-error');\r\n        console.error('Custom URL Error', e);\r\n      }\r\n      break;\r\n    }\r\n    case 'fileDelimiter': {\r\n      raw.delimiter = stringValue;\r\n\r\n      result = saveJSON(name, stringValue);\r\n      break;\r\n    }\r\n    case 'fileChannels': {\r\n      const numVal = parseInt(stringValue);\r\n      raw.adcChannels = numVal;\r\n\r\n      result = saveJSON(name, numVal);\r\n      break;\r\n    }\r\n    case 'timeLimitBool': {\r\n      const boolVal = (<HTMLInputElement>element).checked;\r\n      maxRecTimeEnabled = boolVal;\r\n\r\n      result = saveJSON(name, boolVal);\r\n      break;\r\n    }\r\n    case 'timeLimit': {\r\n      const timeElements = element.id.split('-');\r\n      const elementIds = ['s', 'm', 'h'];\r\n      let value = 0;\r\n      for (const index in elementIds) {\r\n        value += parseInt((<HTMLInputElement>document.getElementById(`${timeElements[0]}-${timeElements[1]}-${elementIds[index]}`)).value.trim()) * 60**parseInt(index);\r\n      }\r\n      value *= 1000; // Convert s to ms\r\n\r\n      maxRecTime = value;\r\n\r\n      result = saveJSON(name, maxRecTime);\r\n      break;\r\n    }\r\n    case 'maxIsoDist': {\r\n      const numVal = parseFloat(stringValue);\r\n      maxDist = numVal;\r\n\r\n      result = saveJSON(name, maxDist);\r\n      break;\r\n    }\r\n    case 'plotRefreshRate': {\r\n      const numVal = parseFloat(stringValue);\r\n      refreshRate = numVal * 1000; // convert s to ms\r\n\r\n      result = saveJSON(name, refreshRate);\r\n      break;\r\n    }\r\n    case 'serBufferSize': {\r\n      const numVal = parseInt(stringValue);\r\n      SerialManager.maxSize = numVal;\r\n\r\n      result = saveJSON(name, SerialManager.maxSize);\r\n      break;\r\n    }\r\n    case 'baudRate': {\r\n      const numVal = parseInt(stringValue);\r\n      SerialManager.baudRate = numVal;\r\n\r\n      result = saveJSON(name, SerialManager.baudRate);\r\n      break;\r\n    }\r\n    case 'eolChar': {\r\n      SerialManager.eolChar = stringValue;\r\n\r\n      result = saveJSON(name, stringValue);\r\n      break;\r\n    }\r\n    case 'serChannels': {\r\n      const numVal = parseInt(stringValue);\r\n      SerialManager.adcChannels = numVal;\r\n\r\n      result = saveJSON(name, numVal);\r\n      break;\r\n    }\r\n    case 'peakThres': {\r\n      const numVal = parseFloat(stringValue);\r\n      plot.peakConfig.thres = numVal;\r\n      plot.updatePlot(spectrumData);\r\n\r\n      result = saveJSON(name, numVal);\r\n      break;\r\n    }\r\n    case 'peakLag': {\r\n      const numVal = parseInt(stringValue);\r\n      plot.peakConfig.lag = numVal;\r\n      plot.updatePlot(spectrumData);\r\n\r\n      result = saveJSON(name, numVal);\r\n      break;\r\n    }\r\n    case 'seekWidth': {\r\n      const numVal = parseFloat(stringValue);\r\n      SeekClosest.seekWidth = numVal;\r\n      plot.updatePlot(spectrumData);\r\n\r\n      result = saveJSON(name, numVal);\r\n      break;\r\n    }\r\n    case 'plotDownload': {\r\n      plot.downloadFormat = <DownloadFormat>stringValue // Cast to DownloadFormat\r\n      plot.updatePlot(spectrumData);\r\n\r\n      result = saveJSON(name, stringValue);\r\n      break;\r\n    }\r\n    case 'theme': {\r\n      result = saveJSON(name, stringValue);\r\n\r\n      plot.darkMode = applyTheming() === 'dark';\r\n      resetPlot(false);\r\n\r\n      break;\r\n    }\r\n    case 'gaussSigma': {\r\n      const numVal = parseInt(stringValue);\r\n      plot.gaussSigma = numVal;\r\n      plot.updatePlot(spectrumData);\r\n\r\n      result = saveJSON(name, numVal);\r\n      break;\r\n    }\r\n    case 'showEnergyRes': {\r\n      const boolVal = (<HTMLInputElement>element).checked;\r\n      plot.peakConfig.showFWHM = boolVal;\r\n      plot.updatePlot(spectrumData);\r\n\r\n      result = saveJSON(name, boolVal);\r\n      break;\r\n    }\r\n    case 'useFWHMFast': {\r\n      const boolVal = (<HTMLInputElement>element).checked;\r\n      CalculateFWHM.fastMode = boolVal;\r\n      plot.updatePlot(spectrumData);\r\n      \r\n      result = saveJSON(name, boolVal);\r\n      break;\r\n    }\r\n    case 'newPeakStyle': {\r\n      const boolVal = (<HTMLInputElement>element).checked;\r\n      plot.peakConfig.newPeakStyle = boolVal;\r\n      plot.updatePlot(spectrumData);\r\n      \r\n      result = saveJSON(name, boolVal);\r\n      break;\r\n    }\r\n    default: {\r\n      new ToastNotification('settingError'); //popupNotification('setting-error');\r\n      return;\r\n    }\r\n  }\r\n\r\n  if (result) new ToastNotification('settingSuccess'); //popupNotification('setting-success'); // Success Toast\r\n}\r\n\r\n\r\ndocument.getElementById('reset-gamma-mca')!.onclick = () => resetMCA();\r\n\r\nfunction resetMCA(): void {\r\n  // Maybe also reset service worker?\r\n  if (localStorageAvailable) localStorage.clear();\r\n  window.location.reload();\r\n}\r\n\r\n/*\r\n=========================================\r\n  SERIAL CONNECTION DATA\r\n=========================================\r\n*/\r\n\r\nlet serRecorder: SerialManager | undefined;\r\n\r\n\r\ndocument.getElementById('s1')!.onchange = event => selectSerialType(<HTMLInputElement>event.target);\r\ndocument.getElementById('s2')!.onchange = event => selectSerialType(<HTMLInputElement>event.target);\r\n\r\nfunction selectSerialType(button: HTMLInputElement): void {\r\n  SerialManager.orderType = <DataOrder>button.value;\r\n  saveJSON('serialDataMode', button.id);\r\n}\r\n\r\n\r\nfunction serialConnect(/*event: Event*/): void {\r\n  listSerial();\r\n  new ToastNotification('serialConnect'); //popupNotification('serial-connect');\r\n}\r\n\r\n\r\nfunction serialDisconnect(event: Event): void {\r\n  if (serRecorder?.isThisPort(<SerialPort | WebUSBSerialPort>event.target)) disconnectPort(true);\r\n\r\n  listSerial();\r\n\r\n  new ToastNotification('serialDisconnect'); //popupNotification('serial-disconnect');\r\n}\r\n\r\n\r\ndocument.getElementById('serial-list-btn')!.onclick = () => listSerial();\r\n\r\nasync function listSerial(): Promise<void> {\r\n  const portSelector = <HTMLSelectElement>document.getElementById('port-selector');\r\n  const optionsLen = portSelector.options.length;\r\n  for (let i = optionsLen; i >= 0; i--) { // Remove all \"old\" ports\r\n    portSelector.remove(i);\r\n  }\r\n  portsAvail = [];\r\n  \r\n\r\n  if (navigator.serial) {\r\n    const ports = await navigator.serial.getPorts();\r\n    for (const port of ports) { // List new Ports\r\n      portsAvail.push(new WebSerial(port));\r\n    }\r\n  } else { // Fallback Web USB API, only if Web Serial is not avail\r\n    if (navigator.usb) {\r\n      const ports = await navigator.usb.getDevices();\r\n      for (const port of ports) { // List new Ports\r\n        portsAvail.push(new WebUSBSerial(port));\r\n      }\r\n    }\r\n  }\r\n\r\n  let selectIndex = 0;\r\n\r\n  for (const index in portsAvail) {\r\n    const option = document.createElement('option');\r\n    option.text = `Port ${index} (${portsAvail[index]?.getInfo()})`;\r\n    portSelector.add(option, parseInt(index));\r\n\r\n    if (serRecorder?.isThisPort(portsAvail[index]?.getPort())) {\r\n      selectIndex = parseInt(index);\r\n      option.text = '> ' + option.text;\r\n    }\r\n  }\r\n\r\n  const serSettingsElements = document.getElementsByClassName('ser-settings') as HTMLCollectionOf<HTMLInputElement> | HTMLCollectionOf<HTMLSelectElement>;\r\n\r\n  if (!portSelector.options.length) {\r\n    const option = document.createElement('option');\r\n    option.text = 'No Ports Available';\r\n    portSelector.add(option);\r\n\r\n    for (const element of serSettingsElements) {\r\n      element.disabled = true;\r\n    }\r\n  } else {\r\n    portSelector.selectedIndex = selectIndex;\r\n    \r\n    for (const element of serSettingsElements) {\r\n      element.disabled = false;\r\n    }\r\n  }\r\n}\r\n\r\n\r\ndocument.getElementById('serial-add-device')!.onclick = () => requestSerial();\r\n\r\nasync function requestSerial(): Promise<void> {\r\n  try {\r\n    if (navigator.serial) {\r\n      await navigator.serial.requestPort();\r\n    } else {\r\n      await navigator.usb.requestDevice({\r\n        filters : WebUSBSerial.deviceFilters \r\n\t\t\t});\r\n    }\r\n    listSerial();\r\n  } catch(err) {\r\n    console.warn('Aborted adding a new port!', err); // Do nothing.\r\n  }\r\n}\r\n\r\n\r\nfunction selectPort(): number {\r\n  const selectedPort = (<HTMLSelectElement>document.getElementById('port-selector')).selectedIndex;\r\n  const newport = portsAvail[selectedPort];\r\n\r\n  if (newport && !serRecorder?.isThisPort(newport.getPort())) { // serRecorder?.port != newport\r\n    serRecorder = new SerialManager(newport);\r\n    clearConsoleLog(); // Clear serial console history\r\n  }\r\n\r\n  return selectedPort;\r\n}\r\n\r\n\r\ndocument.getElementById('resume-button')!.onclick = () => startRecord(true, recordingType);\r\ndocument.getElementById('record-spectrum-btn')!.onclick = () => startRecord(false, 'data');\r\ndocument.getElementById('record-bg-btn')!.onclick = () => startRecord(false, 'background');\r\n\r\nlet recordingType: DataType;\r\nlet startDate: Date;\r\nlet endDate: Date;\r\nlet wakeLock: WakeLockSentinel | null;\r\n\r\nasync function startRecord(pause = false, type: DataType): Promise<void> {\r\n  try {\r\n    selectPort();\r\n    await serRecorder?.startRecord(pause);\r\n  } catch(err) {\r\n    console.error('Connection Error:', err);\r\n    new ToastNotification('serialConnectError'); //popupNotification('serial-connect-error');\r\n    return;\r\n  }\r\n\r\n  if (wakeLockAvailable) {\r\n    try {\r\n      wakeLock = await navigator.wakeLock.request('screen'); // Acquire Screen Wake Lock\r\n\r\n      document.addEventListener('visibilitychange', async () => {\r\n        if (wakeLock !== null && document.visibilityState === 'visible') {\r\n          // Reacquire wake lock on visibility change (minimizing and maximizing again)\r\n          wakeLock = await navigator.wakeLock.request('screen');\r\n        }\r\n      });\r\n    } catch (err) {\r\n      console.error('Screen Wake Lock Error:', err); // The Wake Lock request has failed - usually system related, such as battery.\r\n    }\r\n  }\r\n\r\n  recordingType = type;\r\n\r\n  if (!pause) {\r\n    removeFile(type); // Remove old spectrum\r\n    document.getElementById(`${type}-form-label`)!.innerText = 'Serial Recording';\r\n    startDate = new Date();\r\n  }\r\n\r\n  (<HTMLInputElement>document.getElementById('toggle-evolution-chart')).disabled = false;\r\n  (<HTMLButtonElement>document.getElementById('stop-button')).disabled = false;\r\n  document.getElementById('pause-button')!.classList.remove('d-none');\r\n  document.getElementById('record-button')!.classList.add('d-none');\r\n  document.getElementById('resume-button')!.classList.add('d-none');\r\n\r\n  const spinnerElements = document.getElementsByClassName('recording-spinner');\r\n\r\n  for (const ele of spinnerElements) {\r\n    ele.classList.remove('d-none');\r\n  }\r\n\r\n  refreshRender(type, !pause); // Start updating the plot\r\n  refreshMeta(type); // Start updating the meta data\r\n  autoSaveData(); // Start data autosaving\r\n\r\n  // Check if pause ? Last cps value after pausing is always 0, remove! : Empty if just started to record\r\n  pause ? cpsValues.pop() : cpsValues = [];\r\n\r\n  //plot.updatePlot(spectrumData); // Prevent the plot from moving all over the screen due to other things popping-up\r\n}\r\n\r\n\r\ndocument.getElementById('pause-button')!.onclick = () => disconnectPort();\r\ndocument.getElementById('stop-button')!.onclick = () => disconnectPort(true);\r\n\r\nasync function disconnectPort(stop = false): Promise<void> {\r\n  document.getElementById('pause-button')!.classList.add('d-none');\r\n  const spinnerElements = document.getElementsByClassName('recording-spinner');\r\n\r\n  for (const ele of spinnerElements) {\r\n    ele.classList.add('d-none');\r\n  }\r\n\r\n  document.getElementById('resume-button')!.classList.toggle('d-none', stop);\r\n\r\n  //(<HTMLInputElement>document.getElementById('toggle-evolution-chart')).disabled = true;\r\n\r\n  if (stop) {\r\n    (<HTMLButtonElement>document.getElementById('stop-button')).disabled = true;\r\n    document.getElementById('record-button')!.classList.remove('d-none');\r\n\r\n    endDate = new Date();\r\n  }\r\n\r\n  wakeLock?.release().then(() => { // Release Screen Wake Lock\r\n    wakeLock = null;\r\n  });\r\n\r\n  try {\r\n    clearTimeout(autosaveTimeout);\r\n    clearTimeout(refreshTimeout);\r\n    clearTimeout(metaTimeout);\r\n    clearTimeout(consoleTimeout);\r\n  } catch (err) {\r\n    console.warn('No timeout to clear. Something might be wrong...', err);\r\n  }\r\n\r\n  try {\r\n    await serRecorder?.stopRecord();\r\n  } catch(error) {\r\n    // Sudden device disconnect can cause this\r\n    console.error('Misc Serial Read Error:', error);\r\n    new ToastNotification('miscSerialError'); //popupNotification('misc-ser-error');\r\n    launchSysNotification('Recording Crashed!', 'A fatal error occured with the connected serial device and the recording has stopped.');\r\n  }\r\n}\r\n\r\n\r\ndocument.getElementById('clear-console-log')!.onclick = () => clearConsoleLog();\r\n\r\nfunction clearConsoleLog(): void {\r\n  document.getElementById('ser-output')!.innerText = '';\r\n  serRecorder?.flushRawData();\r\n}\r\n\r\n\r\ndocument.getElementById('serial-console-modal')!.addEventListener('show.bs.modal', (/*event: Event*/): void => { // Adjust Plot Size For Main Tab Menu Content Size\r\n  readSerial();\r\n});\r\n\r\ndocument.getElementById('serial-console-modal')!.addEventListener('hide.bs.modal', async (/*event: Event*/): Promise<void> => { // Adjust Plot Size For Main Tab Menu Content Size\r\n  await serRecorder?.hideConsole();\r\n  clearTimeout(consoleTimeout);\r\n});\r\n\r\n\r\nasync function readSerial(): Promise<void> {\r\n  try {\r\n    const portNumber = selectPort();\r\n    document.getElementById('serial-console-title')!.innerText = `(Port ${portNumber})`;\r\n    await serRecorder?.showConsole();\r\n  } catch(err) {\r\n    console.error('Connection Error:', err);\r\n    new ToastNotification('serialConnectError'); //popupNotification('serial-connect-error');\r\n    return;\r\n  }\r\n\r\n  refreshConsole();\r\n}\r\n\r\n\r\ndocument.getElementById('ser-command')!.onkeydown = (event) => {\r\n  if (event.key === 'Enter') document.getElementById('send-command')?.click(); // ENTER key\r\n  \r\n  if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\r\n    event.preventDefault();\r\n    handleArrowKey(event.key);\r\n  }\r\n  //event.preventDefault();\r\n}\r\n\r\n\r\nconst consoleHistory = {\r\n  history: <string[]>[],\r\n  currentIndex: -1\r\n}\r\n\r\nfunction handleArrowKey(key: string): void {\r\n  const element = <HTMLInputElement>document.getElementById('ser-command');\r\n  if (key === 'ArrowUp' && consoleHistory.currentIndex < consoleHistory.history.length - 1) {\r\n    consoleHistory.currentIndex++;\r\n  } else if (key === 'ArrowDown' && consoleHistory.currentIndex > -1) {\r\n    consoleHistory.currentIndex--;\r\n  }\r\n\r\n  if (consoleHistory.currentIndex >= 0 && consoleHistory.currentIndex < consoleHistory.history.length) {\r\n    element.value = consoleHistory.history[consoleHistory.currentIndex];\r\n  } else {\r\n    element.value = '';\r\n  }\r\n}\r\n\r\n\r\ndocument.getElementById('send-command')!.onclick = () => sendSerial();\r\n\r\nasync function sendSerial(): Promise<void> {\r\n  const element = <HTMLInputElement>document.getElementById('ser-command');\r\n  try {\r\n    await serRecorder?.sendString(element.value);\r\n  } catch (err) {\r\n    console.error('Connection Error:', err);\r\n    new ToastNotification('serialConnectError'); //popupNotification('serial-connect-error');\r\n    return;\r\n  }\r\n\r\n  // Add message to console history\r\n  const inputValue = element.value.trim();\r\n\r\n  if (inputValue.length) {\r\n    consoleHistory.history.unshift(inputValue);\r\n    consoleHistory.currentIndex = -1;\r\n  }\r\n\r\n  element.value = '';\r\n}\r\n\r\n\r\ndocument.getElementById('reconnect-console-log')!.onclick = () => reconnectConsole();\r\n\r\nasync function reconnectConsole(): Promise<void> {\r\n  await serRecorder?.hideConsole(); // Same code as closing and re-opening of the console modal\r\n  clearTimeout(consoleTimeout);\r\n  readSerial();\r\n}\r\n\r\n\r\nlet autoscrollEnabled = false;\r\n\r\ndocument.getElementById('autoscroll-console')!.onclick = event => toggleAutoscroll((<HTMLInputElement>event.target).checked);\r\n\r\nfunction toggleAutoscroll(enabled: boolean) {\r\n  autoscrollEnabled = enabled;\r\n  saveJSON('consoleAutoscrollEnabled', autoscrollEnabled);\r\n}\r\n\r\n\r\nlet consoleTimeout: ReturnType<typeof setTimeout>;\r\n\r\nfunction refreshConsole(): void {\r\n  if (serRecorder?.port?.isOpen) {\r\n    document.getElementById('ser-output')!.innerText = serRecorder.getRawData();\r\n    consoleTimeout = setTimeout(refreshConsole, CONSOLE_REFRESH);\r\n\r\n    if (autoscrollEnabled) document.getElementById('ser-output')!.scrollIntoView({behavior: 'smooth', block: 'end'});\r\n  }\r\n}\r\n\r\n\r\nlet autosaveTimeout: ReturnType<typeof setTimeout>;\r\n\r\nfunction autoSaveData(): void {\r\n  const autosaveBadgeElement = document.getElementById('autosave-badge')!;\r\n  const data = generateNPES();\r\n\r\n  if (data) {\r\n    if(saveJSON('autosave', data)) {\r\n      const formatOptions: Intl.DateTimeFormatOptions = {\r\n        month: 'short',\r\n        day: 'numeric',\r\n        hour: 'numeric',\r\n        minute: 'numeric',\r\n        hour12: false, // Set to false for 24-hour format\r\n      };\r\n    \r\n      const formatter = new Intl.DateTimeFormat('en-US', formatOptions);\r\n      const currentDateTimeString = formatter.format(new Date());\r\n\r\n      autosaveBadgeElement.title = `The data was last saved automatically on ${currentDateTimeString}.`;\r\n      autosaveBadgeElement.innerHTML = `<i class=\"fa-solid fa-check\"></i> Autosaved ${currentDateTimeString}`;\r\n    }\r\n  }\r\n\r\n  autosaveBadgeElement?.classList.toggle('d-none', data ? false : true);\r\n  \r\n  autosaveTimeout = setTimeout(autoSaveData, AUTOSAVE_TIME);\r\n}\r\n\r\n\r\nfunction getRecordTimeStamp(time: number): string {\r\n  const dateTime = new Date(time);\r\n  return addLeadingZero((dateTime.getUTCHours() + (dateTime.getUTCDate() - 1) * 24).toString()) + ':' + addLeadingZero(dateTime.getUTCMinutes().toString()) + ':' + addLeadingZero(dateTime.getUTCSeconds().toString());\r\n}\r\n\r\n\r\nlet metaTimeout: ReturnType<typeof setTimeout>;\r\n\r\nfunction refreshMeta(type: DataType): void {\r\n  if (serRecorder?.port?.isOpen) {\r\n    const nowTime = performance.now();\r\n\r\n    const totalTimeElement = document.getElementById('total-record-time')!;\r\n\r\n    const totalMeasTime = serRecorder.getTime();\r\n\r\n    spectrumData[`${type}Time`] = totalMeasTime; // Update measurementTime in spectrum data\r\n    \r\n    document.getElementById('record-time')!.innerText = getRecordTimeStamp(totalMeasTime);\r\n    const delta = new Date(totalMeasTime);\r\n\r\n    const progressBar = document.getElementById('ser-time-progress-bar')!;\r\n    progressBar.classList.toggle('d-none', !maxRecTimeEnabled);\r\n\r\n    if (maxRecTimeEnabled) {\r\n      const progressElement = document.getElementById('ser-time-progress')!;\r\n      const progress = Math.round(delta.getTime() / maxRecTime * 100);\r\n      progressElement.style.width = progress + '%';\r\n      progressElement.innerText = progress + '%';\r\n      progressBar.setAttribute('aria-valuenow', progress.toString())\r\n\r\n      totalTimeElement.innerText = ' / ' +  getRecordTimeStamp(maxRecTime);\r\n    } else {\r\n      totalTimeElement.innerText = '';\r\n    }\r\n\r\n    updateSpectrumTime();\r\n\r\n    if (delta.getTime() >= maxRecTime && maxRecTimeEnabled) {\r\n      disconnectPort(true);\r\n      new ToastNotification('autoStop'); //popupNotification('auto-stop');\r\n      launchSysNotification('Recording Stopped!', 'Your desired recording time has expired and the recording has automatically stopped.');\r\n    } else {\r\n      const finishDelta = performance.now() - nowTime;\r\n      metaTimeout = setTimeout(refreshMeta, (REFRESH_META_TIME - finishDelta > 0) ? (REFRESH_META_TIME - finishDelta) : 1, type); // Only re-schedule if still available\r\n    }\r\n  }\r\n}\r\n\r\n\r\nlet lastUpdate = performance.now();\r\nlet refreshTimeout: ReturnType<typeof setTimeout>;\r\n\r\nfunction refreshRender(type: DataType, firstLoad = false): void {\r\n  if (serRecorder?.port?.isOpen) {\r\n    const startDelay = performance.now();\r\n\r\n    //await serRecorder.stopRecord(); // Maybe?!\r\n    const newData = serRecorder.getData(); // Get all the new data\r\n    const measTime = serRecorder.getTime() ?? 1000;\r\n    //await serRecorder.startRecord(true); // Maybe?!\r\n\r\n    if (SerialManager.orderType === 'hist') {\r\n      spectrumData.addHist(type, newData);\r\n    } else if (SerialManager.orderType === 'chron') {\r\n      spectrumData.addPulseData(type, newData, SerialManager.adcChannels);\r\n    }\r\n\r\n    spectrumData[`${type}Cps`] = spectrumData[type].map(val => val / measTime * 1000);\r\n\r\n    if (firstLoad) {\r\n      plot.resetPlot(spectrumData, cpsValues); // Prevent the overlay going into the toolbar\r\n      bindPlotEvents();\r\n    } else {\r\n      plot.updatePlot(spectrumData, cpsValues);\r\n    }\r\n\r\n    const deltaLastRefresh = measTime - lastUpdate;\r\n    lastUpdate = measTime;\r\n\r\n    const cpsValue = ((SerialManager.orderType === 'chron') ? newData.length : newData.reduce((acc, curr) => acc+curr, 0)) / deltaLastRefresh * 1000;\r\n    cpsValues.push(cpsValue);\r\n\r\n    /* // Only update whenever counts are received\r\n    let cpsValue = 0;\r\n\r\n    if (newData.length >= 0) { // Only do whenever new data is received\r\n      const deltaLastRefresh = measTime - lastUpdate;\r\n      lastUpdate = measTime;\r\n\r\n      cpsValue = ((SerialManager.orderType === 'chron') ? newData.length : newData.reduce((acc, curr) => acc+curr, 0)) / deltaLastRefresh * 1000;\r\n      cpsValues.push(cpsValue);\r\n    }\r\n    */\r\n\r\n    document.getElementById('cps')!.innerText = cpsValue.toFixed(1) + ' cps';\r\n\r\n    const mean = cpsValues.reduce((acc, curr) => acc+curr, 0) / cpsValues.length;\r\n    const std = Math.sqrt(cpsValues.reduce((acc, curr) => acc + (curr - mean)**2, 0) / (cpsValues.length - 1));\r\n\r\n    document.getElementById('avg-cps')!.innerText = 'Avg: ' + mean.toFixed(1);\r\n    document.getElementById('avg-cps-std')!.innerHTML = ` &plusmn; ${std.toFixed(1)} cps (&#916; ${Math.round(std/mean*100)}%)`;\r\n\r\n    updateSpectrumCounts();\r\n\r\n    const finishDelta = performance.now() - startDelay;\r\n    refreshTimeout = setTimeout(refreshRender, (refreshRate - finishDelta > 0) ? (refreshRate - finishDelta) : 1, type);\r\n  }\r\n}\r\n\r\n/*\r\n=========================================\r\n  SOUNDCARD CONNECTION DATA\r\n=========================================\r\n*/\r\n\r\n// Looks to be a PITA just to get the raw data/volume/amplitude from the microphone in the browser\r\n"],"names":["loadJSON","name","JSON","parse","localStorage","getItem","getPreferredTheme","storedTheme","window","matchMedia","matches","changeTabBorders","theme","borderColor","boarderModeElements","document","getElementsByClassName","element","classList","replace","boarderThemeElements","setTheme","documentElement","setAttribute","notificationContents","type","icon","header","body","delay","toastElement","toast","toastContainer","constructor","this","getElementById","console","error","content","root","createElement","className","toString","toastHeader","appendChild","innerHTML","Date","toLocaleString","toastBody","addEventListener","removeChild","undefined","bootstrap","Toast","show","title","forceShow","visibilityState","Notification","lang","badge","SeekClosest","static","isoList","list","conversionList","isotopeEntry","Object","keys","key","gammaLines","line","seek","value","maxDist","seekWidth","closeValsNum","filter","energy","Math","abs","parseFloat","map","length","closest","reduce","prev","curr","endResult","CalculateFWHM","peakList","calibratedBins","yAxis","sort","a","b","energyToBin","numberOfPeaks","axisLength","binPeaks","compareIndex","i","push","compute","peakBins","peakFWHMs","index","peakBin","peakEnergy","limitFWHM","resolutionLimit","limitMin","halfHeight","binLeft","energyLeft","heightLeft","fwhmPartLeft","fastMode","limitMax","binRight","energyRight","heightRight","fwhmPartRight","getResolution","peakResolutions","stringPeakEnergy","fwhm","entries","plotDiv","xAxis","linePlot","downloadFormat","darkMode","plotBgDark","plotBgLight","paperBgDark","paperBgLight","fontColorLight","fontColorDark","gridColorLight","gridColorDark","annoBgLight","annoBgDark","cpsSwitchLimit","evolutionPointLimit","sma","smaLength","calibration","enabled","imported","points","aFrom","aTo","bFrom","bTo","cFrom","cTo","coeff","c1","c2","c3","cps","shapes","annotations","editableMode","isotopeSeeker","peakConfig","mode","thres","lag","showFWHM","newPeakStyle","lines","gaussSigma","customDownloadButton","Plotly","Icons","direction","click","plotElement","newLayout","stringify","layout","images","source","URL","location","origin","href","newAnno","x","y","opacity","xref","yref","xanchor","yanchor","text","showarrow","font","size","data","responsive","displaylogo","toImageButtonOptions","filename","encodeURIComponent","style","display","customFullscreenButton","toggle","update","gaussValues","dataArray","sigma","divId","getXAxis","len","step","xArray","clearCalibration","computeCoefficients","terms","read","getTerms","getCalAxis","calArray","k","d","computeMovingAverage","target","newData","Array","half","round","addVal","removeVal","val","divider","j","clearPeakFinder","toggleLine","drawPeakFinder","peakArray","heightAxis","result","resultBin","height","peakFinder","heightData","blankXAxis","longData","maxVal","max","peakLines","shortLen","values","peakLen","resetPlot","spectrumData","cpsValues","plotCalibration","plotEvolution","plotData","updatePlot","hovertext","toFixed","newLine","x0","y0","x1","y1","editable","color","width","dash","log10","arrowcolor","arrowhead","ax","ay","arrowsize","bgcolor","shape","anno","splice","parseInt","clearAnnos","setChartType","dataObj","computeGaussValues","xMin","xMax","exp","avg","squaredSum","gaussianCorrel","correlValues","computeNew","std","sqrt","resultVal","scalingFactor","forEach","array","limitArraySize","originalArray","targetSize","resultArray","originalSize","chunk","slice","average","sum","ceil","trace","averageTrace","uirevision","autosize","hovermode","legend","orientation","xaxis","mirror","linewidth","autorange","autorangeoptions","minallowed","rangeslider","borderwidth","showspikes","spikethickness","spikedash","spikecolor","spikemode","ticksuffix","hoverformat","exponentformat","automargin","gridcolor","yaxis","showticksuffix","plot_bgcolor","paper_bgcolor","margin","l","r","t","sizex","sizey","config","scrollZoom","format","modeBarButtons","fill","markersTrace","marker","textposition","charArr","char","fromVar","toVar","fromVal","toVal","showexponent","computePulseHeightData","stackgroup","dataCps","background","bgTrace","backgroundCps","dataLen","gaussData","eTrace","unshift","selectdirection","activeselection","fillcolor","newselection","fixedrange","gaussDataX","gaussDataY","peaks","fwhmValue","reverse","valueIndex","delimiter","adcChannels","fileType","tempValIndex","schemaURLTable","NPESv1","NPESv2","schemaJSON","checkLines","split","isNaN","trim","parseLines","histConverter","dataArr","parseCalibration","valueArray","xEnergyData","regressionArray","newObj","pop","csvToArray","returnData","histogramData","calibrationCoefficients","dataLines","dataEvents","xmlToArray","meta","time","notes","deviceName","startTime","endTime","dataMt","backgroundMt","xmlDoc","DOMParser","parseFromString","especTop","getElementsByTagName","espectrum","bgspectrum","espec","from","item","textContent","bgspecTop","bgspec","calCoeffsTop","calCoeffs","coeffNumArray","rdl","weight","volume","e","jsonToObject","json","version","code","description","schemaVersion","response","fetch","ok","schema","validator","ZSchema","validate","errors","getLastErrors","errorMessages","message","port","device","isOpen","info","productName","manufacturerName","sendString","enc","TextEncoder","send","encode","buffer","Uint8Array","pos","Promise","resolve","setTimeout","ret","subarray","serOptions","overridePortSettings","baudrate","open","baudRate","WebUSBSerialPort","connect","set","close","disconnect","isThisPort","getInfo","getPort","writable","textEncoder","TextEncoderStream","writer","getWriter","writableStreamClosed","readable","pipeTo","write","reader","getReader","releaseLock","cancel","usbProductId","toUpperCase","SerialManager","closed","recording","onlyConsole","timeDone","consoleMemory","consoleMemoryTotal","rawConsoleData","rawData","maxHistLength","maxLength","bufferPulseData","baseHist","showConsole","readUntilClosed","hideConsole","err","warn","stopRecord","performance","now","startRecord","resume","flushData","clearBaseHist","addRaw","uintArray","string","TextDecoder","decode","rawLines","maxSize","orderType","stringArr","eolChar","shift","trimString","parsedInt","stringHist","numHist","parsed","diffHist","flushRawData","getRawData","getData","copyArr","getTime","Matrix","backwardSubstitution","n","o","s","u","combineMatrices","forwardElimination","gaussianJordanElimination","identityMatrix","matrixProduct","doMultiplication","multiplyRow","DataPoint","PolynomialRegression","degree","matrix","leftMatrix","rightMatrix","generateLeftMatrix","generateRightMatrix","sumX","pow","sumXTimesY","sumY","predictY","SIO","FT8U232AM","FT232BM","FT2232C","FT232RL","FT2232H","FT4232H","FT232H","FTX","ftdi_sio_b300","ftdi_sio_b600","ftdi_sio_b1200","ftdi_sio_b2400","ftdi_sio_b4800","ftdi_sio_b9600","ftdi_sio_b19200","ftdi_sio_b38400","ftdi_sio_b57600","ftdi_sio_b115200","_","portConfiguration","interfaceNumber","endpointIn","endpointOut","modemStatusByte","lineStatusByte","packetsReceived","onReceive","onReceiveError","T","transferIn","then","configuration","selectConfiguration","interfaces","alternates","log","interfaceClass","endpoints","endpointNumber","claimInterface","selectAlternateInterface","controlTransferOut","requestType","recipient","request","getBaudDivisor","getBaudBase","controlTransferIn","latencyTimer","DIV_ROUND_CLOSEST","transferOut","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","definition","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","dataTime","backgroundTime","getTotalCounts","start","end","addPulseData","newDataArr","addHist","newHistArr","plot","SpectrumPlot","raw","RawData","calClick","c","oldCalVals","portsAvail","refreshRate","maxRecTimeEnabled","maxRecTime","REFRESH_META_TIME","CONSOLE_REFRESH","AUTOSAVE_TIME","isoListURL","checkNearIso","APP_VERSION","localStorageAvailable","self","wakeLockAvailable","navigator","notificationsAvailable","allowNotifications","fileSystemWritableAvail","firstInstall","isoTableSortDirections","faSortClasses","none","asc","desc","hotkeys","deferredPrompt","async","installPWA","prompt","userChoice","toggleNotifications","permission","requestPermission","launchSysNotification","checked","saveJSON","ToastNotification","hideNotification","showSaveButton","overwriteButton","disabled","applyTheming","autoThemeChange","onload","FileSystemHandle","FileSystemFileHandle","setting","loadSettingsStorage","serviceWorker","reg","register","remove","borderModeElements","add","serial","usb","serErrDiv","parentNode","serialConnect","serialDisconnect","listSerial","serDiv","serSettingsElements","serControlsElements","launchQueue","setConsumer","launchParams","files","file","getFile","fileEnding","toLowerCase","dataFileHandle","includes","getFileData","innerText","legacyPopupNotification","sVal","rVal","selectSerialType","selectFileType","settingsNotSaveAlert","getAutoScrollValue","autoscrollEnabled","settingsSaveAlert","getUTCHours","getUTCDate","getUTCMinutes","getUTCSeconds","formatSelector","formatLen","options","selectedIndex","themeSelector","themeLen","loadSettingsDefault","sizeCheck","settingsEnterPressElements","inputId","settingsName","valueElement","onkeydown","event","changeSettings","buttonElement","onclick","onchange","bindInputs","menuElements","button","toggleCalChartElement","toggleEvolChartElement","toggleCalChart","toogleEvolChart","isoTable","thList","querySelectorAll","th","columnIndex","Number","dataset","sortBy","sortDirection","loopTableHeader","sortIcon","querySelector","sortTableByColumn","offcanvasElement","contains","Offcanvas","settingsButton","buttonId","altKey","preventDefault","repeat","bindHotkeys","loadingOverlay","onbeforeunload","returnValue","onpagehide","removeItem","onresize","userAgent","match","reload","clickFileInput","openFileTypes","accept","backgroundFileHandle","prevClickLine","showOpenFilePicker","openFilePickerOptions","types","multiple","fileHandle","fileExtension","importFile","input","FileReader","readAsText","onerror","date","rightDate","getTimezoneOffset","toISOString","startDate","endDate","fileData","fileDataTime","fileDataType","resetCal","displayCoeffs","calSettings","addImportLabel","toggleCal","jsonData","fileSelectModalElement","fileSelectModal","Modal","selectElement","dataPackage","checkJSONImportError","opt","optionValue","sampleInfo","resultData","importData","npesFileImport","csvData","finalizeFileImport","importErrorModalElement","fileImportErrorModal","deviceData","note","energySpectrum","backgroundEnergySpectrum","spectrum","eMeasurementTime","measurementTime","bgMeasurementTime","calDataObj","energyCalibration","coeffArray","coefficients","numCoeff","polynomialOrder","updateSpectrumCounts","updateSpectrumTime","removeFile","bindPlotEvents","loadAutosave","restore","objData","clientWidth","clientHeight","removeType","id","sCounts","bgCounts","getRecordTimeStamp","hardReset","changeAxis","toggleSma","loadIsotopes","thisValue","myPlot","on","hoverEvent","unHover","clickEvent","selectEvent","castKey","closestIso","roiElement","infoElement","range","calAxis","findPoints","numberOfPoints","binPoints","total","bg","net","readoutArray","invalid","validArray","pair","float1","float2","checkbox","arr","elem","point","toggleCalClick","addLeadingZero","number","getDateString","getFullYear","getMonth","getDate","getHours","getMinutes","getDateStringMin","toLocalIsoString","localIsoString","getSeconds","tzDate","makeXMLSpectrum","createElementNS","noc","sn","ec","coeffs","coeffObj","coeffsRev","po","tpc","vpc","mt","datapoint","generateXML","spectrumName","backgroundName","doc","implementation","createDocument","pi","createProcessingInstruction","insertBefore","firstChild","fv","rd","dcr","dcrName","st","et","si","tval","w","wval","v","vval","bsf","vis","XMLSerializer","serializeToString","makeJSONSpectrum","spec","numberOfChannels","validPulseCount","calObj","generateNPES","softwareName","downloadData","download","fileSelectData","package","getJSONSelectionData","oninput","parsedInput","changeSma","changeType","toggleCps","importCalButton","inputArr","importCal","join","outStr","downloadCal","handler","createWritable","overwriteFile","saveFileTypes","showSaveFilePicker","saveFilePickerOptions","suggestedName","newHandle","writableStream","isShown","hide","table","tbody","tBodies","rows","aCellValue","cells","bCellValue","aNumValue","bNumValue","localeCompare","comparison","append","toBeReset","resetSampleInfo","copyPeakFlag","useGaussPeakMode","metaDataString","useIdlePeakMode","printWindow","printDocument","metaData","tableHeadRow","cell1","cell2","cell3","cell4","cell5","cell6","cell7","tableBody","dataX","dataY","peak","xPosition","peakFWHM","energyResolution","sigmaMaxCenterDistance","LN2","peakCounterXMin","peakCounterXMax","spectrumValue","backgroundValue","xPos","row","insertRow","insertCell","toExponential","toImage","url","img","src","print","onafterprint","printReport","prevIso","serRecorder","recordingType","wakeLock","loadedIsos","loadingElement","cache","headers","isoError","successFlag","tableElement","energyArr","lowercaseName","charAt","uniqueName","cursor","clickBox","plotIsotope","strArr","status","newIso","wordArray","setItem","stringValue","checkValidity","boolVal","numVal","timeElements","elementIds","disconnectPort","portSelector","ports","getPorts","WebSerial","getDevices","WebUSBSerial","selectIndex","option","selectPort","selectedPort","newport","clearConsoleLog","pause","spinnerElements","ele","refreshRender","refreshMeta","autoSaveData","stop","release","clearTimeout","autosaveTimeout","refreshTimeout","metaTimeout","consoleTimeout","readSerial","portNumber","refreshConsole","selectBox","tableRows","checkBox","selectAll","useEnergyPeakMode","useIsotopePeakMode","findPeaks","clear","requestPort","requestDevice","filters","deviceFilters","requestSerial","consoleHistory","currentIndex","history","handleArrowKey","inputValue","sendSerial","reconnectConsole","scrollIntoView","behavior","block","autosaveBadgeElement","formatOptions","month","day","hour","minute","hour12","currentDateTimeString","Intl","DateTimeFormat","dateTime","nowTime","totalTimeElement","totalMeasTime","delta","progressBar","progressElement","progress","finishDelta","toggleAutoscroll","lastUpdate","firstLoad","startDelay","measTime","deltaLastRefresh","cpsValue","acc","mean"],"sourceRoot":""}